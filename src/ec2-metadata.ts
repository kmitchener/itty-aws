// Auto-generated by generate-ec2-metadata.ts from ec2-2016-11-15.json. DO NOT EDIT BY HAND.

export type ShapeKind =
  | "structure"
  | "list"
  | "map"
  | "string"
  | "integer"
  | "boolean"
  | "timestamp"
  | "blob"
  | "enum"
  | "double"
  | "long"
  | "float";

export interface MemberMeta {
  target: string;
  locationName?: string;
  queryName?: string;
  flattened?: boolean;
  timestampFormat?: "iso8601" | "epoch-seconds" | "http-date";
}

export interface ShapeMeta {
  type: ShapeKind;
  xmlName?: string;
  members?: Record<string, MemberMeta>;
  member?: MemberMeta;
  key?: MemberMeta;
  value?: MemberMeta;
  enum?: string[];
  flattened?: boolean;
}

export interface OperationMeta {
  name: string;
  input?: string;
  output?: string;
  responseWrapper?: string;
}

export interface Ec2ModelMeta {
  version: string;
  operations: Record<string, OperationMeta>;
  shapes: Record<string, ShapeMeta>;
}

export const ec2ModelMeta: Ec2ModelMeta = {
  version: "2016-11-15",
  operations: {
    AcceptAddressTransfer: {
      name: "AcceptAddressTransfer",
      input: "com.amazonaws.ec2#AcceptAddressTransferRequest",
      output: "com.amazonaws.ec2#AcceptAddressTransferResult",
      responseWrapper: "AcceptAddressTransferResponse",
    },
    AcceptCapacityReservationBillingOwnership: {
      name: "AcceptCapacityReservationBillingOwnership",
      input:
        "com.amazonaws.ec2#AcceptCapacityReservationBillingOwnershipRequest",
      output:
        "com.amazonaws.ec2#AcceptCapacityReservationBillingOwnershipResult",
      responseWrapper: "AcceptCapacityReservationBillingOwnershipResponse",
    },
    AcceptReservedInstancesExchangeQuote: {
      name: "AcceptReservedInstancesExchangeQuote",
      input: "com.amazonaws.ec2#AcceptReservedInstancesExchangeQuoteRequest",
      output: "com.amazonaws.ec2#AcceptReservedInstancesExchangeQuoteResult",
      responseWrapper: "AcceptReservedInstancesExchangeQuoteResponse",
    },
    AcceptTransitGatewayMulticastDomainAssociations: {
      name: "AcceptTransitGatewayMulticastDomainAssociations",
      input:
        "com.amazonaws.ec2#AcceptTransitGatewayMulticastDomainAssociationsRequest",
      output:
        "com.amazonaws.ec2#AcceptTransitGatewayMulticastDomainAssociationsResult",
      responseWrapper:
        "AcceptTransitGatewayMulticastDomainAssociationsResponse",
    },
    AcceptTransitGatewayPeeringAttachment: {
      name: "AcceptTransitGatewayPeeringAttachment",
      input: "com.amazonaws.ec2#AcceptTransitGatewayPeeringAttachmentRequest",
      output: "com.amazonaws.ec2#AcceptTransitGatewayPeeringAttachmentResult",
      responseWrapper: "AcceptTransitGatewayPeeringAttachmentResponse",
    },
    AcceptTransitGatewayVpcAttachment: {
      name: "AcceptTransitGatewayVpcAttachment",
      input: "com.amazonaws.ec2#AcceptTransitGatewayVpcAttachmentRequest",
      output: "com.amazonaws.ec2#AcceptTransitGatewayVpcAttachmentResult",
      responseWrapper: "AcceptTransitGatewayVpcAttachmentResponse",
    },
    AcceptVpcEndpointConnections: {
      name: "AcceptVpcEndpointConnections",
      input: "com.amazonaws.ec2#AcceptVpcEndpointConnectionsRequest",
      output: "com.amazonaws.ec2#AcceptVpcEndpointConnectionsResult",
      responseWrapper: "AcceptVpcEndpointConnectionsResponse",
    },
    AcceptVpcPeeringConnection: {
      name: "AcceptVpcPeeringConnection",
      input: "com.amazonaws.ec2#AcceptVpcPeeringConnectionRequest",
      output: "com.amazonaws.ec2#AcceptVpcPeeringConnectionResult",
      responseWrapper: "AcceptVpcPeeringConnectionResponse",
    },
    AdvertiseByoipCidr: {
      name: "AdvertiseByoipCidr",
      input: "com.amazonaws.ec2#AdvertiseByoipCidrRequest",
      output: "com.amazonaws.ec2#AdvertiseByoipCidrResult",
      responseWrapper: "AdvertiseByoipCidrResponse",
    },
    AllocateAddress: {
      name: "AllocateAddress",
      input: "com.amazonaws.ec2#AllocateAddressRequest",
      output: "com.amazonaws.ec2#AllocateAddressResult",
      responseWrapper: "AllocateAddressResponse",
    },
    AllocateHosts: {
      name: "AllocateHosts",
      input: "com.amazonaws.ec2#AllocateHostsRequest",
      output: "com.amazonaws.ec2#AllocateHostsResult",
      responseWrapper: "AllocateHostsResponse",
    },
    AllocateIpamPoolCidr: {
      name: "AllocateIpamPoolCidr",
      input: "com.amazonaws.ec2#AllocateIpamPoolCidrRequest",
      output: "com.amazonaws.ec2#AllocateIpamPoolCidrResult",
      responseWrapper: "AllocateIpamPoolCidrResponse",
    },
    ApplySecurityGroupsToClientVpnTargetNetwork: {
      name: "ApplySecurityGroupsToClientVpnTargetNetwork",
      input:
        "com.amazonaws.ec2#ApplySecurityGroupsToClientVpnTargetNetworkRequest",
      output:
        "com.amazonaws.ec2#ApplySecurityGroupsToClientVpnTargetNetworkResult",
      responseWrapper: "ApplySecurityGroupsToClientVpnTargetNetworkResponse",
    },
    AssignIpv6Addresses: {
      name: "AssignIpv6Addresses",
      input: "com.amazonaws.ec2#AssignIpv6AddressesRequest",
      output: "com.amazonaws.ec2#AssignIpv6AddressesResult",
      responseWrapper: "AssignIpv6AddressesResponse",
    },
    AssignPrivateIpAddresses: {
      name: "AssignPrivateIpAddresses",
      input: "com.amazonaws.ec2#AssignPrivateIpAddressesRequest",
      output: "com.amazonaws.ec2#AssignPrivateIpAddressesResult",
      responseWrapper: "AssignPrivateIpAddressesResponse",
    },
    AssignPrivateNatGatewayAddress: {
      name: "AssignPrivateNatGatewayAddress",
      input: "com.amazonaws.ec2#AssignPrivateNatGatewayAddressRequest",
      output: "com.amazonaws.ec2#AssignPrivateNatGatewayAddressResult",
      responseWrapper: "AssignPrivateNatGatewayAddressResponse",
    },
    AssociateAddress: {
      name: "AssociateAddress",
      input: "com.amazonaws.ec2#AssociateAddressRequest",
      output: "com.amazonaws.ec2#AssociateAddressResult",
      responseWrapper: "AssociateAddressResponse",
    },
    AssociateCapacityReservationBillingOwner: {
      name: "AssociateCapacityReservationBillingOwner",
      input:
        "com.amazonaws.ec2#AssociateCapacityReservationBillingOwnerRequest",
      output:
        "com.amazonaws.ec2#AssociateCapacityReservationBillingOwnerResult",
      responseWrapper: "AssociateCapacityReservationBillingOwnerResponse",
    },
    AssociateClientVpnTargetNetwork: {
      name: "AssociateClientVpnTargetNetwork",
      input: "com.amazonaws.ec2#AssociateClientVpnTargetNetworkRequest",
      output: "com.amazonaws.ec2#AssociateClientVpnTargetNetworkResult",
      responseWrapper: "AssociateClientVpnTargetNetworkResponse",
    },
    AssociateDhcpOptions: {
      name: "AssociateDhcpOptions",
      input: "com.amazonaws.ec2#AssociateDhcpOptionsRequest",
      output: "smithy.api#Unit",
      responseWrapper: "AssociateDhcpOptionsResponse",
    },
    AssociateEnclaveCertificateIamRole: {
      name: "AssociateEnclaveCertificateIamRole",
      input: "com.amazonaws.ec2#AssociateEnclaveCertificateIamRoleRequest",
      output: "com.amazonaws.ec2#AssociateEnclaveCertificateIamRoleResult",
      responseWrapper: "AssociateEnclaveCertificateIamRoleResponse",
    },
    AssociateIamInstanceProfile: {
      name: "AssociateIamInstanceProfile",
      input: "com.amazonaws.ec2#AssociateIamInstanceProfileRequest",
      output: "com.amazonaws.ec2#AssociateIamInstanceProfileResult",
      responseWrapper: "AssociateIamInstanceProfileResponse",
    },
    AssociateInstanceEventWindow: {
      name: "AssociateInstanceEventWindow",
      input: "com.amazonaws.ec2#AssociateInstanceEventWindowRequest",
      output: "com.amazonaws.ec2#AssociateInstanceEventWindowResult",
      responseWrapper: "AssociateInstanceEventWindowResponse",
    },
    AssociateIpamByoasn: {
      name: "AssociateIpamByoasn",
      input: "com.amazonaws.ec2#AssociateIpamByoasnRequest",
      output: "com.amazonaws.ec2#AssociateIpamByoasnResult",
      responseWrapper: "AssociateIpamByoasnResponse",
    },
    AssociateIpamResourceDiscovery: {
      name: "AssociateIpamResourceDiscovery",
      input: "com.amazonaws.ec2#AssociateIpamResourceDiscoveryRequest",
      output: "com.amazonaws.ec2#AssociateIpamResourceDiscoveryResult",
      responseWrapper: "AssociateIpamResourceDiscoveryResponse",
    },
    AssociateNatGatewayAddress: {
      name: "AssociateNatGatewayAddress",
      input: "com.amazonaws.ec2#AssociateNatGatewayAddressRequest",
      output: "com.amazonaws.ec2#AssociateNatGatewayAddressResult",
      responseWrapper: "AssociateNatGatewayAddressResponse",
    },
    AssociateRouteServer: {
      name: "AssociateRouteServer",
      input: "com.amazonaws.ec2#AssociateRouteServerRequest",
      output: "com.amazonaws.ec2#AssociateRouteServerResult",
      responseWrapper: "AssociateRouteServerResponse",
    },
    AssociateRouteTable: {
      name: "AssociateRouteTable",
      input: "com.amazonaws.ec2#AssociateRouteTableRequest",
      output: "com.amazonaws.ec2#AssociateRouteTableResult",
      responseWrapper: "AssociateRouteTableResponse",
    },
    AssociateSecurityGroupVpc: {
      name: "AssociateSecurityGroupVpc",
      input: "com.amazonaws.ec2#AssociateSecurityGroupVpcRequest",
      output: "com.amazonaws.ec2#AssociateSecurityGroupVpcResult",
      responseWrapper: "AssociateSecurityGroupVpcResponse",
    },
    AssociateSubnetCidrBlock: {
      name: "AssociateSubnetCidrBlock",
      input: "com.amazonaws.ec2#AssociateSubnetCidrBlockRequest",
      output: "com.amazonaws.ec2#AssociateSubnetCidrBlockResult",
      responseWrapper: "AssociateSubnetCidrBlockResponse",
    },
    AssociateTransitGatewayMulticastDomain: {
      name: "AssociateTransitGatewayMulticastDomain",
      input: "com.amazonaws.ec2#AssociateTransitGatewayMulticastDomainRequest",
      output: "com.amazonaws.ec2#AssociateTransitGatewayMulticastDomainResult",
      responseWrapper: "AssociateTransitGatewayMulticastDomainResponse",
    },
    AssociateTransitGatewayPolicyTable: {
      name: "AssociateTransitGatewayPolicyTable",
      input: "com.amazonaws.ec2#AssociateTransitGatewayPolicyTableRequest",
      output: "com.amazonaws.ec2#AssociateTransitGatewayPolicyTableResult",
      responseWrapper: "AssociateTransitGatewayPolicyTableResponse",
    },
    AssociateTransitGatewayRouteTable: {
      name: "AssociateTransitGatewayRouteTable",
      input: "com.amazonaws.ec2#AssociateTransitGatewayRouteTableRequest",
      output: "com.amazonaws.ec2#AssociateTransitGatewayRouteTableResult",
      responseWrapper: "AssociateTransitGatewayRouteTableResponse",
    },
    AssociateTrunkInterface: {
      name: "AssociateTrunkInterface",
      input: "com.amazonaws.ec2#AssociateTrunkInterfaceRequest",
      output: "com.amazonaws.ec2#AssociateTrunkInterfaceResult",
      responseWrapper: "AssociateTrunkInterfaceResponse",
    },
    AssociateVpcCidrBlock: {
      name: "AssociateVpcCidrBlock",
      input: "com.amazonaws.ec2#AssociateVpcCidrBlockRequest",
      output: "com.amazonaws.ec2#AssociateVpcCidrBlockResult",
      responseWrapper: "AssociateVpcCidrBlockResponse",
    },
    AttachClassicLinkVpc: {
      name: "AttachClassicLinkVpc",
      input: "com.amazonaws.ec2#AttachClassicLinkVpcRequest",
      output: "com.amazonaws.ec2#AttachClassicLinkVpcResult",
      responseWrapper: "AttachClassicLinkVpcResponse",
    },
    AttachInternetGateway: {
      name: "AttachInternetGateway",
      input: "com.amazonaws.ec2#AttachInternetGatewayRequest",
      output: "smithy.api#Unit",
      responseWrapper: "AttachInternetGatewayResponse",
    },
    AttachNetworkInterface: {
      name: "AttachNetworkInterface",
      input: "com.amazonaws.ec2#AttachNetworkInterfaceRequest",
      output: "com.amazonaws.ec2#AttachNetworkInterfaceResult",
      responseWrapper: "AttachNetworkInterfaceResponse",
    },
    AttachVerifiedAccessTrustProvider: {
      name: "AttachVerifiedAccessTrustProvider",
      input: "com.amazonaws.ec2#AttachVerifiedAccessTrustProviderRequest",
      output: "com.amazonaws.ec2#AttachVerifiedAccessTrustProviderResult",
      responseWrapper: "AttachVerifiedAccessTrustProviderResponse",
    },
    AttachVolume: {
      name: "AttachVolume",
      input: "com.amazonaws.ec2#AttachVolumeRequest",
      output: "com.amazonaws.ec2#VolumeAttachment",
      responseWrapper: "AttachVolumeResponse",
    },
    AttachVpnGateway: {
      name: "AttachVpnGateway",
      input: "com.amazonaws.ec2#AttachVpnGatewayRequest",
      output: "com.amazonaws.ec2#AttachVpnGatewayResult",
      responseWrapper: "AttachVpnGatewayResponse",
    },
    AuthorizeClientVpnIngress: {
      name: "AuthorizeClientVpnIngress",
      input: "com.amazonaws.ec2#AuthorizeClientVpnIngressRequest",
      output: "com.amazonaws.ec2#AuthorizeClientVpnIngressResult",
      responseWrapper: "AuthorizeClientVpnIngressResponse",
    },
    AuthorizeSecurityGroupEgress: {
      name: "AuthorizeSecurityGroupEgress",
      input: "com.amazonaws.ec2#AuthorizeSecurityGroupEgressRequest",
      output: "com.amazonaws.ec2#AuthorizeSecurityGroupEgressResult",
      responseWrapper: "AuthorizeSecurityGroupEgressResponse",
    },
    AuthorizeSecurityGroupIngress: {
      name: "AuthorizeSecurityGroupIngress",
      input: "com.amazonaws.ec2#AuthorizeSecurityGroupIngressRequest",
      output: "com.amazonaws.ec2#AuthorizeSecurityGroupIngressResult",
      responseWrapper: "AuthorizeSecurityGroupIngressResponse",
    },
    BundleInstance: {
      name: "BundleInstance",
      input: "com.amazonaws.ec2#BundleInstanceRequest",
      output: "com.amazonaws.ec2#BundleInstanceResult",
      responseWrapper: "BundleInstanceResponse",
    },
    CancelBundleTask: {
      name: "CancelBundleTask",
      input: "com.amazonaws.ec2#CancelBundleTaskRequest",
      output: "com.amazonaws.ec2#CancelBundleTaskResult",
      responseWrapper: "CancelBundleTaskResponse",
    },
    CancelCapacityReservation: {
      name: "CancelCapacityReservation",
      input: "com.amazonaws.ec2#CancelCapacityReservationRequest",
      output: "com.amazonaws.ec2#CancelCapacityReservationResult",
      responseWrapper: "CancelCapacityReservationResponse",
    },
    CancelCapacityReservationFleets: {
      name: "CancelCapacityReservationFleets",
      input: "com.amazonaws.ec2#CancelCapacityReservationFleetsRequest",
      output: "com.amazonaws.ec2#CancelCapacityReservationFleetsResult",
      responseWrapper: "CancelCapacityReservationFleetsResponse",
    },
    CancelConversionTask: {
      name: "CancelConversionTask",
      input: "com.amazonaws.ec2#CancelConversionRequest",
      output: "smithy.api#Unit",
      responseWrapper: "CancelConversionTaskResponse",
    },
    CancelDeclarativePoliciesReport: {
      name: "CancelDeclarativePoliciesReport",
      input: "com.amazonaws.ec2#CancelDeclarativePoliciesReportRequest",
      output: "com.amazonaws.ec2#CancelDeclarativePoliciesReportResult",
      responseWrapper: "CancelDeclarativePoliciesReportResponse",
    },
    CancelExportTask: {
      name: "CancelExportTask",
      input: "com.amazonaws.ec2#CancelExportTaskRequest",
      output: "smithy.api#Unit",
      responseWrapper: "CancelExportTaskResponse",
    },
    CancelImageLaunchPermission: {
      name: "CancelImageLaunchPermission",
      input: "com.amazonaws.ec2#CancelImageLaunchPermissionRequest",
      output: "com.amazonaws.ec2#CancelImageLaunchPermissionResult",
      responseWrapper: "CancelImageLaunchPermissionResponse",
    },
    CancelImportTask: {
      name: "CancelImportTask",
      input: "com.amazonaws.ec2#CancelImportTaskRequest",
      output: "com.amazonaws.ec2#CancelImportTaskResult",
      responseWrapper: "CancelImportTaskResponse",
    },
    CancelReservedInstancesListing: {
      name: "CancelReservedInstancesListing",
      input: "com.amazonaws.ec2#CancelReservedInstancesListingRequest",
      output: "com.amazonaws.ec2#CancelReservedInstancesListingResult",
      responseWrapper: "CancelReservedInstancesListingResponse",
    },
    CancelSpotFleetRequests: {
      name: "CancelSpotFleetRequests",
      input: "com.amazonaws.ec2#CancelSpotFleetRequestsRequest",
      output: "com.amazonaws.ec2#CancelSpotFleetRequestsResponse",
      responseWrapper: "CancelSpotFleetRequestsResponse",
    },
    CancelSpotInstanceRequests: {
      name: "CancelSpotInstanceRequests",
      input: "com.amazonaws.ec2#CancelSpotInstanceRequestsRequest",
      output: "com.amazonaws.ec2#CancelSpotInstanceRequestsResult",
      responseWrapper: "CancelSpotInstanceRequestsResponse",
    },
    ConfirmProductInstance: {
      name: "ConfirmProductInstance",
      input: "com.amazonaws.ec2#ConfirmProductInstanceRequest",
      output: "com.amazonaws.ec2#ConfirmProductInstanceResult",
      responseWrapper: "ConfirmProductInstanceResponse",
    },
    CopyFpgaImage: {
      name: "CopyFpgaImage",
      input: "com.amazonaws.ec2#CopyFpgaImageRequest",
      output: "com.amazonaws.ec2#CopyFpgaImageResult",
      responseWrapper: "CopyFpgaImageResponse",
    },
    CopyImage: {
      name: "CopyImage",
      input: "com.amazonaws.ec2#CopyImageRequest",
      output: "com.amazonaws.ec2#CopyImageResult",
      responseWrapper: "CopyImageResponse",
    },
    CopySnapshot: {
      name: "CopySnapshot",
      input: "com.amazonaws.ec2#CopySnapshotRequest",
      output: "com.amazonaws.ec2#CopySnapshotResult",
      responseWrapper: "CopySnapshotResponse",
    },
    CreateCapacityReservation: {
      name: "CreateCapacityReservation",
      input: "com.amazonaws.ec2#CreateCapacityReservationRequest",
      output: "com.amazonaws.ec2#CreateCapacityReservationResult",
      responseWrapper: "CreateCapacityReservationResponse",
    },
    CreateCapacityReservationBySplitting: {
      name: "CreateCapacityReservationBySplitting",
      input: "com.amazonaws.ec2#CreateCapacityReservationBySplittingRequest",
      output: "com.amazonaws.ec2#CreateCapacityReservationBySplittingResult",
      responseWrapper: "CreateCapacityReservationBySplittingResponse",
    },
    CreateCapacityReservationFleet: {
      name: "CreateCapacityReservationFleet",
      input: "com.amazonaws.ec2#CreateCapacityReservationFleetRequest",
      output: "com.amazonaws.ec2#CreateCapacityReservationFleetResult",
      responseWrapper: "CreateCapacityReservationFleetResponse",
    },
    CreateCarrierGateway: {
      name: "CreateCarrierGateway",
      input: "com.amazonaws.ec2#CreateCarrierGatewayRequest",
      output: "com.amazonaws.ec2#CreateCarrierGatewayResult",
      responseWrapper: "CreateCarrierGatewayResponse",
    },
    CreateClientVpnEndpoint: {
      name: "CreateClientVpnEndpoint",
      input: "com.amazonaws.ec2#CreateClientVpnEndpointRequest",
      output: "com.amazonaws.ec2#CreateClientVpnEndpointResult",
      responseWrapper: "CreateClientVpnEndpointResponse",
    },
    CreateClientVpnRoute: {
      name: "CreateClientVpnRoute",
      input: "com.amazonaws.ec2#CreateClientVpnRouteRequest",
      output: "com.amazonaws.ec2#CreateClientVpnRouteResult",
      responseWrapper: "CreateClientVpnRouteResponse",
    },
    CreateCoipCidr: {
      name: "CreateCoipCidr",
      input: "com.amazonaws.ec2#CreateCoipCidrRequest",
      output: "com.amazonaws.ec2#CreateCoipCidrResult",
      responseWrapper: "CreateCoipCidrResponse",
    },
    CreateCoipPool: {
      name: "CreateCoipPool",
      input: "com.amazonaws.ec2#CreateCoipPoolRequest",
      output: "com.amazonaws.ec2#CreateCoipPoolResult",
      responseWrapper: "CreateCoipPoolResponse",
    },
    CreateCustomerGateway: {
      name: "CreateCustomerGateway",
      input: "com.amazonaws.ec2#CreateCustomerGatewayRequest",
      output: "com.amazonaws.ec2#CreateCustomerGatewayResult",
      responseWrapper: "CreateCustomerGatewayResponse",
    },
    CreateDefaultSubnet: {
      name: "CreateDefaultSubnet",
      input: "com.amazonaws.ec2#CreateDefaultSubnetRequest",
      output: "com.amazonaws.ec2#CreateDefaultSubnetResult",
      responseWrapper: "CreateDefaultSubnetResponse",
    },
    CreateDefaultVpc: {
      name: "CreateDefaultVpc",
      input: "com.amazonaws.ec2#CreateDefaultVpcRequest",
      output: "com.amazonaws.ec2#CreateDefaultVpcResult",
      responseWrapper: "CreateDefaultVpcResponse",
    },
    CreateDelegateMacVolumeOwnershipTask: {
      name: "CreateDelegateMacVolumeOwnershipTask",
      input: "com.amazonaws.ec2#CreateDelegateMacVolumeOwnershipTaskRequest",
      output: "com.amazonaws.ec2#CreateDelegateMacVolumeOwnershipTaskResult",
      responseWrapper: "CreateDelegateMacVolumeOwnershipTaskResponse",
    },
    CreateDhcpOptions: {
      name: "CreateDhcpOptions",
      input: "com.amazonaws.ec2#CreateDhcpOptionsRequest",
      output: "com.amazonaws.ec2#CreateDhcpOptionsResult",
      responseWrapper: "CreateDhcpOptionsResponse",
    },
    CreateEgressOnlyInternetGateway: {
      name: "CreateEgressOnlyInternetGateway",
      input: "com.amazonaws.ec2#CreateEgressOnlyInternetGatewayRequest",
      output: "com.amazonaws.ec2#CreateEgressOnlyInternetGatewayResult",
      responseWrapper: "CreateEgressOnlyInternetGatewayResponse",
    },
    CreateFleet: {
      name: "CreateFleet",
      input: "com.amazonaws.ec2#CreateFleetRequest",
      output: "com.amazonaws.ec2#CreateFleetResult",
      responseWrapper: "CreateFleetResponse",
    },
    CreateFlowLogs: {
      name: "CreateFlowLogs",
      input: "com.amazonaws.ec2#CreateFlowLogsRequest",
      output: "com.amazonaws.ec2#CreateFlowLogsResult",
      responseWrapper: "CreateFlowLogsResponse",
    },
    CreateFpgaImage: {
      name: "CreateFpgaImage",
      input: "com.amazonaws.ec2#CreateFpgaImageRequest",
      output: "com.amazonaws.ec2#CreateFpgaImageResult",
      responseWrapper: "CreateFpgaImageResponse",
    },
    CreateImage: {
      name: "CreateImage",
      input: "com.amazonaws.ec2#CreateImageRequest",
      output: "com.amazonaws.ec2#CreateImageResult",
      responseWrapper: "CreateImageResponse",
    },
    CreateInstanceConnectEndpoint: {
      name: "CreateInstanceConnectEndpoint",
      input: "com.amazonaws.ec2#CreateInstanceConnectEndpointRequest",
      output: "com.amazonaws.ec2#CreateInstanceConnectEndpointResult",
      responseWrapper: "CreateInstanceConnectEndpointResponse",
    },
    CreateInstanceEventWindow: {
      name: "CreateInstanceEventWindow",
      input: "com.amazonaws.ec2#CreateInstanceEventWindowRequest",
      output: "com.amazonaws.ec2#CreateInstanceEventWindowResult",
      responseWrapper: "CreateInstanceEventWindowResponse",
    },
    CreateInstanceExportTask: {
      name: "CreateInstanceExportTask",
      input: "com.amazonaws.ec2#CreateInstanceExportTaskRequest",
      output: "com.amazonaws.ec2#CreateInstanceExportTaskResult",
      responseWrapper: "CreateInstanceExportTaskResponse",
    },
    CreateInternetGateway: {
      name: "CreateInternetGateway",
      input: "com.amazonaws.ec2#CreateInternetGatewayRequest",
      output: "com.amazonaws.ec2#CreateInternetGatewayResult",
      responseWrapper: "CreateInternetGatewayResponse",
    },
    CreateIpam: {
      name: "CreateIpam",
      input: "com.amazonaws.ec2#CreateIpamRequest",
      output: "com.amazonaws.ec2#CreateIpamResult",
      responseWrapper: "CreateIpamResponse",
    },
    CreateIpamExternalResourceVerificationToken: {
      name: "CreateIpamExternalResourceVerificationToken",
      input:
        "com.amazonaws.ec2#CreateIpamExternalResourceVerificationTokenRequest",
      output:
        "com.amazonaws.ec2#CreateIpamExternalResourceVerificationTokenResult",
      responseWrapper: "CreateIpamExternalResourceVerificationTokenResponse",
    },
    CreateIpamPool: {
      name: "CreateIpamPool",
      input: "com.amazonaws.ec2#CreateIpamPoolRequest",
      output: "com.amazonaws.ec2#CreateIpamPoolResult",
      responseWrapper: "CreateIpamPoolResponse",
    },
    CreateIpamResourceDiscovery: {
      name: "CreateIpamResourceDiscovery",
      input: "com.amazonaws.ec2#CreateIpamResourceDiscoveryRequest",
      output: "com.amazonaws.ec2#CreateIpamResourceDiscoveryResult",
      responseWrapper: "CreateIpamResourceDiscoveryResponse",
    },
    CreateIpamScope: {
      name: "CreateIpamScope",
      input: "com.amazonaws.ec2#CreateIpamScopeRequest",
      output: "com.amazonaws.ec2#CreateIpamScopeResult",
      responseWrapper: "CreateIpamScopeResponse",
    },
    CreateKeyPair: {
      name: "CreateKeyPair",
      input: "com.amazonaws.ec2#CreateKeyPairRequest",
      output: "com.amazonaws.ec2#KeyPair",
      responseWrapper: "CreateKeyPairResponse",
    },
    CreateLaunchTemplate: {
      name: "CreateLaunchTemplate",
      input: "com.amazonaws.ec2#CreateLaunchTemplateRequest",
      output: "com.amazonaws.ec2#CreateLaunchTemplateResult",
      responseWrapper: "CreateLaunchTemplateResponse",
    },
    CreateLaunchTemplateVersion: {
      name: "CreateLaunchTemplateVersion",
      input: "com.amazonaws.ec2#CreateLaunchTemplateVersionRequest",
      output: "com.amazonaws.ec2#CreateLaunchTemplateVersionResult",
      responseWrapper: "CreateLaunchTemplateVersionResponse",
    },
    CreateLocalGatewayRoute: {
      name: "CreateLocalGatewayRoute",
      input: "com.amazonaws.ec2#CreateLocalGatewayRouteRequest",
      output: "com.amazonaws.ec2#CreateLocalGatewayRouteResult",
      responseWrapper: "CreateLocalGatewayRouteResponse",
    },
    CreateLocalGatewayRouteTable: {
      name: "CreateLocalGatewayRouteTable",
      input: "com.amazonaws.ec2#CreateLocalGatewayRouteTableRequest",
      output: "com.amazonaws.ec2#CreateLocalGatewayRouteTableResult",
      responseWrapper: "CreateLocalGatewayRouteTableResponse",
    },
    CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation: {
      name: "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      input:
        "com.amazonaws.ec2#CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest",
      output:
        "com.amazonaws.ec2#CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult",
      responseWrapper:
        "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse",
    },
    CreateLocalGatewayRouteTableVpcAssociation: {
      name: "CreateLocalGatewayRouteTableVpcAssociation",
      input:
        "com.amazonaws.ec2#CreateLocalGatewayRouteTableVpcAssociationRequest",
      output:
        "com.amazonaws.ec2#CreateLocalGatewayRouteTableVpcAssociationResult",
      responseWrapper: "CreateLocalGatewayRouteTableVpcAssociationResponse",
    },
    CreateLocalGatewayVirtualInterface: {
      name: "CreateLocalGatewayVirtualInterface",
      input: "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceRequest",
      output: "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceResult",
      responseWrapper: "CreateLocalGatewayVirtualInterfaceResponse",
    },
    CreateLocalGatewayVirtualInterfaceGroup: {
      name: "CreateLocalGatewayVirtualInterfaceGroup",
      input: "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceGroupRequest",
      output: "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceGroupResult",
      responseWrapper: "CreateLocalGatewayVirtualInterfaceGroupResponse",
    },
    CreateMacSystemIntegrityProtectionModificationTask: {
      name: "CreateMacSystemIntegrityProtectionModificationTask",
      input:
        "com.amazonaws.ec2#CreateMacSystemIntegrityProtectionModificationTaskRequest",
      output:
        "com.amazonaws.ec2#CreateMacSystemIntegrityProtectionModificationTaskResult",
      responseWrapper:
        "CreateMacSystemIntegrityProtectionModificationTaskResponse",
    },
    CreateManagedPrefixList: {
      name: "CreateManagedPrefixList",
      input: "com.amazonaws.ec2#CreateManagedPrefixListRequest",
      output: "com.amazonaws.ec2#CreateManagedPrefixListResult",
      responseWrapper: "CreateManagedPrefixListResponse",
    },
    CreateNatGateway: {
      name: "CreateNatGateway",
      input: "com.amazonaws.ec2#CreateNatGatewayRequest",
      output: "com.amazonaws.ec2#CreateNatGatewayResult",
      responseWrapper: "CreateNatGatewayResponse",
    },
    CreateNetworkAcl: {
      name: "CreateNetworkAcl",
      input: "com.amazonaws.ec2#CreateNetworkAclRequest",
      output: "com.amazonaws.ec2#CreateNetworkAclResult",
      responseWrapper: "CreateNetworkAclResponse",
    },
    CreateNetworkAclEntry: {
      name: "CreateNetworkAclEntry",
      input: "com.amazonaws.ec2#CreateNetworkAclEntryRequest",
      output: "smithy.api#Unit",
      responseWrapper: "CreateNetworkAclEntryResponse",
    },
    CreateNetworkInsightsAccessScope: {
      name: "CreateNetworkInsightsAccessScope",
      input: "com.amazonaws.ec2#CreateNetworkInsightsAccessScopeRequest",
      output: "com.amazonaws.ec2#CreateNetworkInsightsAccessScopeResult",
      responseWrapper: "CreateNetworkInsightsAccessScopeResponse",
    },
    CreateNetworkInsightsPath: {
      name: "CreateNetworkInsightsPath",
      input: "com.amazonaws.ec2#CreateNetworkInsightsPathRequest",
      output: "com.amazonaws.ec2#CreateNetworkInsightsPathResult",
      responseWrapper: "CreateNetworkInsightsPathResponse",
    },
    CreateNetworkInterface: {
      name: "CreateNetworkInterface",
      input: "com.amazonaws.ec2#CreateNetworkInterfaceRequest",
      output: "com.amazonaws.ec2#CreateNetworkInterfaceResult",
      responseWrapper: "CreateNetworkInterfaceResponse",
    },
    CreateNetworkInterfacePermission: {
      name: "CreateNetworkInterfacePermission",
      input: "com.amazonaws.ec2#CreateNetworkInterfacePermissionRequest",
      output: "com.amazonaws.ec2#CreateNetworkInterfacePermissionResult",
      responseWrapper: "CreateNetworkInterfacePermissionResponse",
    },
    CreatePlacementGroup: {
      name: "CreatePlacementGroup",
      input: "com.amazonaws.ec2#CreatePlacementGroupRequest",
      output: "com.amazonaws.ec2#CreatePlacementGroupResult",
      responseWrapper: "CreatePlacementGroupResponse",
    },
    CreatePublicIpv4Pool: {
      name: "CreatePublicIpv4Pool",
      input: "com.amazonaws.ec2#CreatePublicIpv4PoolRequest",
      output: "com.amazonaws.ec2#CreatePublicIpv4PoolResult",
      responseWrapper: "CreatePublicIpv4PoolResponse",
    },
    CreateReplaceRootVolumeTask: {
      name: "CreateReplaceRootVolumeTask",
      input: "com.amazonaws.ec2#CreateReplaceRootVolumeTaskRequest",
      output: "com.amazonaws.ec2#CreateReplaceRootVolumeTaskResult",
      responseWrapper: "CreateReplaceRootVolumeTaskResponse",
    },
    CreateReservedInstancesListing: {
      name: "CreateReservedInstancesListing",
      input: "com.amazonaws.ec2#CreateReservedInstancesListingRequest",
      output: "com.amazonaws.ec2#CreateReservedInstancesListingResult",
      responseWrapper: "CreateReservedInstancesListingResponse",
    },
    CreateRestoreImageTask: {
      name: "CreateRestoreImageTask",
      input: "com.amazonaws.ec2#CreateRestoreImageTaskRequest",
      output: "com.amazonaws.ec2#CreateRestoreImageTaskResult",
      responseWrapper: "CreateRestoreImageTaskResponse",
    },
    CreateRoute: {
      name: "CreateRoute",
      input: "com.amazonaws.ec2#CreateRouteRequest",
      output: "com.amazonaws.ec2#CreateRouteResult",
      responseWrapper: "CreateRouteResponse",
    },
    CreateRouteServer: {
      name: "CreateRouteServer",
      input: "com.amazonaws.ec2#CreateRouteServerRequest",
      output: "com.amazonaws.ec2#CreateRouteServerResult",
      responseWrapper: "CreateRouteServerResponse",
    },
    CreateRouteServerEndpoint: {
      name: "CreateRouteServerEndpoint",
      input: "com.amazonaws.ec2#CreateRouteServerEndpointRequest",
      output: "com.amazonaws.ec2#CreateRouteServerEndpointResult",
      responseWrapper: "CreateRouteServerEndpointResponse",
    },
    CreateRouteServerPeer: {
      name: "CreateRouteServerPeer",
      input: "com.amazonaws.ec2#CreateRouteServerPeerRequest",
      output: "com.amazonaws.ec2#CreateRouteServerPeerResult",
      responseWrapper: "CreateRouteServerPeerResponse",
    },
    CreateRouteTable: {
      name: "CreateRouteTable",
      input: "com.amazonaws.ec2#CreateRouteTableRequest",
      output: "com.amazonaws.ec2#CreateRouteTableResult",
      responseWrapper: "CreateRouteTableResponse",
    },
    CreateSecurityGroup: {
      name: "CreateSecurityGroup",
      input: "com.amazonaws.ec2#CreateSecurityGroupRequest",
      output: "com.amazonaws.ec2#CreateSecurityGroupResult",
      responseWrapper: "CreateSecurityGroupResponse",
    },
    CreateSnapshot: {
      name: "CreateSnapshot",
      input: "com.amazonaws.ec2#CreateSnapshotRequest",
      output: "com.amazonaws.ec2#Snapshot",
      responseWrapper: "CreateSnapshotResponse",
    },
    CreateSnapshots: {
      name: "CreateSnapshots",
      input: "com.amazonaws.ec2#CreateSnapshotsRequest",
      output: "com.amazonaws.ec2#CreateSnapshotsResult",
      responseWrapper: "CreateSnapshotsResponse",
    },
    CreateSpotDatafeedSubscription: {
      name: "CreateSpotDatafeedSubscription",
      input: "com.amazonaws.ec2#CreateSpotDatafeedSubscriptionRequest",
      output: "com.amazonaws.ec2#CreateSpotDatafeedSubscriptionResult",
      responseWrapper: "CreateSpotDatafeedSubscriptionResponse",
    },
    CreateStoreImageTask: {
      name: "CreateStoreImageTask",
      input: "com.amazonaws.ec2#CreateStoreImageTaskRequest",
      output: "com.amazonaws.ec2#CreateStoreImageTaskResult",
      responseWrapper: "CreateStoreImageTaskResponse",
    },
    CreateSubnet: {
      name: "CreateSubnet",
      input: "com.amazonaws.ec2#CreateSubnetRequest",
      output: "com.amazonaws.ec2#CreateSubnetResult",
      responseWrapper: "CreateSubnetResponse",
    },
    CreateSubnetCidrReservation: {
      name: "CreateSubnetCidrReservation",
      input: "com.amazonaws.ec2#CreateSubnetCidrReservationRequest",
      output: "com.amazonaws.ec2#CreateSubnetCidrReservationResult",
      responseWrapper: "CreateSubnetCidrReservationResponse",
    },
    CreateTags: {
      name: "CreateTags",
      input: "com.amazonaws.ec2#CreateTagsRequest",
      output: "smithy.api#Unit",
      responseWrapper: "CreateTagsResponse",
    },
    CreateTrafficMirrorFilter: {
      name: "CreateTrafficMirrorFilter",
      input: "com.amazonaws.ec2#CreateTrafficMirrorFilterRequest",
      output: "com.amazonaws.ec2#CreateTrafficMirrorFilterResult",
      responseWrapper: "CreateTrafficMirrorFilterResponse",
    },
    CreateTrafficMirrorFilterRule: {
      name: "CreateTrafficMirrorFilterRule",
      input: "com.amazonaws.ec2#CreateTrafficMirrorFilterRuleRequest",
      output: "com.amazonaws.ec2#CreateTrafficMirrorFilterRuleResult",
      responseWrapper: "CreateTrafficMirrorFilterRuleResponse",
    },
    CreateTrafficMirrorSession: {
      name: "CreateTrafficMirrorSession",
      input: "com.amazonaws.ec2#CreateTrafficMirrorSessionRequest",
      output: "com.amazonaws.ec2#CreateTrafficMirrorSessionResult",
      responseWrapper: "CreateTrafficMirrorSessionResponse",
    },
    CreateTrafficMirrorTarget: {
      name: "CreateTrafficMirrorTarget",
      input: "com.amazonaws.ec2#CreateTrafficMirrorTargetRequest",
      output: "com.amazonaws.ec2#CreateTrafficMirrorTargetResult",
      responseWrapper: "CreateTrafficMirrorTargetResponse",
    },
    CreateTransitGateway: {
      name: "CreateTransitGateway",
      input: "com.amazonaws.ec2#CreateTransitGatewayRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayResult",
      responseWrapper: "CreateTransitGatewayResponse",
    },
    CreateTransitGatewayConnect: {
      name: "CreateTransitGatewayConnect",
      input: "com.amazonaws.ec2#CreateTransitGatewayConnectRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayConnectResult",
      responseWrapper: "CreateTransitGatewayConnectResponse",
    },
    CreateTransitGatewayConnectPeer: {
      name: "CreateTransitGatewayConnectPeer",
      input: "com.amazonaws.ec2#CreateTransitGatewayConnectPeerRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayConnectPeerResult",
      responseWrapper: "CreateTransitGatewayConnectPeerResponse",
    },
    CreateTransitGatewayMulticastDomain: {
      name: "CreateTransitGatewayMulticastDomain",
      input: "com.amazonaws.ec2#CreateTransitGatewayMulticastDomainRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayMulticastDomainResult",
      responseWrapper: "CreateTransitGatewayMulticastDomainResponse",
    },
    CreateTransitGatewayPeeringAttachment: {
      name: "CreateTransitGatewayPeeringAttachment",
      input: "com.amazonaws.ec2#CreateTransitGatewayPeeringAttachmentRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayPeeringAttachmentResult",
      responseWrapper: "CreateTransitGatewayPeeringAttachmentResponse",
    },
    CreateTransitGatewayPolicyTable: {
      name: "CreateTransitGatewayPolicyTable",
      input: "com.amazonaws.ec2#CreateTransitGatewayPolicyTableRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayPolicyTableResult",
      responseWrapper: "CreateTransitGatewayPolicyTableResponse",
    },
    CreateTransitGatewayPrefixListReference: {
      name: "CreateTransitGatewayPrefixListReference",
      input: "com.amazonaws.ec2#CreateTransitGatewayPrefixListReferenceRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayPrefixListReferenceResult",
      responseWrapper: "CreateTransitGatewayPrefixListReferenceResponse",
    },
    CreateTransitGatewayRoute: {
      name: "CreateTransitGatewayRoute",
      input: "com.amazonaws.ec2#CreateTransitGatewayRouteRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayRouteResult",
      responseWrapper: "CreateTransitGatewayRouteResponse",
    },
    CreateTransitGatewayRouteTable: {
      name: "CreateTransitGatewayRouteTable",
      input: "com.amazonaws.ec2#CreateTransitGatewayRouteTableRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayRouteTableResult",
      responseWrapper: "CreateTransitGatewayRouteTableResponse",
    },
    CreateTransitGatewayRouteTableAnnouncement: {
      name: "CreateTransitGatewayRouteTableAnnouncement",
      input:
        "com.amazonaws.ec2#CreateTransitGatewayRouteTableAnnouncementRequest",
      output:
        "com.amazonaws.ec2#CreateTransitGatewayRouteTableAnnouncementResult",
      responseWrapper: "CreateTransitGatewayRouteTableAnnouncementResponse",
    },
    CreateTransitGatewayVpcAttachment: {
      name: "CreateTransitGatewayVpcAttachment",
      input: "com.amazonaws.ec2#CreateTransitGatewayVpcAttachmentRequest",
      output: "com.amazonaws.ec2#CreateTransitGatewayVpcAttachmentResult",
      responseWrapper: "CreateTransitGatewayVpcAttachmentResponse",
    },
    CreateVerifiedAccessEndpoint: {
      name: "CreateVerifiedAccessEndpoint",
      input: "com.amazonaws.ec2#CreateVerifiedAccessEndpointRequest",
      output: "com.amazonaws.ec2#CreateVerifiedAccessEndpointResult",
      responseWrapper: "CreateVerifiedAccessEndpointResponse",
    },
    CreateVerifiedAccessGroup: {
      name: "CreateVerifiedAccessGroup",
      input: "com.amazonaws.ec2#CreateVerifiedAccessGroupRequest",
      output: "com.amazonaws.ec2#CreateVerifiedAccessGroupResult",
      responseWrapper: "CreateVerifiedAccessGroupResponse",
    },
    CreateVerifiedAccessInstance: {
      name: "CreateVerifiedAccessInstance",
      input: "com.amazonaws.ec2#CreateVerifiedAccessInstanceRequest",
      output: "com.amazonaws.ec2#CreateVerifiedAccessInstanceResult",
      responseWrapper: "CreateVerifiedAccessInstanceResponse",
    },
    CreateVerifiedAccessTrustProvider: {
      name: "CreateVerifiedAccessTrustProvider",
      input: "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderRequest",
      output: "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderResult",
      responseWrapper: "CreateVerifiedAccessTrustProviderResponse",
    },
    CreateVolume: {
      name: "CreateVolume",
      input: "com.amazonaws.ec2#CreateVolumeRequest",
      output: "com.amazonaws.ec2#Volume",
      responseWrapper: "CreateVolumeResponse",
    },
    CreateVpc: {
      name: "CreateVpc",
      input: "com.amazonaws.ec2#CreateVpcRequest",
      output: "com.amazonaws.ec2#CreateVpcResult",
      responseWrapper: "CreateVpcResponse",
    },
    CreateVpcBlockPublicAccessExclusion: {
      name: "CreateVpcBlockPublicAccessExclusion",
      input: "com.amazonaws.ec2#CreateVpcBlockPublicAccessExclusionRequest",
      output: "com.amazonaws.ec2#CreateVpcBlockPublicAccessExclusionResult",
      responseWrapper: "CreateVpcBlockPublicAccessExclusionResponse",
    },
    CreateVpcEndpoint: {
      name: "CreateVpcEndpoint",
      input: "com.amazonaws.ec2#CreateVpcEndpointRequest",
      output: "com.amazonaws.ec2#CreateVpcEndpointResult",
      responseWrapper: "CreateVpcEndpointResponse",
    },
    CreateVpcEndpointConnectionNotification: {
      name: "CreateVpcEndpointConnectionNotification",
      input: "com.amazonaws.ec2#CreateVpcEndpointConnectionNotificationRequest",
      output: "com.amazonaws.ec2#CreateVpcEndpointConnectionNotificationResult",
      responseWrapper: "CreateVpcEndpointConnectionNotificationResponse",
    },
    CreateVpcEndpointServiceConfiguration: {
      name: "CreateVpcEndpointServiceConfiguration",
      input: "com.amazonaws.ec2#CreateVpcEndpointServiceConfigurationRequest",
      output: "com.amazonaws.ec2#CreateVpcEndpointServiceConfigurationResult",
      responseWrapper: "CreateVpcEndpointServiceConfigurationResponse",
    },
    CreateVpcPeeringConnection: {
      name: "CreateVpcPeeringConnection",
      input: "com.amazonaws.ec2#CreateVpcPeeringConnectionRequest",
      output: "com.amazonaws.ec2#CreateVpcPeeringConnectionResult",
      responseWrapper: "CreateVpcPeeringConnectionResponse",
    },
    CreateVpnConnection: {
      name: "CreateVpnConnection",
      input: "com.amazonaws.ec2#CreateVpnConnectionRequest",
      output: "com.amazonaws.ec2#CreateVpnConnectionResult",
      responseWrapper: "CreateVpnConnectionResponse",
    },
    CreateVpnConnectionRoute: {
      name: "CreateVpnConnectionRoute",
      input: "com.amazonaws.ec2#CreateVpnConnectionRouteRequest",
      output: "smithy.api#Unit",
      responseWrapper: "CreateVpnConnectionRouteResponse",
    },
    CreateVpnGateway: {
      name: "CreateVpnGateway",
      input: "com.amazonaws.ec2#CreateVpnGatewayRequest",
      output: "com.amazonaws.ec2#CreateVpnGatewayResult",
      responseWrapper: "CreateVpnGatewayResponse",
    },
    DeleteCarrierGateway: {
      name: "DeleteCarrierGateway",
      input: "com.amazonaws.ec2#DeleteCarrierGatewayRequest",
      output: "com.amazonaws.ec2#DeleteCarrierGatewayResult",
      responseWrapper: "DeleteCarrierGatewayResponse",
    },
    DeleteClientVpnEndpoint: {
      name: "DeleteClientVpnEndpoint",
      input: "com.amazonaws.ec2#DeleteClientVpnEndpointRequest",
      output: "com.amazonaws.ec2#DeleteClientVpnEndpointResult",
      responseWrapper: "DeleteClientVpnEndpointResponse",
    },
    DeleteClientVpnRoute: {
      name: "DeleteClientVpnRoute",
      input: "com.amazonaws.ec2#DeleteClientVpnRouteRequest",
      output: "com.amazonaws.ec2#DeleteClientVpnRouteResult",
      responseWrapper: "DeleteClientVpnRouteResponse",
    },
    DeleteCoipCidr: {
      name: "DeleteCoipCidr",
      input: "com.amazonaws.ec2#DeleteCoipCidrRequest",
      output: "com.amazonaws.ec2#DeleteCoipCidrResult",
      responseWrapper: "DeleteCoipCidrResponse",
    },
    DeleteCoipPool: {
      name: "DeleteCoipPool",
      input: "com.amazonaws.ec2#DeleteCoipPoolRequest",
      output: "com.amazonaws.ec2#DeleteCoipPoolResult",
      responseWrapper: "DeleteCoipPoolResponse",
    },
    DeleteCustomerGateway: {
      name: "DeleteCustomerGateway",
      input: "com.amazonaws.ec2#DeleteCustomerGatewayRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteCustomerGatewayResponse",
    },
    DeleteDhcpOptions: {
      name: "DeleteDhcpOptions",
      input: "com.amazonaws.ec2#DeleteDhcpOptionsRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteDhcpOptionsResponse",
    },
    DeleteEgressOnlyInternetGateway: {
      name: "DeleteEgressOnlyInternetGateway",
      input: "com.amazonaws.ec2#DeleteEgressOnlyInternetGatewayRequest",
      output: "com.amazonaws.ec2#DeleteEgressOnlyInternetGatewayResult",
      responseWrapper: "DeleteEgressOnlyInternetGatewayResponse",
    },
    DeleteFleets: {
      name: "DeleteFleets",
      input: "com.amazonaws.ec2#DeleteFleetsRequest",
      output: "com.amazonaws.ec2#DeleteFleetsResult",
      responseWrapper: "DeleteFleetsResponse",
    },
    DeleteFlowLogs: {
      name: "DeleteFlowLogs",
      input: "com.amazonaws.ec2#DeleteFlowLogsRequest",
      output: "com.amazonaws.ec2#DeleteFlowLogsResult",
      responseWrapper: "DeleteFlowLogsResponse",
    },
    DeleteFpgaImage: {
      name: "DeleteFpgaImage",
      input: "com.amazonaws.ec2#DeleteFpgaImageRequest",
      output: "com.amazonaws.ec2#DeleteFpgaImageResult",
      responseWrapper: "DeleteFpgaImageResponse",
    },
    DeleteInstanceConnectEndpoint: {
      name: "DeleteInstanceConnectEndpoint",
      input: "com.amazonaws.ec2#DeleteInstanceConnectEndpointRequest",
      output: "com.amazonaws.ec2#DeleteInstanceConnectEndpointResult",
      responseWrapper: "DeleteInstanceConnectEndpointResponse",
    },
    DeleteInstanceEventWindow: {
      name: "DeleteInstanceEventWindow",
      input: "com.amazonaws.ec2#DeleteInstanceEventWindowRequest",
      output: "com.amazonaws.ec2#DeleteInstanceEventWindowResult",
      responseWrapper: "DeleteInstanceEventWindowResponse",
    },
    DeleteInternetGateway: {
      name: "DeleteInternetGateway",
      input: "com.amazonaws.ec2#DeleteInternetGatewayRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteInternetGatewayResponse",
    },
    DeleteIpam: {
      name: "DeleteIpam",
      input: "com.amazonaws.ec2#DeleteIpamRequest",
      output: "com.amazonaws.ec2#DeleteIpamResult",
      responseWrapper: "DeleteIpamResponse",
    },
    DeleteIpamExternalResourceVerificationToken: {
      name: "DeleteIpamExternalResourceVerificationToken",
      input:
        "com.amazonaws.ec2#DeleteIpamExternalResourceVerificationTokenRequest",
      output:
        "com.amazonaws.ec2#DeleteIpamExternalResourceVerificationTokenResult",
      responseWrapper: "DeleteIpamExternalResourceVerificationTokenResponse",
    },
    DeleteIpamPool: {
      name: "DeleteIpamPool",
      input: "com.amazonaws.ec2#DeleteIpamPoolRequest",
      output: "com.amazonaws.ec2#DeleteIpamPoolResult",
      responseWrapper: "DeleteIpamPoolResponse",
    },
    DeleteIpamResourceDiscovery: {
      name: "DeleteIpamResourceDiscovery",
      input: "com.amazonaws.ec2#DeleteIpamResourceDiscoveryRequest",
      output: "com.amazonaws.ec2#DeleteIpamResourceDiscoveryResult",
      responseWrapper: "DeleteIpamResourceDiscoveryResponse",
    },
    DeleteIpamScope: {
      name: "DeleteIpamScope",
      input: "com.amazonaws.ec2#DeleteIpamScopeRequest",
      output: "com.amazonaws.ec2#DeleteIpamScopeResult",
      responseWrapper: "DeleteIpamScopeResponse",
    },
    DeleteKeyPair: {
      name: "DeleteKeyPair",
      input: "com.amazonaws.ec2#DeleteKeyPairRequest",
      output: "com.amazonaws.ec2#DeleteKeyPairResult",
      responseWrapper: "DeleteKeyPairResponse",
    },
    DeleteLaunchTemplate: {
      name: "DeleteLaunchTemplate",
      input: "com.amazonaws.ec2#DeleteLaunchTemplateRequest",
      output: "com.amazonaws.ec2#DeleteLaunchTemplateResult",
      responseWrapper: "DeleteLaunchTemplateResponse",
    },
    DeleteLaunchTemplateVersions: {
      name: "DeleteLaunchTemplateVersions",
      input: "com.amazonaws.ec2#DeleteLaunchTemplateVersionsRequest",
      output: "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResult",
      responseWrapper: "DeleteLaunchTemplateVersionsResponse",
    },
    DeleteLocalGatewayRoute: {
      name: "DeleteLocalGatewayRoute",
      input: "com.amazonaws.ec2#DeleteLocalGatewayRouteRequest",
      output: "com.amazonaws.ec2#DeleteLocalGatewayRouteResult",
      responseWrapper: "DeleteLocalGatewayRouteResponse",
    },
    DeleteLocalGatewayRouteTable: {
      name: "DeleteLocalGatewayRouteTable",
      input: "com.amazonaws.ec2#DeleteLocalGatewayRouteTableRequest",
      output: "com.amazonaws.ec2#DeleteLocalGatewayRouteTableResult",
      responseWrapper: "DeleteLocalGatewayRouteTableResponse",
    },
    DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation: {
      name: "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      input:
        "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest",
      output:
        "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult",
      responseWrapper:
        "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResponse",
    },
    DeleteLocalGatewayRouteTableVpcAssociation: {
      name: "DeleteLocalGatewayRouteTableVpcAssociation",
      input:
        "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVpcAssociationRequest",
      output:
        "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVpcAssociationResult",
      responseWrapper: "DeleteLocalGatewayRouteTableVpcAssociationResponse",
    },
    DeleteLocalGatewayVirtualInterface: {
      name: "DeleteLocalGatewayVirtualInterface",
      input: "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceRequest",
      output: "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceResult",
      responseWrapper: "DeleteLocalGatewayVirtualInterfaceResponse",
    },
    DeleteLocalGatewayVirtualInterfaceGroup: {
      name: "DeleteLocalGatewayVirtualInterfaceGroup",
      input: "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceGroupRequest",
      output: "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceGroupResult",
      responseWrapper: "DeleteLocalGatewayVirtualInterfaceGroupResponse",
    },
    DeleteManagedPrefixList: {
      name: "DeleteManagedPrefixList",
      input: "com.amazonaws.ec2#DeleteManagedPrefixListRequest",
      output: "com.amazonaws.ec2#DeleteManagedPrefixListResult",
      responseWrapper: "DeleteManagedPrefixListResponse",
    },
    DeleteNatGateway: {
      name: "DeleteNatGateway",
      input: "com.amazonaws.ec2#DeleteNatGatewayRequest",
      output: "com.amazonaws.ec2#DeleteNatGatewayResult",
      responseWrapper: "DeleteNatGatewayResponse",
    },
    DeleteNetworkAcl: {
      name: "DeleteNetworkAcl",
      input: "com.amazonaws.ec2#DeleteNetworkAclRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteNetworkAclResponse",
    },
    DeleteNetworkAclEntry: {
      name: "DeleteNetworkAclEntry",
      input: "com.amazonaws.ec2#DeleteNetworkAclEntryRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteNetworkAclEntryResponse",
    },
    DeleteNetworkInsightsAccessScope: {
      name: "DeleteNetworkInsightsAccessScope",
      input: "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeRequest",
      output: "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeResult",
      responseWrapper: "DeleteNetworkInsightsAccessScopeResponse",
    },
    DeleteNetworkInsightsAccessScopeAnalysis: {
      name: "DeleteNetworkInsightsAccessScopeAnalysis",
      input:
        "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeAnalysisRequest",
      output:
        "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeAnalysisResult",
      responseWrapper: "DeleteNetworkInsightsAccessScopeAnalysisResponse",
    },
    DeleteNetworkInsightsAnalysis: {
      name: "DeleteNetworkInsightsAnalysis",
      input: "com.amazonaws.ec2#DeleteNetworkInsightsAnalysisRequest",
      output: "com.amazonaws.ec2#DeleteNetworkInsightsAnalysisResult",
      responseWrapper: "DeleteNetworkInsightsAnalysisResponse",
    },
    DeleteNetworkInsightsPath: {
      name: "DeleteNetworkInsightsPath",
      input: "com.amazonaws.ec2#DeleteNetworkInsightsPathRequest",
      output: "com.amazonaws.ec2#DeleteNetworkInsightsPathResult",
      responseWrapper: "DeleteNetworkInsightsPathResponse",
    },
    DeleteNetworkInterface: {
      name: "DeleteNetworkInterface",
      input: "com.amazonaws.ec2#DeleteNetworkInterfaceRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteNetworkInterfaceResponse",
    },
    DeleteNetworkInterfacePermission: {
      name: "DeleteNetworkInterfacePermission",
      input: "com.amazonaws.ec2#DeleteNetworkInterfacePermissionRequest",
      output: "com.amazonaws.ec2#DeleteNetworkInterfacePermissionResult",
      responseWrapper: "DeleteNetworkInterfacePermissionResponse",
    },
    DeletePlacementGroup: {
      name: "DeletePlacementGroup",
      input: "com.amazonaws.ec2#DeletePlacementGroupRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeletePlacementGroupResponse",
    },
    DeletePublicIpv4Pool: {
      name: "DeletePublicIpv4Pool",
      input: "com.amazonaws.ec2#DeletePublicIpv4PoolRequest",
      output: "com.amazonaws.ec2#DeletePublicIpv4PoolResult",
      responseWrapper: "DeletePublicIpv4PoolResponse",
    },
    DeleteQueuedReservedInstances: {
      name: "DeleteQueuedReservedInstances",
      input: "com.amazonaws.ec2#DeleteQueuedReservedInstancesRequest",
      output: "com.amazonaws.ec2#DeleteQueuedReservedInstancesResult",
      responseWrapper: "DeleteQueuedReservedInstancesResponse",
    },
    DeleteRoute: {
      name: "DeleteRoute",
      input: "com.amazonaws.ec2#DeleteRouteRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteRouteResponse",
    },
    DeleteRouteServer: {
      name: "DeleteRouteServer",
      input: "com.amazonaws.ec2#DeleteRouteServerRequest",
      output: "com.amazonaws.ec2#DeleteRouteServerResult",
      responseWrapper: "DeleteRouteServerResponse",
    },
    DeleteRouteServerEndpoint: {
      name: "DeleteRouteServerEndpoint",
      input: "com.amazonaws.ec2#DeleteRouteServerEndpointRequest",
      output: "com.amazonaws.ec2#DeleteRouteServerEndpointResult",
      responseWrapper: "DeleteRouteServerEndpointResponse",
    },
    DeleteRouteServerPeer: {
      name: "DeleteRouteServerPeer",
      input: "com.amazonaws.ec2#DeleteRouteServerPeerRequest",
      output: "com.amazonaws.ec2#DeleteRouteServerPeerResult",
      responseWrapper: "DeleteRouteServerPeerResponse",
    },
    DeleteRouteTable: {
      name: "DeleteRouteTable",
      input: "com.amazonaws.ec2#DeleteRouteTableRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteRouteTableResponse",
    },
    DeleteSecurityGroup: {
      name: "DeleteSecurityGroup",
      input: "com.amazonaws.ec2#DeleteSecurityGroupRequest",
      output: "com.amazonaws.ec2#DeleteSecurityGroupResult",
      responseWrapper: "DeleteSecurityGroupResponse",
    },
    DeleteSnapshot: {
      name: "DeleteSnapshot",
      input: "com.amazonaws.ec2#DeleteSnapshotRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteSnapshotResponse",
    },
    DeleteSpotDatafeedSubscription: {
      name: "DeleteSpotDatafeedSubscription",
      input: "com.amazonaws.ec2#DeleteSpotDatafeedSubscriptionRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteSpotDatafeedSubscriptionResponse",
    },
    DeleteSubnet: {
      name: "DeleteSubnet",
      input: "com.amazonaws.ec2#DeleteSubnetRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteSubnetResponse",
    },
    DeleteSubnetCidrReservation: {
      name: "DeleteSubnetCidrReservation",
      input: "com.amazonaws.ec2#DeleteSubnetCidrReservationRequest",
      output: "com.amazonaws.ec2#DeleteSubnetCidrReservationResult",
      responseWrapper: "DeleteSubnetCidrReservationResponse",
    },
    DeleteTags: {
      name: "DeleteTags",
      input: "com.amazonaws.ec2#DeleteTagsRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteTagsResponse",
    },
    DeleteTrafficMirrorFilter: {
      name: "DeleteTrafficMirrorFilter",
      input: "com.amazonaws.ec2#DeleteTrafficMirrorFilterRequest",
      output: "com.amazonaws.ec2#DeleteTrafficMirrorFilterResult",
      responseWrapper: "DeleteTrafficMirrorFilterResponse",
    },
    DeleteTrafficMirrorFilterRule: {
      name: "DeleteTrafficMirrorFilterRule",
      input: "com.amazonaws.ec2#DeleteTrafficMirrorFilterRuleRequest",
      output: "com.amazonaws.ec2#DeleteTrafficMirrorFilterRuleResult",
      responseWrapper: "DeleteTrafficMirrorFilterRuleResponse",
    },
    DeleteTrafficMirrorSession: {
      name: "DeleteTrafficMirrorSession",
      input: "com.amazonaws.ec2#DeleteTrafficMirrorSessionRequest",
      output: "com.amazonaws.ec2#DeleteTrafficMirrorSessionResult",
      responseWrapper: "DeleteTrafficMirrorSessionResponse",
    },
    DeleteTrafficMirrorTarget: {
      name: "DeleteTrafficMirrorTarget",
      input: "com.amazonaws.ec2#DeleteTrafficMirrorTargetRequest",
      output: "com.amazonaws.ec2#DeleteTrafficMirrorTargetResult",
      responseWrapper: "DeleteTrafficMirrorTargetResponse",
    },
    DeleteTransitGateway: {
      name: "DeleteTransitGateway",
      input: "com.amazonaws.ec2#DeleteTransitGatewayRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayResult",
      responseWrapper: "DeleteTransitGatewayResponse",
    },
    DeleteTransitGatewayConnect: {
      name: "DeleteTransitGatewayConnect",
      input: "com.amazonaws.ec2#DeleteTransitGatewayConnectRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayConnectResult",
      responseWrapper: "DeleteTransitGatewayConnectResponse",
    },
    DeleteTransitGatewayConnectPeer: {
      name: "DeleteTransitGatewayConnectPeer",
      input: "com.amazonaws.ec2#DeleteTransitGatewayConnectPeerRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayConnectPeerResult",
      responseWrapper: "DeleteTransitGatewayConnectPeerResponse",
    },
    DeleteTransitGatewayMulticastDomain: {
      name: "DeleteTransitGatewayMulticastDomain",
      input: "com.amazonaws.ec2#DeleteTransitGatewayMulticastDomainRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayMulticastDomainResult",
      responseWrapper: "DeleteTransitGatewayMulticastDomainResponse",
    },
    DeleteTransitGatewayPeeringAttachment: {
      name: "DeleteTransitGatewayPeeringAttachment",
      input: "com.amazonaws.ec2#DeleteTransitGatewayPeeringAttachmentRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayPeeringAttachmentResult",
      responseWrapper: "DeleteTransitGatewayPeeringAttachmentResponse",
    },
    DeleteTransitGatewayPolicyTable: {
      name: "DeleteTransitGatewayPolicyTable",
      input: "com.amazonaws.ec2#DeleteTransitGatewayPolicyTableRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayPolicyTableResult",
      responseWrapper: "DeleteTransitGatewayPolicyTableResponse",
    },
    DeleteTransitGatewayPrefixListReference: {
      name: "DeleteTransitGatewayPrefixListReference",
      input: "com.amazonaws.ec2#DeleteTransitGatewayPrefixListReferenceRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayPrefixListReferenceResult",
      responseWrapper: "DeleteTransitGatewayPrefixListReferenceResponse",
    },
    DeleteTransitGatewayRoute: {
      name: "DeleteTransitGatewayRoute",
      input: "com.amazonaws.ec2#DeleteTransitGatewayRouteRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayRouteResult",
      responseWrapper: "DeleteTransitGatewayRouteResponse",
    },
    DeleteTransitGatewayRouteTable: {
      name: "DeleteTransitGatewayRouteTable",
      input: "com.amazonaws.ec2#DeleteTransitGatewayRouteTableRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayRouteTableResult",
      responseWrapper: "DeleteTransitGatewayRouteTableResponse",
    },
    DeleteTransitGatewayRouteTableAnnouncement: {
      name: "DeleteTransitGatewayRouteTableAnnouncement",
      input:
        "com.amazonaws.ec2#DeleteTransitGatewayRouteTableAnnouncementRequest",
      output:
        "com.amazonaws.ec2#DeleteTransitGatewayRouteTableAnnouncementResult",
      responseWrapper: "DeleteTransitGatewayRouteTableAnnouncementResponse",
    },
    DeleteTransitGatewayVpcAttachment: {
      name: "DeleteTransitGatewayVpcAttachment",
      input: "com.amazonaws.ec2#DeleteTransitGatewayVpcAttachmentRequest",
      output: "com.amazonaws.ec2#DeleteTransitGatewayVpcAttachmentResult",
      responseWrapper: "DeleteTransitGatewayVpcAttachmentResponse",
    },
    DeleteVerifiedAccessEndpoint: {
      name: "DeleteVerifiedAccessEndpoint",
      input: "com.amazonaws.ec2#DeleteVerifiedAccessEndpointRequest",
      output: "com.amazonaws.ec2#DeleteVerifiedAccessEndpointResult",
      responseWrapper: "DeleteVerifiedAccessEndpointResponse",
    },
    DeleteVerifiedAccessGroup: {
      name: "DeleteVerifiedAccessGroup",
      input: "com.amazonaws.ec2#DeleteVerifiedAccessGroupRequest",
      output: "com.amazonaws.ec2#DeleteVerifiedAccessGroupResult",
      responseWrapper: "DeleteVerifiedAccessGroupResponse",
    },
    DeleteVerifiedAccessInstance: {
      name: "DeleteVerifiedAccessInstance",
      input: "com.amazonaws.ec2#DeleteVerifiedAccessInstanceRequest",
      output: "com.amazonaws.ec2#DeleteVerifiedAccessInstanceResult",
      responseWrapper: "DeleteVerifiedAccessInstanceResponse",
    },
    DeleteVerifiedAccessTrustProvider: {
      name: "DeleteVerifiedAccessTrustProvider",
      input: "com.amazonaws.ec2#DeleteVerifiedAccessTrustProviderRequest",
      output: "com.amazonaws.ec2#DeleteVerifiedAccessTrustProviderResult",
      responseWrapper: "DeleteVerifiedAccessTrustProviderResponse",
    },
    DeleteVolume: {
      name: "DeleteVolume",
      input: "com.amazonaws.ec2#DeleteVolumeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteVolumeResponse",
    },
    DeleteVpc: {
      name: "DeleteVpc",
      input: "com.amazonaws.ec2#DeleteVpcRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteVpcResponse",
    },
    DeleteVpcBlockPublicAccessExclusion: {
      name: "DeleteVpcBlockPublicAccessExclusion",
      input: "com.amazonaws.ec2#DeleteVpcBlockPublicAccessExclusionRequest",
      output: "com.amazonaws.ec2#DeleteVpcBlockPublicAccessExclusionResult",
      responseWrapper: "DeleteVpcBlockPublicAccessExclusionResponse",
    },
    DeleteVpcEndpointConnectionNotifications: {
      name: "DeleteVpcEndpointConnectionNotifications",
      input:
        "com.amazonaws.ec2#DeleteVpcEndpointConnectionNotificationsRequest",
      output:
        "com.amazonaws.ec2#DeleteVpcEndpointConnectionNotificationsResult",
      responseWrapper: "DeleteVpcEndpointConnectionNotificationsResponse",
    },
    DeleteVpcEndpointServiceConfigurations: {
      name: "DeleteVpcEndpointServiceConfigurations",
      input: "com.amazonaws.ec2#DeleteVpcEndpointServiceConfigurationsRequest",
      output: "com.amazonaws.ec2#DeleteVpcEndpointServiceConfigurationsResult",
      responseWrapper: "DeleteVpcEndpointServiceConfigurationsResponse",
    },
    DeleteVpcEndpoints: {
      name: "DeleteVpcEndpoints",
      input: "com.amazonaws.ec2#DeleteVpcEndpointsRequest",
      output: "com.amazonaws.ec2#DeleteVpcEndpointsResult",
      responseWrapper: "DeleteVpcEndpointsResponse",
    },
    DeleteVpcPeeringConnection: {
      name: "DeleteVpcPeeringConnection",
      input: "com.amazonaws.ec2#DeleteVpcPeeringConnectionRequest",
      output: "com.amazonaws.ec2#DeleteVpcPeeringConnectionResult",
      responseWrapper: "DeleteVpcPeeringConnectionResponse",
    },
    DeleteVpnConnection: {
      name: "DeleteVpnConnection",
      input: "com.amazonaws.ec2#DeleteVpnConnectionRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteVpnConnectionResponse",
    },
    DeleteVpnConnectionRoute: {
      name: "DeleteVpnConnectionRoute",
      input: "com.amazonaws.ec2#DeleteVpnConnectionRouteRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteVpnConnectionRouteResponse",
    },
    DeleteVpnGateway: {
      name: "DeleteVpnGateway",
      input: "com.amazonaws.ec2#DeleteVpnGatewayRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DeleteVpnGatewayResponse",
    },
    DeprovisionByoipCidr: {
      name: "DeprovisionByoipCidr",
      input: "com.amazonaws.ec2#DeprovisionByoipCidrRequest",
      output: "com.amazonaws.ec2#DeprovisionByoipCidrResult",
      responseWrapper: "DeprovisionByoipCidrResponse",
    },
    DeprovisionIpamByoasn: {
      name: "DeprovisionIpamByoasn",
      input: "com.amazonaws.ec2#DeprovisionIpamByoasnRequest",
      output: "com.amazonaws.ec2#DeprovisionIpamByoasnResult",
      responseWrapper: "DeprovisionIpamByoasnResponse",
    },
    DeprovisionIpamPoolCidr: {
      name: "DeprovisionIpamPoolCidr",
      input: "com.amazonaws.ec2#DeprovisionIpamPoolCidrRequest",
      output: "com.amazonaws.ec2#DeprovisionIpamPoolCidrResult",
      responseWrapper: "DeprovisionIpamPoolCidrResponse",
    },
    DeprovisionPublicIpv4PoolCidr: {
      name: "DeprovisionPublicIpv4PoolCidr",
      input: "com.amazonaws.ec2#DeprovisionPublicIpv4PoolCidrRequest",
      output: "com.amazonaws.ec2#DeprovisionPublicIpv4PoolCidrResult",
      responseWrapper: "DeprovisionPublicIpv4PoolCidrResponse",
    },
    DeregisterImage: {
      name: "DeregisterImage",
      input: "com.amazonaws.ec2#DeregisterImageRequest",
      output: "com.amazonaws.ec2#DeregisterImageResult",
      responseWrapper: "DeregisterImageResponse",
    },
    DeregisterInstanceEventNotificationAttributes: {
      name: "DeregisterInstanceEventNotificationAttributes",
      input:
        "com.amazonaws.ec2#DeregisterInstanceEventNotificationAttributesRequest",
      output:
        "com.amazonaws.ec2#DeregisterInstanceEventNotificationAttributesResult",
      responseWrapper: "DeregisterInstanceEventNotificationAttributesResponse",
    },
    DeregisterTransitGatewayMulticastGroupMembers: {
      name: "DeregisterTransitGatewayMulticastGroupMembers",
      input:
        "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupMembersRequest",
      output:
        "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupMembersResult",
      responseWrapper: "DeregisterTransitGatewayMulticastGroupMembersResponse",
    },
    DeregisterTransitGatewayMulticastGroupSources: {
      name: "DeregisterTransitGatewayMulticastGroupSources",
      input:
        "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupSourcesRequest",
      output:
        "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupSourcesResult",
      responseWrapper: "DeregisterTransitGatewayMulticastGroupSourcesResponse",
    },
    DescribeAccountAttributes: {
      name: "DescribeAccountAttributes",
      input: "com.amazonaws.ec2#DescribeAccountAttributesRequest",
      output: "com.amazonaws.ec2#DescribeAccountAttributesResult",
      responseWrapper: "DescribeAccountAttributesResponse",
    },
    DescribeAddressTransfers: {
      name: "DescribeAddressTransfers",
      input: "com.amazonaws.ec2#DescribeAddressTransfersRequest",
      output: "com.amazonaws.ec2#DescribeAddressTransfersResult",
      responseWrapper: "DescribeAddressTransfersResponse",
    },
    DescribeAddresses: {
      name: "DescribeAddresses",
      input: "com.amazonaws.ec2#DescribeAddressesRequest",
      output: "com.amazonaws.ec2#DescribeAddressesResult",
      responseWrapper: "DescribeAddressesResponse",
    },
    DescribeAddressesAttribute: {
      name: "DescribeAddressesAttribute",
      input: "com.amazonaws.ec2#DescribeAddressesAttributeRequest",
      output: "com.amazonaws.ec2#DescribeAddressesAttributeResult",
      responseWrapper: "DescribeAddressesAttributeResponse",
    },
    DescribeAggregateIdFormat: {
      name: "DescribeAggregateIdFormat",
      input: "com.amazonaws.ec2#DescribeAggregateIdFormatRequest",
      output: "com.amazonaws.ec2#DescribeAggregateIdFormatResult",
      responseWrapper: "DescribeAggregateIdFormatResponse",
    },
    DescribeAvailabilityZones: {
      name: "DescribeAvailabilityZones",
      input: "com.amazonaws.ec2#DescribeAvailabilityZonesRequest",
      output: "com.amazonaws.ec2#DescribeAvailabilityZonesResult",
      responseWrapper: "DescribeAvailabilityZonesResponse",
    },
    DescribeAwsNetworkPerformanceMetricSubscriptions: {
      name: "DescribeAwsNetworkPerformanceMetricSubscriptions",
      input:
        "com.amazonaws.ec2#DescribeAwsNetworkPerformanceMetricSubscriptionsRequest",
      output:
        "com.amazonaws.ec2#DescribeAwsNetworkPerformanceMetricSubscriptionsResult",
      responseWrapper:
        "DescribeAwsNetworkPerformanceMetricSubscriptionsResponse",
    },
    DescribeBundleTasks: {
      name: "DescribeBundleTasks",
      input: "com.amazonaws.ec2#DescribeBundleTasksRequest",
      output: "com.amazonaws.ec2#DescribeBundleTasksResult",
      responseWrapper: "DescribeBundleTasksResponse",
    },
    DescribeByoipCidrs: {
      name: "DescribeByoipCidrs",
      input: "com.amazonaws.ec2#DescribeByoipCidrsRequest",
      output: "com.amazonaws.ec2#DescribeByoipCidrsResult",
      responseWrapper: "DescribeByoipCidrsResponse",
    },
    DescribeCapacityBlockExtensionHistory: {
      name: "DescribeCapacityBlockExtensionHistory",
      input: "com.amazonaws.ec2#DescribeCapacityBlockExtensionHistoryRequest",
      output: "com.amazonaws.ec2#DescribeCapacityBlockExtensionHistoryResult",
      responseWrapper: "DescribeCapacityBlockExtensionHistoryResponse",
    },
    DescribeCapacityBlockExtensionOfferings: {
      name: "DescribeCapacityBlockExtensionOfferings",
      input: "com.amazonaws.ec2#DescribeCapacityBlockExtensionOfferingsRequest",
      output: "com.amazonaws.ec2#DescribeCapacityBlockExtensionOfferingsResult",
      responseWrapper: "DescribeCapacityBlockExtensionOfferingsResponse",
    },
    DescribeCapacityBlockOfferings: {
      name: "DescribeCapacityBlockOfferings",
      input: "com.amazonaws.ec2#DescribeCapacityBlockOfferingsRequest",
      output: "com.amazonaws.ec2#DescribeCapacityBlockOfferingsResult",
      responseWrapper: "DescribeCapacityBlockOfferingsResponse",
    },
    DescribeCapacityBlockStatus: {
      name: "DescribeCapacityBlockStatus",
      input: "com.amazonaws.ec2#DescribeCapacityBlockStatusRequest",
      output: "com.amazonaws.ec2#DescribeCapacityBlockStatusResult",
      responseWrapper: "DescribeCapacityBlockStatusResponse",
    },
    DescribeCapacityBlocks: {
      name: "DescribeCapacityBlocks",
      input: "com.amazonaws.ec2#DescribeCapacityBlocksRequest",
      output: "com.amazonaws.ec2#DescribeCapacityBlocksResult",
      responseWrapper: "DescribeCapacityBlocksResponse",
    },
    DescribeCapacityReservationBillingRequests: {
      name: "DescribeCapacityReservationBillingRequests",
      input:
        "com.amazonaws.ec2#DescribeCapacityReservationBillingRequestsRequest",
      output:
        "com.amazonaws.ec2#DescribeCapacityReservationBillingRequestsResult",
      responseWrapper: "DescribeCapacityReservationBillingRequestsResponse",
    },
    DescribeCapacityReservationFleets: {
      name: "DescribeCapacityReservationFleets",
      input: "com.amazonaws.ec2#DescribeCapacityReservationFleetsRequest",
      output: "com.amazonaws.ec2#DescribeCapacityReservationFleetsResult",
      responseWrapper: "DescribeCapacityReservationFleetsResponse",
    },
    DescribeCapacityReservations: {
      name: "DescribeCapacityReservations",
      input: "com.amazonaws.ec2#DescribeCapacityReservationsRequest",
      output: "com.amazonaws.ec2#DescribeCapacityReservationsResult",
      responseWrapper: "DescribeCapacityReservationsResponse",
    },
    DescribeCarrierGateways: {
      name: "DescribeCarrierGateways",
      input: "com.amazonaws.ec2#DescribeCarrierGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeCarrierGatewaysResult",
      responseWrapper: "DescribeCarrierGatewaysResponse",
    },
    DescribeClassicLinkInstances: {
      name: "DescribeClassicLinkInstances",
      input: "com.amazonaws.ec2#DescribeClassicLinkInstancesRequest",
      output: "com.amazonaws.ec2#DescribeClassicLinkInstancesResult",
      responseWrapper: "DescribeClassicLinkInstancesResponse",
    },
    DescribeClientVpnAuthorizationRules: {
      name: "DescribeClientVpnAuthorizationRules",
      input: "com.amazonaws.ec2#DescribeClientVpnAuthorizationRulesRequest",
      output: "com.amazonaws.ec2#DescribeClientVpnAuthorizationRulesResult",
      responseWrapper: "DescribeClientVpnAuthorizationRulesResponse",
    },
    DescribeClientVpnConnections: {
      name: "DescribeClientVpnConnections",
      input: "com.amazonaws.ec2#DescribeClientVpnConnectionsRequest",
      output: "com.amazonaws.ec2#DescribeClientVpnConnectionsResult",
      responseWrapper: "DescribeClientVpnConnectionsResponse",
    },
    DescribeClientVpnEndpoints: {
      name: "DescribeClientVpnEndpoints",
      input: "com.amazonaws.ec2#DescribeClientVpnEndpointsRequest",
      output: "com.amazonaws.ec2#DescribeClientVpnEndpointsResult",
      responseWrapper: "DescribeClientVpnEndpointsResponse",
    },
    DescribeClientVpnRoutes: {
      name: "DescribeClientVpnRoutes",
      input: "com.amazonaws.ec2#DescribeClientVpnRoutesRequest",
      output: "com.amazonaws.ec2#DescribeClientVpnRoutesResult",
      responseWrapper: "DescribeClientVpnRoutesResponse",
    },
    DescribeClientVpnTargetNetworks: {
      name: "DescribeClientVpnTargetNetworks",
      input: "com.amazonaws.ec2#DescribeClientVpnTargetNetworksRequest",
      output: "com.amazonaws.ec2#DescribeClientVpnTargetNetworksResult",
      responseWrapper: "DescribeClientVpnTargetNetworksResponse",
    },
    DescribeCoipPools: {
      name: "DescribeCoipPools",
      input: "com.amazonaws.ec2#DescribeCoipPoolsRequest",
      output: "com.amazonaws.ec2#DescribeCoipPoolsResult",
      responseWrapper: "DescribeCoipPoolsResponse",
    },
    DescribeConversionTasks: {
      name: "DescribeConversionTasks",
      input: "com.amazonaws.ec2#DescribeConversionTasksRequest",
      output: "com.amazonaws.ec2#DescribeConversionTasksResult",
      responseWrapper: "DescribeConversionTasksResponse",
    },
    DescribeCustomerGateways: {
      name: "DescribeCustomerGateways",
      input: "com.amazonaws.ec2#DescribeCustomerGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeCustomerGatewaysResult",
      responseWrapper: "DescribeCustomerGatewaysResponse",
    },
    DescribeDeclarativePoliciesReports: {
      name: "DescribeDeclarativePoliciesReports",
      input: "com.amazonaws.ec2#DescribeDeclarativePoliciesReportsRequest",
      output: "com.amazonaws.ec2#DescribeDeclarativePoliciesReportsResult",
      responseWrapper: "DescribeDeclarativePoliciesReportsResponse",
    },
    DescribeDhcpOptions: {
      name: "DescribeDhcpOptions",
      input: "com.amazonaws.ec2#DescribeDhcpOptionsRequest",
      output: "com.amazonaws.ec2#DescribeDhcpOptionsResult",
      responseWrapper: "DescribeDhcpOptionsResponse",
    },
    DescribeEgressOnlyInternetGateways: {
      name: "DescribeEgressOnlyInternetGateways",
      input: "com.amazonaws.ec2#DescribeEgressOnlyInternetGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeEgressOnlyInternetGatewaysResult",
      responseWrapper: "DescribeEgressOnlyInternetGatewaysResponse",
    },
    DescribeElasticGpus: {
      name: "DescribeElasticGpus",
      input: "com.amazonaws.ec2#DescribeElasticGpusRequest",
      output: "com.amazonaws.ec2#DescribeElasticGpusResult",
      responseWrapper: "DescribeElasticGpusResponse",
    },
    DescribeExportImageTasks: {
      name: "DescribeExportImageTasks",
      input: "com.amazonaws.ec2#DescribeExportImageTasksRequest",
      output: "com.amazonaws.ec2#DescribeExportImageTasksResult",
      responseWrapper: "DescribeExportImageTasksResponse",
    },
    DescribeExportTasks: {
      name: "DescribeExportTasks",
      input: "com.amazonaws.ec2#DescribeExportTasksRequest",
      output: "com.amazonaws.ec2#DescribeExportTasksResult",
      responseWrapper: "DescribeExportTasksResponse",
    },
    DescribeFastLaunchImages: {
      name: "DescribeFastLaunchImages",
      input: "com.amazonaws.ec2#DescribeFastLaunchImagesRequest",
      output: "com.amazonaws.ec2#DescribeFastLaunchImagesResult",
      responseWrapper: "DescribeFastLaunchImagesResponse",
    },
    DescribeFastSnapshotRestores: {
      name: "DescribeFastSnapshotRestores",
      input: "com.amazonaws.ec2#DescribeFastSnapshotRestoresRequest",
      output: "com.amazonaws.ec2#DescribeFastSnapshotRestoresResult",
      responseWrapper: "DescribeFastSnapshotRestoresResponse",
    },
    DescribeFleetHistory: {
      name: "DescribeFleetHistory",
      input: "com.amazonaws.ec2#DescribeFleetHistoryRequest",
      output: "com.amazonaws.ec2#DescribeFleetHistoryResult",
      responseWrapper: "DescribeFleetHistoryResponse",
    },
    DescribeFleetInstances: {
      name: "DescribeFleetInstances",
      input: "com.amazonaws.ec2#DescribeFleetInstancesRequest",
      output: "com.amazonaws.ec2#DescribeFleetInstancesResult",
      responseWrapper: "DescribeFleetInstancesResponse",
    },
    DescribeFleets: {
      name: "DescribeFleets",
      input: "com.amazonaws.ec2#DescribeFleetsRequest",
      output: "com.amazonaws.ec2#DescribeFleetsResult",
      responseWrapper: "DescribeFleetsResponse",
    },
    DescribeFlowLogs: {
      name: "DescribeFlowLogs",
      input: "com.amazonaws.ec2#DescribeFlowLogsRequest",
      output: "com.amazonaws.ec2#DescribeFlowLogsResult",
      responseWrapper: "DescribeFlowLogsResponse",
    },
    DescribeFpgaImageAttribute: {
      name: "DescribeFpgaImageAttribute",
      input: "com.amazonaws.ec2#DescribeFpgaImageAttributeRequest",
      output: "com.amazonaws.ec2#DescribeFpgaImageAttributeResult",
      responseWrapper: "DescribeFpgaImageAttributeResponse",
    },
    DescribeFpgaImages: {
      name: "DescribeFpgaImages",
      input: "com.amazonaws.ec2#DescribeFpgaImagesRequest",
      output: "com.amazonaws.ec2#DescribeFpgaImagesResult",
      responseWrapper: "DescribeFpgaImagesResponse",
    },
    DescribeHostReservationOfferings: {
      name: "DescribeHostReservationOfferings",
      input: "com.amazonaws.ec2#DescribeHostReservationOfferingsRequest",
      output: "com.amazonaws.ec2#DescribeHostReservationOfferingsResult",
      responseWrapper: "DescribeHostReservationOfferingsResponse",
    },
    DescribeHostReservations: {
      name: "DescribeHostReservations",
      input: "com.amazonaws.ec2#DescribeHostReservationsRequest",
      output: "com.amazonaws.ec2#DescribeHostReservationsResult",
      responseWrapper: "DescribeHostReservationsResponse",
    },
    DescribeHosts: {
      name: "DescribeHosts",
      input: "com.amazonaws.ec2#DescribeHostsRequest",
      output: "com.amazonaws.ec2#DescribeHostsResult",
      responseWrapper: "DescribeHostsResponse",
    },
    DescribeIamInstanceProfileAssociations: {
      name: "DescribeIamInstanceProfileAssociations",
      input: "com.amazonaws.ec2#DescribeIamInstanceProfileAssociationsRequest",
      output: "com.amazonaws.ec2#DescribeIamInstanceProfileAssociationsResult",
      responseWrapper: "DescribeIamInstanceProfileAssociationsResponse",
    },
    DescribeIdFormat: {
      name: "DescribeIdFormat",
      input: "com.amazonaws.ec2#DescribeIdFormatRequest",
      output: "com.amazonaws.ec2#DescribeIdFormatResult",
      responseWrapper: "DescribeIdFormatResponse",
    },
    DescribeIdentityIdFormat: {
      name: "DescribeIdentityIdFormat",
      input: "com.amazonaws.ec2#DescribeIdentityIdFormatRequest",
      output: "com.amazonaws.ec2#DescribeIdentityIdFormatResult",
      responseWrapper: "DescribeIdentityIdFormatResponse",
    },
    DescribeImageAttribute: {
      name: "DescribeImageAttribute",
      input: "com.amazonaws.ec2#DescribeImageAttributeRequest",
      output: "com.amazonaws.ec2#ImageAttribute",
      responseWrapper: "DescribeImageAttributeResponse",
    },
    DescribeImages: {
      name: "DescribeImages",
      input: "com.amazonaws.ec2#DescribeImagesRequest",
      output: "com.amazonaws.ec2#DescribeImagesResult",
      responseWrapper: "DescribeImagesResponse",
    },
    DescribeImportImageTasks: {
      name: "DescribeImportImageTasks",
      input: "com.amazonaws.ec2#DescribeImportImageTasksRequest",
      output: "com.amazonaws.ec2#DescribeImportImageTasksResult",
      responseWrapper: "DescribeImportImageTasksResponse",
    },
    DescribeImportSnapshotTasks: {
      name: "DescribeImportSnapshotTasks",
      input: "com.amazonaws.ec2#DescribeImportSnapshotTasksRequest",
      output: "com.amazonaws.ec2#DescribeImportSnapshotTasksResult",
      responseWrapper: "DescribeImportSnapshotTasksResponse",
    },
    DescribeInstanceAttribute: {
      name: "DescribeInstanceAttribute",
      input: "com.amazonaws.ec2#DescribeInstanceAttributeRequest",
      output: "com.amazonaws.ec2#InstanceAttribute",
      responseWrapper: "DescribeInstanceAttributeResponse",
    },
    DescribeInstanceConnectEndpoints: {
      name: "DescribeInstanceConnectEndpoints",
      input: "com.amazonaws.ec2#DescribeInstanceConnectEndpointsRequest",
      output: "com.amazonaws.ec2#DescribeInstanceConnectEndpointsResult",
      responseWrapper: "DescribeInstanceConnectEndpointsResponse",
    },
    DescribeInstanceCreditSpecifications: {
      name: "DescribeInstanceCreditSpecifications",
      input: "com.amazonaws.ec2#DescribeInstanceCreditSpecificationsRequest",
      output: "com.amazonaws.ec2#DescribeInstanceCreditSpecificationsResult",
      responseWrapper: "DescribeInstanceCreditSpecificationsResponse",
    },
    DescribeInstanceEventNotificationAttributes: {
      name: "DescribeInstanceEventNotificationAttributes",
      input:
        "com.amazonaws.ec2#DescribeInstanceEventNotificationAttributesRequest",
      output:
        "com.amazonaws.ec2#DescribeInstanceEventNotificationAttributesResult",
      responseWrapper: "DescribeInstanceEventNotificationAttributesResponse",
    },
    DescribeInstanceEventWindows: {
      name: "DescribeInstanceEventWindows",
      input: "com.amazonaws.ec2#DescribeInstanceEventWindowsRequest",
      output: "com.amazonaws.ec2#DescribeInstanceEventWindowsResult",
      responseWrapper: "DescribeInstanceEventWindowsResponse",
    },
    DescribeInstanceImageMetadata: {
      name: "DescribeInstanceImageMetadata",
      input: "com.amazonaws.ec2#DescribeInstanceImageMetadataRequest",
      output: "com.amazonaws.ec2#DescribeInstanceImageMetadataResult",
      responseWrapper: "DescribeInstanceImageMetadataResponse",
    },
    DescribeInstanceStatus: {
      name: "DescribeInstanceStatus",
      input: "com.amazonaws.ec2#DescribeInstanceStatusRequest",
      output: "com.amazonaws.ec2#DescribeInstanceStatusResult",
      responseWrapper: "DescribeInstanceStatusResponse",
    },
    DescribeInstanceTopology: {
      name: "DescribeInstanceTopology",
      input: "com.amazonaws.ec2#DescribeInstanceTopologyRequest",
      output: "com.amazonaws.ec2#DescribeInstanceTopologyResult",
      responseWrapper: "DescribeInstanceTopologyResponse",
    },
    DescribeInstanceTypeOfferings: {
      name: "DescribeInstanceTypeOfferings",
      input: "com.amazonaws.ec2#DescribeInstanceTypeOfferingsRequest",
      output: "com.amazonaws.ec2#DescribeInstanceTypeOfferingsResult",
      responseWrapper: "DescribeInstanceTypeOfferingsResponse",
    },
    DescribeInstanceTypes: {
      name: "DescribeInstanceTypes",
      input: "com.amazonaws.ec2#DescribeInstanceTypesRequest",
      output: "com.amazonaws.ec2#DescribeInstanceTypesResult",
      responseWrapper: "DescribeInstanceTypesResponse",
    },
    DescribeInstances: {
      name: "DescribeInstances",
      input: "com.amazonaws.ec2#DescribeInstancesRequest",
      output: "com.amazonaws.ec2#DescribeInstancesResult",
      responseWrapper: "DescribeInstancesResponse",
    },
    DescribeInternetGateways: {
      name: "DescribeInternetGateways",
      input: "com.amazonaws.ec2#DescribeInternetGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeInternetGatewaysResult",
      responseWrapper: "DescribeInternetGatewaysResponse",
    },
    DescribeIpamByoasn: {
      name: "DescribeIpamByoasn",
      input: "com.amazonaws.ec2#DescribeIpamByoasnRequest",
      output: "com.amazonaws.ec2#DescribeIpamByoasnResult",
      responseWrapper: "DescribeIpamByoasnResponse",
    },
    DescribeIpamExternalResourceVerificationTokens: {
      name: "DescribeIpamExternalResourceVerificationTokens",
      input:
        "com.amazonaws.ec2#DescribeIpamExternalResourceVerificationTokensRequest",
      output:
        "com.amazonaws.ec2#DescribeIpamExternalResourceVerificationTokensResult",
      responseWrapper: "DescribeIpamExternalResourceVerificationTokensResponse",
    },
    DescribeIpamPools: {
      name: "DescribeIpamPools",
      input: "com.amazonaws.ec2#DescribeIpamPoolsRequest",
      output: "com.amazonaws.ec2#DescribeIpamPoolsResult",
      responseWrapper: "DescribeIpamPoolsResponse",
    },
    DescribeIpamResourceDiscoveries: {
      name: "DescribeIpamResourceDiscoveries",
      input: "com.amazonaws.ec2#DescribeIpamResourceDiscoveriesRequest",
      output: "com.amazonaws.ec2#DescribeIpamResourceDiscoveriesResult",
      responseWrapper: "DescribeIpamResourceDiscoveriesResponse",
    },
    DescribeIpamResourceDiscoveryAssociations: {
      name: "DescribeIpamResourceDiscoveryAssociations",
      input:
        "com.amazonaws.ec2#DescribeIpamResourceDiscoveryAssociationsRequest",
      output:
        "com.amazonaws.ec2#DescribeIpamResourceDiscoveryAssociationsResult",
      responseWrapper: "DescribeIpamResourceDiscoveryAssociationsResponse",
    },
    DescribeIpamScopes: {
      name: "DescribeIpamScopes",
      input: "com.amazonaws.ec2#DescribeIpamScopesRequest",
      output: "com.amazonaws.ec2#DescribeIpamScopesResult",
      responseWrapper: "DescribeIpamScopesResponse",
    },
    DescribeIpams: {
      name: "DescribeIpams",
      input: "com.amazonaws.ec2#DescribeIpamsRequest",
      output: "com.amazonaws.ec2#DescribeIpamsResult",
      responseWrapper: "DescribeIpamsResponse",
    },
    DescribeIpv6Pools: {
      name: "DescribeIpv6Pools",
      input: "com.amazonaws.ec2#DescribeIpv6PoolsRequest",
      output: "com.amazonaws.ec2#DescribeIpv6PoolsResult",
      responseWrapper: "DescribeIpv6PoolsResponse",
    },
    DescribeKeyPairs: {
      name: "DescribeKeyPairs",
      input: "com.amazonaws.ec2#DescribeKeyPairsRequest",
      output: "com.amazonaws.ec2#DescribeKeyPairsResult",
      responseWrapper: "DescribeKeyPairsResponse",
    },
    DescribeLaunchTemplateVersions: {
      name: "DescribeLaunchTemplateVersions",
      input: "com.amazonaws.ec2#DescribeLaunchTemplateVersionsRequest",
      output: "com.amazonaws.ec2#DescribeLaunchTemplateVersionsResult",
      responseWrapper: "DescribeLaunchTemplateVersionsResponse",
    },
    DescribeLaunchTemplates: {
      name: "DescribeLaunchTemplates",
      input: "com.amazonaws.ec2#DescribeLaunchTemplatesRequest",
      output: "com.amazonaws.ec2#DescribeLaunchTemplatesResult",
      responseWrapper: "DescribeLaunchTemplatesResponse",
    },
    DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations: {
      name: "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      input:
        "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest",
      output:
        "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult",
      responseWrapper:
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResponse",
    },
    DescribeLocalGatewayRouteTableVpcAssociations: {
      name: "DescribeLocalGatewayRouteTableVpcAssociations",
      input:
        "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVpcAssociationsRequest",
      output:
        "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVpcAssociationsResult",
      responseWrapper: "DescribeLocalGatewayRouteTableVpcAssociationsResponse",
    },
    DescribeLocalGatewayRouteTables: {
      name: "DescribeLocalGatewayRouteTables",
      input: "com.amazonaws.ec2#DescribeLocalGatewayRouteTablesRequest",
      output: "com.amazonaws.ec2#DescribeLocalGatewayRouteTablesResult",
      responseWrapper: "DescribeLocalGatewayRouteTablesResponse",
    },
    DescribeLocalGatewayVirtualInterfaceGroups: {
      name: "DescribeLocalGatewayVirtualInterfaceGroups",
      input:
        "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfaceGroupsRequest",
      output:
        "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfaceGroupsResult",
      responseWrapper: "DescribeLocalGatewayVirtualInterfaceGroupsResponse",
    },
    DescribeLocalGatewayVirtualInterfaces: {
      name: "DescribeLocalGatewayVirtualInterfaces",
      input: "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfacesRequest",
      output: "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfacesResult",
      responseWrapper: "DescribeLocalGatewayVirtualInterfacesResponse",
    },
    DescribeLocalGateways: {
      name: "DescribeLocalGateways",
      input: "com.amazonaws.ec2#DescribeLocalGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeLocalGatewaysResult",
      responseWrapper: "DescribeLocalGatewaysResponse",
    },
    DescribeLockedSnapshots: {
      name: "DescribeLockedSnapshots",
      input: "com.amazonaws.ec2#DescribeLockedSnapshotsRequest",
      output: "com.amazonaws.ec2#DescribeLockedSnapshotsResult",
      responseWrapper: "DescribeLockedSnapshotsResponse",
    },
    DescribeMacHosts: {
      name: "DescribeMacHosts",
      input: "com.amazonaws.ec2#DescribeMacHostsRequest",
      output: "com.amazonaws.ec2#DescribeMacHostsResult",
      responseWrapper: "DescribeMacHostsResponse",
    },
    DescribeMacModificationTasks: {
      name: "DescribeMacModificationTasks",
      input: "com.amazonaws.ec2#DescribeMacModificationTasksRequest",
      output: "com.amazonaws.ec2#DescribeMacModificationTasksResult",
      responseWrapper: "DescribeMacModificationTasksResponse",
    },
    DescribeManagedPrefixLists: {
      name: "DescribeManagedPrefixLists",
      input: "com.amazonaws.ec2#DescribeManagedPrefixListsRequest",
      output: "com.amazonaws.ec2#DescribeManagedPrefixListsResult",
      responseWrapper: "DescribeManagedPrefixListsResponse",
    },
    DescribeMovingAddresses: {
      name: "DescribeMovingAddresses",
      input: "com.amazonaws.ec2#DescribeMovingAddressesRequest",
      output: "com.amazonaws.ec2#DescribeMovingAddressesResult",
      responseWrapper: "DescribeMovingAddressesResponse",
    },
    DescribeNatGateways: {
      name: "DescribeNatGateways",
      input: "com.amazonaws.ec2#DescribeNatGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeNatGatewaysResult",
      responseWrapper: "DescribeNatGatewaysResponse",
    },
    DescribeNetworkAcls: {
      name: "DescribeNetworkAcls",
      input: "com.amazonaws.ec2#DescribeNetworkAclsRequest",
      output: "com.amazonaws.ec2#DescribeNetworkAclsResult",
      responseWrapper: "DescribeNetworkAclsResponse",
    },
    DescribeNetworkInsightsAccessScopeAnalyses: {
      name: "DescribeNetworkInsightsAccessScopeAnalyses",
      input:
        "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopeAnalysesRequest",
      output:
        "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopeAnalysesResult",
      responseWrapper: "DescribeNetworkInsightsAccessScopeAnalysesResponse",
    },
    DescribeNetworkInsightsAccessScopes: {
      name: "DescribeNetworkInsightsAccessScopes",
      input: "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopesRequest",
      output: "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopesResult",
      responseWrapper: "DescribeNetworkInsightsAccessScopesResponse",
    },
    DescribeNetworkInsightsAnalyses: {
      name: "DescribeNetworkInsightsAnalyses",
      input: "com.amazonaws.ec2#DescribeNetworkInsightsAnalysesRequest",
      output: "com.amazonaws.ec2#DescribeNetworkInsightsAnalysesResult",
      responseWrapper: "DescribeNetworkInsightsAnalysesResponse",
    },
    DescribeNetworkInsightsPaths: {
      name: "DescribeNetworkInsightsPaths",
      input: "com.amazonaws.ec2#DescribeNetworkInsightsPathsRequest",
      output: "com.amazonaws.ec2#DescribeNetworkInsightsPathsResult",
      responseWrapper: "DescribeNetworkInsightsPathsResponse",
    },
    DescribeNetworkInterfaceAttribute: {
      name: "DescribeNetworkInterfaceAttribute",
      input: "com.amazonaws.ec2#DescribeNetworkInterfaceAttributeRequest",
      output: "com.amazonaws.ec2#DescribeNetworkInterfaceAttributeResult",
      responseWrapper: "DescribeNetworkInterfaceAttributeResponse",
    },
    DescribeNetworkInterfacePermissions: {
      name: "DescribeNetworkInterfacePermissions",
      input: "com.amazonaws.ec2#DescribeNetworkInterfacePermissionsRequest",
      output: "com.amazonaws.ec2#DescribeNetworkInterfacePermissionsResult",
      responseWrapper: "DescribeNetworkInterfacePermissionsResponse",
    },
    DescribeNetworkInterfaces: {
      name: "DescribeNetworkInterfaces",
      input: "com.amazonaws.ec2#DescribeNetworkInterfacesRequest",
      output: "com.amazonaws.ec2#DescribeNetworkInterfacesResult",
      responseWrapper: "DescribeNetworkInterfacesResponse",
    },
    DescribeOutpostLags: {
      name: "DescribeOutpostLags",
      input: "com.amazonaws.ec2#DescribeOutpostLagsRequest",
      output: "com.amazonaws.ec2#DescribeOutpostLagsResult",
      responseWrapper: "DescribeOutpostLagsResponse",
    },
    DescribePlacementGroups: {
      name: "DescribePlacementGroups",
      input: "com.amazonaws.ec2#DescribePlacementGroupsRequest",
      output: "com.amazonaws.ec2#DescribePlacementGroupsResult",
      responseWrapper: "DescribePlacementGroupsResponse",
    },
    DescribePrefixLists: {
      name: "DescribePrefixLists",
      input: "com.amazonaws.ec2#DescribePrefixListsRequest",
      output: "com.amazonaws.ec2#DescribePrefixListsResult",
      responseWrapper: "DescribePrefixListsResponse",
    },
    DescribePrincipalIdFormat: {
      name: "DescribePrincipalIdFormat",
      input: "com.amazonaws.ec2#DescribePrincipalIdFormatRequest",
      output: "com.amazonaws.ec2#DescribePrincipalIdFormatResult",
      responseWrapper: "DescribePrincipalIdFormatResponse",
    },
    DescribePublicIpv4Pools: {
      name: "DescribePublicIpv4Pools",
      input: "com.amazonaws.ec2#DescribePublicIpv4PoolsRequest",
      output: "com.amazonaws.ec2#DescribePublicIpv4PoolsResult",
      responseWrapper: "DescribePublicIpv4PoolsResponse",
    },
    DescribeRegions: {
      name: "DescribeRegions",
      input: "com.amazonaws.ec2#DescribeRegionsRequest",
      output: "com.amazonaws.ec2#DescribeRegionsResult",
      responseWrapper: "DescribeRegionsResponse",
    },
    DescribeReplaceRootVolumeTasks: {
      name: "DescribeReplaceRootVolumeTasks",
      input: "com.amazonaws.ec2#DescribeReplaceRootVolumeTasksRequest",
      output: "com.amazonaws.ec2#DescribeReplaceRootVolumeTasksResult",
      responseWrapper: "DescribeReplaceRootVolumeTasksResponse",
    },
    DescribeReservedInstances: {
      name: "DescribeReservedInstances",
      input: "com.amazonaws.ec2#DescribeReservedInstancesRequest",
      output: "com.amazonaws.ec2#DescribeReservedInstancesResult",
      responseWrapper: "DescribeReservedInstancesResponse",
    },
    DescribeReservedInstancesListings: {
      name: "DescribeReservedInstancesListings",
      input: "com.amazonaws.ec2#DescribeReservedInstancesListingsRequest",
      output: "com.amazonaws.ec2#DescribeReservedInstancesListingsResult",
      responseWrapper: "DescribeReservedInstancesListingsResponse",
    },
    DescribeReservedInstancesModifications: {
      name: "DescribeReservedInstancesModifications",
      input: "com.amazonaws.ec2#DescribeReservedInstancesModificationsRequest",
      output: "com.amazonaws.ec2#DescribeReservedInstancesModificationsResult",
      responseWrapper: "DescribeReservedInstancesModificationsResponse",
    },
    DescribeReservedInstancesOfferings: {
      name: "DescribeReservedInstancesOfferings",
      input: "com.amazonaws.ec2#DescribeReservedInstancesOfferingsRequest",
      output: "com.amazonaws.ec2#DescribeReservedInstancesOfferingsResult",
      responseWrapper: "DescribeReservedInstancesOfferingsResponse",
    },
    DescribeRouteServerEndpoints: {
      name: "DescribeRouteServerEndpoints",
      input: "com.amazonaws.ec2#DescribeRouteServerEndpointsRequest",
      output: "com.amazonaws.ec2#DescribeRouteServerEndpointsResult",
      responseWrapper: "DescribeRouteServerEndpointsResponse",
    },
    DescribeRouteServerPeers: {
      name: "DescribeRouteServerPeers",
      input: "com.amazonaws.ec2#DescribeRouteServerPeersRequest",
      output: "com.amazonaws.ec2#DescribeRouteServerPeersResult",
      responseWrapper: "DescribeRouteServerPeersResponse",
    },
    DescribeRouteServers: {
      name: "DescribeRouteServers",
      input: "com.amazonaws.ec2#DescribeRouteServersRequest",
      output: "com.amazonaws.ec2#DescribeRouteServersResult",
      responseWrapper: "DescribeRouteServersResponse",
    },
    DescribeRouteTables: {
      name: "DescribeRouteTables",
      input: "com.amazonaws.ec2#DescribeRouteTablesRequest",
      output: "com.amazonaws.ec2#DescribeRouteTablesResult",
      responseWrapper: "DescribeRouteTablesResponse",
    },
    DescribeScheduledInstanceAvailability: {
      name: "DescribeScheduledInstanceAvailability",
      input: "com.amazonaws.ec2#DescribeScheduledInstanceAvailabilityRequest",
      output: "com.amazonaws.ec2#DescribeScheduledInstanceAvailabilityResult",
      responseWrapper: "DescribeScheduledInstanceAvailabilityResponse",
    },
    DescribeScheduledInstances: {
      name: "DescribeScheduledInstances",
      input: "com.amazonaws.ec2#DescribeScheduledInstancesRequest",
      output: "com.amazonaws.ec2#DescribeScheduledInstancesResult",
      responseWrapper: "DescribeScheduledInstancesResponse",
    },
    DescribeSecurityGroupReferences: {
      name: "DescribeSecurityGroupReferences",
      input: "com.amazonaws.ec2#DescribeSecurityGroupReferencesRequest",
      output: "com.amazonaws.ec2#DescribeSecurityGroupReferencesResult",
      responseWrapper: "DescribeSecurityGroupReferencesResponse",
    },
    DescribeSecurityGroupRules: {
      name: "DescribeSecurityGroupRules",
      input: "com.amazonaws.ec2#DescribeSecurityGroupRulesRequest",
      output: "com.amazonaws.ec2#DescribeSecurityGroupRulesResult",
      responseWrapper: "DescribeSecurityGroupRulesResponse",
    },
    DescribeSecurityGroupVpcAssociations: {
      name: "DescribeSecurityGroupVpcAssociations",
      input: "com.amazonaws.ec2#DescribeSecurityGroupVpcAssociationsRequest",
      output: "com.amazonaws.ec2#DescribeSecurityGroupVpcAssociationsResult",
      responseWrapper: "DescribeSecurityGroupVpcAssociationsResponse",
    },
    DescribeSecurityGroups: {
      name: "DescribeSecurityGroups",
      input: "com.amazonaws.ec2#DescribeSecurityGroupsRequest",
      output: "com.amazonaws.ec2#DescribeSecurityGroupsResult",
      responseWrapper: "DescribeSecurityGroupsResponse",
    },
    DescribeServiceLinkVirtualInterfaces: {
      name: "DescribeServiceLinkVirtualInterfaces",
      input: "com.amazonaws.ec2#DescribeServiceLinkVirtualInterfacesRequest",
      output: "com.amazonaws.ec2#DescribeServiceLinkVirtualInterfacesResult",
      responseWrapper: "DescribeServiceLinkVirtualInterfacesResponse",
    },
    DescribeSnapshotAttribute: {
      name: "DescribeSnapshotAttribute",
      input: "com.amazonaws.ec2#DescribeSnapshotAttributeRequest",
      output: "com.amazonaws.ec2#DescribeSnapshotAttributeResult",
      responseWrapper: "DescribeSnapshotAttributeResponse",
    },
    DescribeSnapshotTierStatus: {
      name: "DescribeSnapshotTierStatus",
      input: "com.amazonaws.ec2#DescribeSnapshotTierStatusRequest",
      output: "com.amazonaws.ec2#DescribeSnapshotTierStatusResult",
      responseWrapper: "DescribeSnapshotTierStatusResponse",
    },
    DescribeSnapshots: {
      name: "DescribeSnapshots",
      input: "com.amazonaws.ec2#DescribeSnapshotsRequest",
      output: "com.amazonaws.ec2#DescribeSnapshotsResult",
      responseWrapper: "DescribeSnapshotsResponse",
    },
    DescribeSpotDatafeedSubscription: {
      name: "DescribeSpotDatafeedSubscription",
      input: "com.amazonaws.ec2#DescribeSpotDatafeedSubscriptionRequest",
      output: "com.amazonaws.ec2#DescribeSpotDatafeedSubscriptionResult",
      responseWrapper: "DescribeSpotDatafeedSubscriptionResponse",
    },
    DescribeSpotFleetInstances: {
      name: "DescribeSpotFleetInstances",
      input: "com.amazonaws.ec2#DescribeSpotFleetInstancesRequest",
      output: "com.amazonaws.ec2#DescribeSpotFleetInstancesResponse",
      responseWrapper: "DescribeSpotFleetInstancesResponse",
    },
    DescribeSpotFleetRequestHistory: {
      name: "DescribeSpotFleetRequestHistory",
      input: "com.amazonaws.ec2#DescribeSpotFleetRequestHistoryRequest",
      output: "com.amazonaws.ec2#DescribeSpotFleetRequestHistoryResponse",
      responseWrapper: "DescribeSpotFleetRequestHistoryResponse",
    },
    DescribeSpotFleetRequests: {
      name: "DescribeSpotFleetRequests",
      input: "com.amazonaws.ec2#DescribeSpotFleetRequestsRequest",
      output: "com.amazonaws.ec2#DescribeSpotFleetRequestsResponse",
      responseWrapper: "DescribeSpotFleetRequestsResponse",
    },
    DescribeSpotInstanceRequests: {
      name: "DescribeSpotInstanceRequests",
      input: "com.amazonaws.ec2#DescribeSpotInstanceRequestsRequest",
      output: "com.amazonaws.ec2#DescribeSpotInstanceRequestsResult",
      responseWrapper: "DescribeSpotInstanceRequestsResponse",
    },
    DescribeSpotPriceHistory: {
      name: "DescribeSpotPriceHistory",
      input: "com.amazonaws.ec2#DescribeSpotPriceHistoryRequest",
      output: "com.amazonaws.ec2#DescribeSpotPriceHistoryResult",
      responseWrapper: "DescribeSpotPriceHistoryResponse",
    },
    DescribeStaleSecurityGroups: {
      name: "DescribeStaleSecurityGroups",
      input: "com.amazonaws.ec2#DescribeStaleSecurityGroupsRequest",
      output: "com.amazonaws.ec2#DescribeStaleSecurityGroupsResult",
      responseWrapper: "DescribeStaleSecurityGroupsResponse",
    },
    DescribeStoreImageTasks: {
      name: "DescribeStoreImageTasks",
      input: "com.amazonaws.ec2#DescribeStoreImageTasksRequest",
      output: "com.amazonaws.ec2#DescribeStoreImageTasksResult",
      responseWrapper: "DescribeStoreImageTasksResponse",
    },
    DescribeSubnets: {
      name: "DescribeSubnets",
      input: "com.amazonaws.ec2#DescribeSubnetsRequest",
      output: "com.amazonaws.ec2#DescribeSubnetsResult",
      responseWrapper: "DescribeSubnetsResponse",
    },
    DescribeTags: {
      name: "DescribeTags",
      input: "com.amazonaws.ec2#DescribeTagsRequest",
      output: "com.amazonaws.ec2#DescribeTagsResult",
      responseWrapper: "DescribeTagsResponse",
    },
    DescribeTrafficMirrorFilterRules: {
      name: "DescribeTrafficMirrorFilterRules",
      input: "com.amazonaws.ec2#DescribeTrafficMirrorFilterRulesRequest",
      output: "com.amazonaws.ec2#DescribeTrafficMirrorFilterRulesResult",
      responseWrapper: "DescribeTrafficMirrorFilterRulesResponse",
    },
    DescribeTrafficMirrorFilters: {
      name: "DescribeTrafficMirrorFilters",
      input: "com.amazonaws.ec2#DescribeTrafficMirrorFiltersRequest",
      output: "com.amazonaws.ec2#DescribeTrafficMirrorFiltersResult",
      responseWrapper: "DescribeTrafficMirrorFiltersResponse",
    },
    DescribeTrafficMirrorSessions: {
      name: "DescribeTrafficMirrorSessions",
      input: "com.amazonaws.ec2#DescribeTrafficMirrorSessionsRequest",
      output: "com.amazonaws.ec2#DescribeTrafficMirrorSessionsResult",
      responseWrapper: "DescribeTrafficMirrorSessionsResponse",
    },
    DescribeTrafficMirrorTargets: {
      name: "DescribeTrafficMirrorTargets",
      input: "com.amazonaws.ec2#DescribeTrafficMirrorTargetsRequest",
      output: "com.amazonaws.ec2#DescribeTrafficMirrorTargetsResult",
      responseWrapper: "DescribeTrafficMirrorTargetsResponse",
    },
    DescribeTransitGatewayAttachments: {
      name: "DescribeTransitGatewayAttachments",
      input: "com.amazonaws.ec2#DescribeTransitGatewayAttachmentsRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayAttachmentsResult",
      responseWrapper: "DescribeTransitGatewayAttachmentsResponse",
    },
    DescribeTransitGatewayConnectPeers: {
      name: "DescribeTransitGatewayConnectPeers",
      input: "com.amazonaws.ec2#DescribeTransitGatewayConnectPeersRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayConnectPeersResult",
      responseWrapper: "DescribeTransitGatewayConnectPeersResponse",
    },
    DescribeTransitGatewayConnects: {
      name: "DescribeTransitGatewayConnects",
      input: "com.amazonaws.ec2#DescribeTransitGatewayConnectsRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayConnectsResult",
      responseWrapper: "DescribeTransitGatewayConnectsResponse",
    },
    DescribeTransitGatewayMulticastDomains: {
      name: "DescribeTransitGatewayMulticastDomains",
      input: "com.amazonaws.ec2#DescribeTransitGatewayMulticastDomainsRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayMulticastDomainsResult",
      responseWrapper: "DescribeTransitGatewayMulticastDomainsResponse",
    },
    DescribeTransitGatewayPeeringAttachments: {
      name: "DescribeTransitGatewayPeeringAttachments",
      input:
        "com.amazonaws.ec2#DescribeTransitGatewayPeeringAttachmentsRequest",
      output:
        "com.amazonaws.ec2#DescribeTransitGatewayPeeringAttachmentsResult",
      responseWrapper: "DescribeTransitGatewayPeeringAttachmentsResponse",
    },
    DescribeTransitGatewayPolicyTables: {
      name: "DescribeTransitGatewayPolicyTables",
      input: "com.amazonaws.ec2#DescribeTransitGatewayPolicyTablesRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayPolicyTablesResult",
      responseWrapper: "DescribeTransitGatewayPolicyTablesResponse",
    },
    DescribeTransitGatewayRouteTableAnnouncements: {
      name: "DescribeTransitGatewayRouteTableAnnouncements",
      input:
        "com.amazonaws.ec2#DescribeTransitGatewayRouteTableAnnouncementsRequest",
      output:
        "com.amazonaws.ec2#DescribeTransitGatewayRouteTableAnnouncementsResult",
      responseWrapper: "DescribeTransitGatewayRouteTableAnnouncementsResponse",
    },
    DescribeTransitGatewayRouteTables: {
      name: "DescribeTransitGatewayRouteTables",
      input: "com.amazonaws.ec2#DescribeTransitGatewayRouteTablesRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayRouteTablesResult",
      responseWrapper: "DescribeTransitGatewayRouteTablesResponse",
    },
    DescribeTransitGatewayVpcAttachments: {
      name: "DescribeTransitGatewayVpcAttachments",
      input: "com.amazonaws.ec2#DescribeTransitGatewayVpcAttachmentsRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewayVpcAttachmentsResult",
      responseWrapper: "DescribeTransitGatewayVpcAttachmentsResponse",
    },
    DescribeTransitGateways: {
      name: "DescribeTransitGateways",
      input: "com.amazonaws.ec2#DescribeTransitGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeTransitGatewaysResult",
      responseWrapper: "DescribeTransitGatewaysResponse",
    },
    DescribeTrunkInterfaceAssociations: {
      name: "DescribeTrunkInterfaceAssociations",
      input: "com.amazonaws.ec2#DescribeTrunkInterfaceAssociationsRequest",
      output: "com.amazonaws.ec2#DescribeTrunkInterfaceAssociationsResult",
      responseWrapper: "DescribeTrunkInterfaceAssociationsResponse",
    },
    DescribeVerifiedAccessEndpoints: {
      name: "DescribeVerifiedAccessEndpoints",
      input: "com.amazonaws.ec2#DescribeVerifiedAccessEndpointsRequest",
      output: "com.amazonaws.ec2#DescribeVerifiedAccessEndpointsResult",
      responseWrapper: "DescribeVerifiedAccessEndpointsResponse",
    },
    DescribeVerifiedAccessGroups: {
      name: "DescribeVerifiedAccessGroups",
      input: "com.amazonaws.ec2#DescribeVerifiedAccessGroupsRequest",
      output: "com.amazonaws.ec2#DescribeVerifiedAccessGroupsResult",
      responseWrapper: "DescribeVerifiedAccessGroupsResponse",
    },
    DescribeVerifiedAccessInstanceLoggingConfigurations: {
      name: "DescribeVerifiedAccessInstanceLoggingConfigurations",
      input:
        "com.amazonaws.ec2#DescribeVerifiedAccessInstanceLoggingConfigurationsRequest",
      output:
        "com.amazonaws.ec2#DescribeVerifiedAccessInstanceLoggingConfigurationsResult",
      responseWrapper:
        "DescribeVerifiedAccessInstanceLoggingConfigurationsResponse",
    },
    DescribeVerifiedAccessInstances: {
      name: "DescribeVerifiedAccessInstances",
      input: "com.amazonaws.ec2#DescribeVerifiedAccessInstancesRequest",
      output: "com.amazonaws.ec2#DescribeVerifiedAccessInstancesResult",
      responseWrapper: "DescribeVerifiedAccessInstancesResponse",
    },
    DescribeVerifiedAccessTrustProviders: {
      name: "DescribeVerifiedAccessTrustProviders",
      input: "com.amazonaws.ec2#DescribeVerifiedAccessTrustProvidersRequest",
      output: "com.amazonaws.ec2#DescribeVerifiedAccessTrustProvidersResult",
      responseWrapper: "DescribeVerifiedAccessTrustProvidersResponse",
    },
    DescribeVolumeAttribute: {
      name: "DescribeVolumeAttribute",
      input: "com.amazonaws.ec2#DescribeVolumeAttributeRequest",
      output: "com.amazonaws.ec2#DescribeVolumeAttributeResult",
      responseWrapper: "DescribeVolumeAttributeResponse",
    },
    DescribeVolumeStatus: {
      name: "DescribeVolumeStatus",
      input: "com.amazonaws.ec2#DescribeVolumeStatusRequest",
      output: "com.amazonaws.ec2#DescribeVolumeStatusResult",
      responseWrapper: "DescribeVolumeStatusResponse",
    },
    DescribeVolumes: {
      name: "DescribeVolumes",
      input: "com.amazonaws.ec2#DescribeVolumesRequest",
      output: "com.amazonaws.ec2#DescribeVolumesResult",
      responseWrapper: "DescribeVolumesResponse",
    },
    DescribeVolumesModifications: {
      name: "DescribeVolumesModifications",
      input: "com.amazonaws.ec2#DescribeVolumesModificationsRequest",
      output: "com.amazonaws.ec2#DescribeVolumesModificationsResult",
      responseWrapper: "DescribeVolumesModificationsResponse",
    },
    DescribeVpcAttribute: {
      name: "DescribeVpcAttribute",
      input: "com.amazonaws.ec2#DescribeVpcAttributeRequest",
      output: "com.amazonaws.ec2#DescribeVpcAttributeResult",
      responseWrapper: "DescribeVpcAttributeResponse",
    },
    DescribeVpcBlockPublicAccessExclusions: {
      name: "DescribeVpcBlockPublicAccessExclusions",
      input: "com.amazonaws.ec2#DescribeVpcBlockPublicAccessExclusionsRequest",
      output: "com.amazonaws.ec2#DescribeVpcBlockPublicAccessExclusionsResult",
      responseWrapper: "DescribeVpcBlockPublicAccessExclusionsResponse",
    },
    DescribeVpcBlockPublicAccessOptions: {
      name: "DescribeVpcBlockPublicAccessOptions",
      input: "com.amazonaws.ec2#DescribeVpcBlockPublicAccessOptionsRequest",
      output: "com.amazonaws.ec2#DescribeVpcBlockPublicAccessOptionsResult",
      responseWrapper: "DescribeVpcBlockPublicAccessOptionsResponse",
    },
    DescribeVpcClassicLink: {
      name: "DescribeVpcClassicLink",
      input: "com.amazonaws.ec2#DescribeVpcClassicLinkRequest",
      output: "com.amazonaws.ec2#DescribeVpcClassicLinkResult",
      responseWrapper: "DescribeVpcClassicLinkResponse",
    },
    DescribeVpcClassicLinkDnsSupport: {
      name: "DescribeVpcClassicLinkDnsSupport",
      input: "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportRequest",
      output: "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportResult",
      responseWrapper: "DescribeVpcClassicLinkDnsSupportResponse",
    },
    DescribeVpcEndpointAssociations: {
      name: "DescribeVpcEndpointAssociations",
      input: "com.amazonaws.ec2#DescribeVpcEndpointAssociationsRequest",
      output: "com.amazonaws.ec2#DescribeVpcEndpointAssociationsResult",
      responseWrapper: "DescribeVpcEndpointAssociationsResponse",
    },
    DescribeVpcEndpointConnectionNotifications: {
      name: "DescribeVpcEndpointConnectionNotifications",
      input:
        "com.amazonaws.ec2#DescribeVpcEndpointConnectionNotificationsRequest",
      output:
        "com.amazonaws.ec2#DescribeVpcEndpointConnectionNotificationsResult",
      responseWrapper: "DescribeVpcEndpointConnectionNotificationsResponse",
    },
    DescribeVpcEndpointConnections: {
      name: "DescribeVpcEndpointConnections",
      input: "com.amazonaws.ec2#DescribeVpcEndpointConnectionsRequest",
      output: "com.amazonaws.ec2#DescribeVpcEndpointConnectionsResult",
      responseWrapper: "DescribeVpcEndpointConnectionsResponse",
    },
    DescribeVpcEndpointServiceConfigurations: {
      name: "DescribeVpcEndpointServiceConfigurations",
      input:
        "com.amazonaws.ec2#DescribeVpcEndpointServiceConfigurationsRequest",
      output:
        "com.amazonaws.ec2#DescribeVpcEndpointServiceConfigurationsResult",
      responseWrapper: "DescribeVpcEndpointServiceConfigurationsResponse",
    },
    DescribeVpcEndpointServicePermissions: {
      name: "DescribeVpcEndpointServicePermissions",
      input: "com.amazonaws.ec2#DescribeVpcEndpointServicePermissionsRequest",
      output: "com.amazonaws.ec2#DescribeVpcEndpointServicePermissionsResult",
      responseWrapper: "DescribeVpcEndpointServicePermissionsResponse",
    },
    DescribeVpcEndpointServices: {
      name: "DescribeVpcEndpointServices",
      input: "com.amazonaws.ec2#DescribeVpcEndpointServicesRequest",
      output: "com.amazonaws.ec2#DescribeVpcEndpointServicesResult",
      responseWrapper: "DescribeVpcEndpointServicesResponse",
    },
    DescribeVpcEndpoints: {
      name: "DescribeVpcEndpoints",
      input: "com.amazonaws.ec2#DescribeVpcEndpointsRequest",
      output: "com.amazonaws.ec2#DescribeVpcEndpointsResult",
      responseWrapper: "DescribeVpcEndpointsResponse",
    },
    DescribeVpcPeeringConnections: {
      name: "DescribeVpcPeeringConnections",
      input: "com.amazonaws.ec2#DescribeVpcPeeringConnectionsRequest",
      output: "com.amazonaws.ec2#DescribeVpcPeeringConnectionsResult",
      responseWrapper: "DescribeVpcPeeringConnectionsResponse",
    },
    DescribeVpcs: {
      name: "DescribeVpcs",
      input: "com.amazonaws.ec2#DescribeVpcsRequest",
      output: "com.amazonaws.ec2#DescribeVpcsResult",
      responseWrapper: "DescribeVpcsResponse",
    },
    DescribeVpnConnections: {
      name: "DescribeVpnConnections",
      input: "com.amazonaws.ec2#DescribeVpnConnectionsRequest",
      output: "com.amazonaws.ec2#DescribeVpnConnectionsResult",
      responseWrapper: "DescribeVpnConnectionsResponse",
    },
    DescribeVpnGateways: {
      name: "DescribeVpnGateways",
      input: "com.amazonaws.ec2#DescribeVpnGatewaysRequest",
      output: "com.amazonaws.ec2#DescribeVpnGatewaysResult",
      responseWrapper: "DescribeVpnGatewaysResponse",
    },
    DetachClassicLinkVpc: {
      name: "DetachClassicLinkVpc",
      input: "com.amazonaws.ec2#DetachClassicLinkVpcRequest",
      output: "com.amazonaws.ec2#DetachClassicLinkVpcResult",
      responseWrapper: "DetachClassicLinkVpcResponse",
    },
    DetachInternetGateway: {
      name: "DetachInternetGateway",
      input: "com.amazonaws.ec2#DetachInternetGatewayRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DetachInternetGatewayResponse",
    },
    DetachNetworkInterface: {
      name: "DetachNetworkInterface",
      input: "com.amazonaws.ec2#DetachNetworkInterfaceRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DetachNetworkInterfaceResponse",
    },
    DetachVerifiedAccessTrustProvider: {
      name: "DetachVerifiedAccessTrustProvider",
      input: "com.amazonaws.ec2#DetachVerifiedAccessTrustProviderRequest",
      output: "com.amazonaws.ec2#DetachVerifiedAccessTrustProviderResult",
      responseWrapper: "DetachVerifiedAccessTrustProviderResponse",
    },
    DetachVolume: {
      name: "DetachVolume",
      input: "com.amazonaws.ec2#DetachVolumeRequest",
      output: "com.amazonaws.ec2#VolumeAttachment",
      responseWrapper: "DetachVolumeResponse",
    },
    DetachVpnGateway: {
      name: "DetachVpnGateway",
      input: "com.amazonaws.ec2#DetachVpnGatewayRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DetachVpnGatewayResponse",
    },
    DisableAddressTransfer: {
      name: "DisableAddressTransfer",
      input: "com.amazonaws.ec2#DisableAddressTransferRequest",
      output: "com.amazonaws.ec2#DisableAddressTransferResult",
      responseWrapper: "DisableAddressTransferResponse",
    },
    DisableAllowedImagesSettings: {
      name: "DisableAllowedImagesSettings",
      input: "com.amazonaws.ec2#DisableAllowedImagesSettingsRequest",
      output: "com.amazonaws.ec2#DisableAllowedImagesSettingsResult",
      responseWrapper: "DisableAllowedImagesSettingsResponse",
    },
    DisableAwsNetworkPerformanceMetricSubscription: {
      name: "DisableAwsNetworkPerformanceMetricSubscription",
      input:
        "com.amazonaws.ec2#DisableAwsNetworkPerformanceMetricSubscriptionRequest",
      output:
        "com.amazonaws.ec2#DisableAwsNetworkPerformanceMetricSubscriptionResult",
      responseWrapper: "DisableAwsNetworkPerformanceMetricSubscriptionResponse",
    },
    DisableEbsEncryptionByDefault: {
      name: "DisableEbsEncryptionByDefault",
      input: "com.amazonaws.ec2#DisableEbsEncryptionByDefaultRequest",
      output: "com.amazonaws.ec2#DisableEbsEncryptionByDefaultResult",
      responseWrapper: "DisableEbsEncryptionByDefaultResponse",
    },
    DisableFastLaunch: {
      name: "DisableFastLaunch",
      input: "com.amazonaws.ec2#DisableFastLaunchRequest",
      output: "com.amazonaws.ec2#DisableFastLaunchResult",
      responseWrapper: "DisableFastLaunchResponse",
    },
    DisableFastSnapshotRestores: {
      name: "DisableFastSnapshotRestores",
      input: "com.amazonaws.ec2#DisableFastSnapshotRestoresRequest",
      output: "com.amazonaws.ec2#DisableFastSnapshotRestoresResult",
      responseWrapper: "DisableFastSnapshotRestoresResponse",
    },
    DisableImage: {
      name: "DisableImage",
      input: "com.amazonaws.ec2#DisableImageRequest",
      output: "com.amazonaws.ec2#DisableImageResult",
      responseWrapper: "DisableImageResponse",
    },
    DisableImageBlockPublicAccess: {
      name: "DisableImageBlockPublicAccess",
      input: "com.amazonaws.ec2#DisableImageBlockPublicAccessRequest",
      output: "com.amazonaws.ec2#DisableImageBlockPublicAccessResult",
      responseWrapper: "DisableImageBlockPublicAccessResponse",
    },
    DisableImageDeprecation: {
      name: "DisableImageDeprecation",
      input: "com.amazonaws.ec2#DisableImageDeprecationRequest",
      output: "com.amazonaws.ec2#DisableImageDeprecationResult",
      responseWrapper: "DisableImageDeprecationResponse",
    },
    DisableImageDeregistrationProtection: {
      name: "DisableImageDeregistrationProtection",
      input: "com.amazonaws.ec2#DisableImageDeregistrationProtectionRequest",
      output: "com.amazonaws.ec2#DisableImageDeregistrationProtectionResult",
      responseWrapper: "DisableImageDeregistrationProtectionResponse",
    },
    DisableIpamOrganizationAdminAccount: {
      name: "DisableIpamOrganizationAdminAccount",
      input: "com.amazonaws.ec2#DisableIpamOrganizationAdminAccountRequest",
      output: "com.amazonaws.ec2#DisableIpamOrganizationAdminAccountResult",
      responseWrapper: "DisableIpamOrganizationAdminAccountResponse",
    },
    DisableRouteServerPropagation: {
      name: "DisableRouteServerPropagation",
      input: "com.amazonaws.ec2#DisableRouteServerPropagationRequest",
      output: "com.amazonaws.ec2#DisableRouteServerPropagationResult",
      responseWrapper: "DisableRouteServerPropagationResponse",
    },
    DisableSerialConsoleAccess: {
      name: "DisableSerialConsoleAccess",
      input: "com.amazonaws.ec2#DisableSerialConsoleAccessRequest",
      output: "com.amazonaws.ec2#DisableSerialConsoleAccessResult",
      responseWrapper: "DisableSerialConsoleAccessResponse",
    },
    DisableSnapshotBlockPublicAccess: {
      name: "DisableSnapshotBlockPublicAccess",
      input: "com.amazonaws.ec2#DisableSnapshotBlockPublicAccessRequest",
      output: "com.amazonaws.ec2#DisableSnapshotBlockPublicAccessResult",
      responseWrapper: "DisableSnapshotBlockPublicAccessResponse",
    },
    DisableTransitGatewayRouteTablePropagation: {
      name: "DisableTransitGatewayRouteTablePropagation",
      input:
        "com.amazonaws.ec2#DisableTransitGatewayRouteTablePropagationRequest",
      output:
        "com.amazonaws.ec2#DisableTransitGatewayRouteTablePropagationResult",
      responseWrapper: "DisableTransitGatewayRouteTablePropagationResponse",
    },
    DisableVgwRoutePropagation: {
      name: "DisableVgwRoutePropagation",
      input: "com.amazonaws.ec2#DisableVgwRoutePropagationRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DisableVgwRoutePropagationResponse",
    },
    DisableVpcClassicLink: {
      name: "DisableVpcClassicLink",
      input: "com.amazonaws.ec2#DisableVpcClassicLinkRequest",
      output: "com.amazonaws.ec2#DisableVpcClassicLinkResult",
      responseWrapper: "DisableVpcClassicLinkResponse",
    },
    DisableVpcClassicLinkDnsSupport: {
      name: "DisableVpcClassicLinkDnsSupport",
      input: "com.amazonaws.ec2#DisableVpcClassicLinkDnsSupportRequest",
      output: "com.amazonaws.ec2#DisableVpcClassicLinkDnsSupportResult",
      responseWrapper: "DisableVpcClassicLinkDnsSupportResponse",
    },
    DisassociateAddress: {
      name: "DisassociateAddress",
      input: "com.amazonaws.ec2#DisassociateAddressRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DisassociateAddressResponse",
    },
    DisassociateCapacityReservationBillingOwner: {
      name: "DisassociateCapacityReservationBillingOwner",
      input:
        "com.amazonaws.ec2#DisassociateCapacityReservationBillingOwnerRequest",
      output:
        "com.amazonaws.ec2#DisassociateCapacityReservationBillingOwnerResult",
      responseWrapper: "DisassociateCapacityReservationBillingOwnerResponse",
    },
    DisassociateClientVpnTargetNetwork: {
      name: "DisassociateClientVpnTargetNetwork",
      input: "com.amazonaws.ec2#DisassociateClientVpnTargetNetworkRequest",
      output: "com.amazonaws.ec2#DisassociateClientVpnTargetNetworkResult",
      responseWrapper: "DisassociateClientVpnTargetNetworkResponse",
    },
    DisassociateEnclaveCertificateIamRole: {
      name: "DisassociateEnclaveCertificateIamRole",
      input: "com.amazonaws.ec2#DisassociateEnclaveCertificateIamRoleRequest",
      output: "com.amazonaws.ec2#DisassociateEnclaveCertificateIamRoleResult",
      responseWrapper: "DisassociateEnclaveCertificateIamRoleResponse",
    },
    DisassociateIamInstanceProfile: {
      name: "DisassociateIamInstanceProfile",
      input: "com.amazonaws.ec2#DisassociateIamInstanceProfileRequest",
      output: "com.amazonaws.ec2#DisassociateIamInstanceProfileResult",
      responseWrapper: "DisassociateIamInstanceProfileResponse",
    },
    DisassociateInstanceEventWindow: {
      name: "DisassociateInstanceEventWindow",
      input: "com.amazonaws.ec2#DisassociateInstanceEventWindowRequest",
      output: "com.amazonaws.ec2#DisassociateInstanceEventWindowResult",
      responseWrapper: "DisassociateInstanceEventWindowResponse",
    },
    DisassociateIpamByoasn: {
      name: "DisassociateIpamByoasn",
      input: "com.amazonaws.ec2#DisassociateIpamByoasnRequest",
      output: "com.amazonaws.ec2#DisassociateIpamByoasnResult",
      responseWrapper: "DisassociateIpamByoasnResponse",
    },
    DisassociateIpamResourceDiscovery: {
      name: "DisassociateIpamResourceDiscovery",
      input: "com.amazonaws.ec2#DisassociateIpamResourceDiscoveryRequest",
      output: "com.amazonaws.ec2#DisassociateIpamResourceDiscoveryResult",
      responseWrapper: "DisassociateIpamResourceDiscoveryResponse",
    },
    DisassociateNatGatewayAddress: {
      name: "DisassociateNatGatewayAddress",
      input: "com.amazonaws.ec2#DisassociateNatGatewayAddressRequest",
      output: "com.amazonaws.ec2#DisassociateNatGatewayAddressResult",
      responseWrapper: "DisassociateNatGatewayAddressResponse",
    },
    DisassociateRouteServer: {
      name: "DisassociateRouteServer",
      input: "com.amazonaws.ec2#DisassociateRouteServerRequest",
      output: "com.amazonaws.ec2#DisassociateRouteServerResult",
      responseWrapper: "DisassociateRouteServerResponse",
    },
    DisassociateRouteTable: {
      name: "DisassociateRouteTable",
      input: "com.amazonaws.ec2#DisassociateRouteTableRequest",
      output: "smithy.api#Unit",
      responseWrapper: "DisassociateRouteTableResponse",
    },
    DisassociateSecurityGroupVpc: {
      name: "DisassociateSecurityGroupVpc",
      input: "com.amazonaws.ec2#DisassociateSecurityGroupVpcRequest",
      output: "com.amazonaws.ec2#DisassociateSecurityGroupVpcResult",
      responseWrapper: "DisassociateSecurityGroupVpcResponse",
    },
    DisassociateSubnetCidrBlock: {
      name: "DisassociateSubnetCidrBlock",
      input: "com.amazonaws.ec2#DisassociateSubnetCidrBlockRequest",
      output: "com.amazonaws.ec2#DisassociateSubnetCidrBlockResult",
      responseWrapper: "DisassociateSubnetCidrBlockResponse",
    },
    DisassociateTransitGatewayMulticastDomain: {
      name: "DisassociateTransitGatewayMulticastDomain",
      input:
        "com.amazonaws.ec2#DisassociateTransitGatewayMulticastDomainRequest",
      output:
        "com.amazonaws.ec2#DisassociateTransitGatewayMulticastDomainResult",
      responseWrapper: "DisassociateTransitGatewayMulticastDomainResponse",
    },
    DisassociateTransitGatewayPolicyTable: {
      name: "DisassociateTransitGatewayPolicyTable",
      input: "com.amazonaws.ec2#DisassociateTransitGatewayPolicyTableRequest",
      output: "com.amazonaws.ec2#DisassociateTransitGatewayPolicyTableResult",
      responseWrapper: "DisassociateTransitGatewayPolicyTableResponse",
    },
    DisassociateTransitGatewayRouteTable: {
      name: "DisassociateTransitGatewayRouteTable",
      input: "com.amazonaws.ec2#DisassociateTransitGatewayRouteTableRequest",
      output: "com.amazonaws.ec2#DisassociateTransitGatewayRouteTableResult",
      responseWrapper: "DisassociateTransitGatewayRouteTableResponse",
    },
    DisassociateTrunkInterface: {
      name: "DisassociateTrunkInterface",
      input: "com.amazonaws.ec2#DisassociateTrunkInterfaceRequest",
      output: "com.amazonaws.ec2#DisassociateTrunkInterfaceResult",
      responseWrapper: "DisassociateTrunkInterfaceResponse",
    },
    DisassociateVpcCidrBlock: {
      name: "DisassociateVpcCidrBlock",
      input: "com.amazonaws.ec2#DisassociateVpcCidrBlockRequest",
      output: "com.amazonaws.ec2#DisassociateVpcCidrBlockResult",
      responseWrapper: "DisassociateVpcCidrBlockResponse",
    },
    EnableAddressTransfer: {
      name: "EnableAddressTransfer",
      input: "com.amazonaws.ec2#EnableAddressTransferRequest",
      output: "com.amazonaws.ec2#EnableAddressTransferResult",
      responseWrapper: "EnableAddressTransferResponse",
    },
    EnableAllowedImagesSettings: {
      name: "EnableAllowedImagesSettings",
      input: "com.amazonaws.ec2#EnableAllowedImagesSettingsRequest",
      output: "com.amazonaws.ec2#EnableAllowedImagesSettingsResult",
      responseWrapper: "EnableAllowedImagesSettingsResponse",
    },
    EnableAwsNetworkPerformanceMetricSubscription: {
      name: "EnableAwsNetworkPerformanceMetricSubscription",
      input:
        "com.amazonaws.ec2#EnableAwsNetworkPerformanceMetricSubscriptionRequest",
      output:
        "com.amazonaws.ec2#EnableAwsNetworkPerformanceMetricSubscriptionResult",
      responseWrapper: "EnableAwsNetworkPerformanceMetricSubscriptionResponse",
    },
    EnableEbsEncryptionByDefault: {
      name: "EnableEbsEncryptionByDefault",
      input: "com.amazonaws.ec2#EnableEbsEncryptionByDefaultRequest",
      output: "com.amazonaws.ec2#EnableEbsEncryptionByDefaultResult",
      responseWrapper: "EnableEbsEncryptionByDefaultResponse",
    },
    EnableFastLaunch: {
      name: "EnableFastLaunch",
      input: "com.amazonaws.ec2#EnableFastLaunchRequest",
      output: "com.amazonaws.ec2#EnableFastLaunchResult",
      responseWrapper: "EnableFastLaunchResponse",
    },
    EnableFastSnapshotRestores: {
      name: "EnableFastSnapshotRestores",
      input: "com.amazonaws.ec2#EnableFastSnapshotRestoresRequest",
      output: "com.amazonaws.ec2#EnableFastSnapshotRestoresResult",
      responseWrapper: "EnableFastSnapshotRestoresResponse",
    },
    EnableImage: {
      name: "EnableImage",
      input: "com.amazonaws.ec2#EnableImageRequest",
      output: "com.amazonaws.ec2#EnableImageResult",
      responseWrapper: "EnableImageResponse",
    },
    EnableImageBlockPublicAccess: {
      name: "EnableImageBlockPublicAccess",
      input: "com.amazonaws.ec2#EnableImageBlockPublicAccessRequest",
      output: "com.amazonaws.ec2#EnableImageBlockPublicAccessResult",
      responseWrapper: "EnableImageBlockPublicAccessResponse",
    },
    EnableImageDeprecation: {
      name: "EnableImageDeprecation",
      input: "com.amazonaws.ec2#EnableImageDeprecationRequest",
      output: "com.amazonaws.ec2#EnableImageDeprecationResult",
      responseWrapper: "EnableImageDeprecationResponse",
    },
    EnableImageDeregistrationProtection: {
      name: "EnableImageDeregistrationProtection",
      input: "com.amazonaws.ec2#EnableImageDeregistrationProtectionRequest",
      output: "com.amazonaws.ec2#EnableImageDeregistrationProtectionResult",
      responseWrapper: "EnableImageDeregistrationProtectionResponse",
    },
    EnableIpamOrganizationAdminAccount: {
      name: "EnableIpamOrganizationAdminAccount",
      input: "com.amazonaws.ec2#EnableIpamOrganizationAdminAccountRequest",
      output: "com.amazonaws.ec2#EnableIpamOrganizationAdminAccountResult",
      responseWrapper: "EnableIpamOrganizationAdminAccountResponse",
    },
    EnableReachabilityAnalyzerOrganizationSharing: {
      name: "EnableReachabilityAnalyzerOrganizationSharing",
      input:
        "com.amazonaws.ec2#EnableReachabilityAnalyzerOrganizationSharingRequest",
      output:
        "com.amazonaws.ec2#EnableReachabilityAnalyzerOrganizationSharingResult",
      responseWrapper: "EnableReachabilityAnalyzerOrganizationSharingResponse",
    },
    EnableRouteServerPropagation: {
      name: "EnableRouteServerPropagation",
      input: "com.amazonaws.ec2#EnableRouteServerPropagationRequest",
      output: "com.amazonaws.ec2#EnableRouteServerPropagationResult",
      responseWrapper: "EnableRouteServerPropagationResponse",
    },
    EnableSerialConsoleAccess: {
      name: "EnableSerialConsoleAccess",
      input: "com.amazonaws.ec2#EnableSerialConsoleAccessRequest",
      output: "com.amazonaws.ec2#EnableSerialConsoleAccessResult",
      responseWrapper: "EnableSerialConsoleAccessResponse",
    },
    EnableSnapshotBlockPublicAccess: {
      name: "EnableSnapshotBlockPublicAccess",
      input: "com.amazonaws.ec2#EnableSnapshotBlockPublicAccessRequest",
      output: "com.amazonaws.ec2#EnableSnapshotBlockPublicAccessResult",
      responseWrapper: "EnableSnapshotBlockPublicAccessResponse",
    },
    EnableTransitGatewayRouteTablePropagation: {
      name: "EnableTransitGatewayRouteTablePropagation",
      input:
        "com.amazonaws.ec2#EnableTransitGatewayRouteTablePropagationRequest",
      output:
        "com.amazonaws.ec2#EnableTransitGatewayRouteTablePropagationResult",
      responseWrapper: "EnableTransitGatewayRouteTablePropagationResponse",
    },
    EnableVgwRoutePropagation: {
      name: "EnableVgwRoutePropagation",
      input: "com.amazonaws.ec2#EnableVgwRoutePropagationRequest",
      output: "smithy.api#Unit",
      responseWrapper: "EnableVgwRoutePropagationResponse",
    },
    EnableVolumeIO: {
      name: "EnableVolumeIO",
      input: "com.amazonaws.ec2#EnableVolumeIORequest",
      output: "smithy.api#Unit",
      responseWrapper: "EnableVolumeIOResponse",
    },
    EnableVpcClassicLink: {
      name: "EnableVpcClassicLink",
      input: "com.amazonaws.ec2#EnableVpcClassicLinkRequest",
      output: "com.amazonaws.ec2#EnableVpcClassicLinkResult",
      responseWrapper: "EnableVpcClassicLinkResponse",
    },
    EnableVpcClassicLinkDnsSupport: {
      name: "EnableVpcClassicLinkDnsSupport",
      input: "com.amazonaws.ec2#EnableVpcClassicLinkDnsSupportRequest",
      output: "com.amazonaws.ec2#EnableVpcClassicLinkDnsSupportResult",
      responseWrapper: "EnableVpcClassicLinkDnsSupportResponse",
    },
    ExportClientVpnClientCertificateRevocationList: {
      name: "ExportClientVpnClientCertificateRevocationList",
      input:
        "com.amazonaws.ec2#ExportClientVpnClientCertificateRevocationListRequest",
      output:
        "com.amazonaws.ec2#ExportClientVpnClientCertificateRevocationListResult",
      responseWrapper: "ExportClientVpnClientCertificateRevocationListResponse",
    },
    ExportClientVpnClientConfiguration: {
      name: "ExportClientVpnClientConfiguration",
      input: "com.amazonaws.ec2#ExportClientVpnClientConfigurationRequest",
      output: "com.amazonaws.ec2#ExportClientVpnClientConfigurationResult",
      responseWrapper: "ExportClientVpnClientConfigurationResponse",
    },
    ExportImage: {
      name: "ExportImage",
      input: "com.amazonaws.ec2#ExportImageRequest",
      output: "com.amazonaws.ec2#ExportImageResult",
      responseWrapper: "ExportImageResponse",
    },
    ExportTransitGatewayRoutes: {
      name: "ExportTransitGatewayRoutes",
      input: "com.amazonaws.ec2#ExportTransitGatewayRoutesRequest",
      output: "com.amazonaws.ec2#ExportTransitGatewayRoutesResult",
      responseWrapper: "ExportTransitGatewayRoutesResponse",
    },
    ExportVerifiedAccessInstanceClientConfiguration: {
      name: "ExportVerifiedAccessInstanceClientConfiguration",
      input:
        "com.amazonaws.ec2#ExportVerifiedAccessInstanceClientConfigurationRequest",
      output:
        "com.amazonaws.ec2#ExportVerifiedAccessInstanceClientConfigurationResult",
      responseWrapper:
        "ExportVerifiedAccessInstanceClientConfigurationResponse",
    },
    GetActiveVpnTunnelStatus: {
      name: "GetActiveVpnTunnelStatus",
      input: "com.amazonaws.ec2#GetActiveVpnTunnelStatusRequest",
      output: "com.amazonaws.ec2#GetActiveVpnTunnelStatusResult",
      responseWrapper: "GetActiveVpnTunnelStatusResponse",
    },
    GetAllowedImagesSettings: {
      name: "GetAllowedImagesSettings",
      input: "com.amazonaws.ec2#GetAllowedImagesSettingsRequest",
      output: "com.amazonaws.ec2#GetAllowedImagesSettingsResult",
      responseWrapper: "GetAllowedImagesSettingsResponse",
    },
    GetAssociatedEnclaveCertificateIamRoles: {
      name: "GetAssociatedEnclaveCertificateIamRoles",
      input: "com.amazonaws.ec2#GetAssociatedEnclaveCertificateIamRolesRequest",
      output: "com.amazonaws.ec2#GetAssociatedEnclaveCertificateIamRolesResult",
      responseWrapper: "GetAssociatedEnclaveCertificateIamRolesResponse",
    },
    GetAssociatedIpv6PoolCidrs: {
      name: "GetAssociatedIpv6PoolCidrs",
      input: "com.amazonaws.ec2#GetAssociatedIpv6PoolCidrsRequest",
      output: "com.amazonaws.ec2#GetAssociatedIpv6PoolCidrsResult",
      responseWrapper: "GetAssociatedIpv6PoolCidrsResponse",
    },
    GetAwsNetworkPerformanceData: {
      name: "GetAwsNetworkPerformanceData",
      input: "com.amazonaws.ec2#GetAwsNetworkPerformanceDataRequest",
      output: "com.amazonaws.ec2#GetAwsNetworkPerformanceDataResult",
      responseWrapper: "GetAwsNetworkPerformanceDataResponse",
    },
    GetCapacityReservationUsage: {
      name: "GetCapacityReservationUsage",
      input: "com.amazonaws.ec2#GetCapacityReservationUsageRequest",
      output: "com.amazonaws.ec2#GetCapacityReservationUsageResult",
      responseWrapper: "GetCapacityReservationUsageResponse",
    },
    GetCoipPoolUsage: {
      name: "GetCoipPoolUsage",
      input: "com.amazonaws.ec2#GetCoipPoolUsageRequest",
      output: "com.amazonaws.ec2#GetCoipPoolUsageResult",
      responseWrapper: "GetCoipPoolUsageResponse",
    },
    GetConsoleOutput: {
      name: "GetConsoleOutput",
      input: "com.amazonaws.ec2#GetConsoleOutputRequest",
      output: "com.amazonaws.ec2#GetConsoleOutputResult",
      responseWrapper: "GetConsoleOutputResponse",
    },
    GetConsoleScreenshot: {
      name: "GetConsoleScreenshot",
      input: "com.amazonaws.ec2#GetConsoleScreenshotRequest",
      output: "com.amazonaws.ec2#GetConsoleScreenshotResult",
      responseWrapper: "GetConsoleScreenshotResponse",
    },
    GetDeclarativePoliciesReportSummary: {
      name: "GetDeclarativePoliciesReportSummary",
      input: "com.amazonaws.ec2#GetDeclarativePoliciesReportSummaryRequest",
      output: "com.amazonaws.ec2#GetDeclarativePoliciesReportSummaryResult",
      responseWrapper: "GetDeclarativePoliciesReportSummaryResponse",
    },
    GetDefaultCreditSpecification: {
      name: "GetDefaultCreditSpecification",
      input: "com.amazonaws.ec2#GetDefaultCreditSpecificationRequest",
      output: "com.amazonaws.ec2#GetDefaultCreditSpecificationResult",
      responseWrapper: "GetDefaultCreditSpecificationResponse",
    },
    GetEbsDefaultKmsKeyId: {
      name: "GetEbsDefaultKmsKeyId",
      input: "com.amazonaws.ec2#GetEbsDefaultKmsKeyIdRequest",
      output: "com.amazonaws.ec2#GetEbsDefaultKmsKeyIdResult",
      responseWrapper: "GetEbsDefaultKmsKeyIdResponse",
    },
    GetEbsEncryptionByDefault: {
      name: "GetEbsEncryptionByDefault",
      input: "com.amazonaws.ec2#GetEbsEncryptionByDefaultRequest",
      output: "com.amazonaws.ec2#GetEbsEncryptionByDefaultResult",
      responseWrapper: "GetEbsEncryptionByDefaultResponse",
    },
    GetFlowLogsIntegrationTemplate: {
      name: "GetFlowLogsIntegrationTemplate",
      input: "com.amazonaws.ec2#GetFlowLogsIntegrationTemplateRequest",
      output: "com.amazonaws.ec2#GetFlowLogsIntegrationTemplateResult",
      responseWrapper: "GetFlowLogsIntegrationTemplateResponse",
    },
    GetGroupsForCapacityReservation: {
      name: "GetGroupsForCapacityReservation",
      input: "com.amazonaws.ec2#GetGroupsForCapacityReservationRequest",
      output: "com.amazonaws.ec2#GetGroupsForCapacityReservationResult",
      responseWrapper: "GetGroupsForCapacityReservationResponse",
    },
    GetHostReservationPurchasePreview: {
      name: "GetHostReservationPurchasePreview",
      input: "com.amazonaws.ec2#GetHostReservationPurchasePreviewRequest",
      output: "com.amazonaws.ec2#GetHostReservationPurchasePreviewResult",
      responseWrapper: "GetHostReservationPurchasePreviewResponse",
    },
    GetImageBlockPublicAccessState: {
      name: "GetImageBlockPublicAccessState",
      input: "com.amazonaws.ec2#GetImageBlockPublicAccessStateRequest",
      output: "com.amazonaws.ec2#GetImageBlockPublicAccessStateResult",
      responseWrapper: "GetImageBlockPublicAccessStateResponse",
    },
    GetInstanceMetadataDefaults: {
      name: "GetInstanceMetadataDefaults",
      input: "com.amazonaws.ec2#GetInstanceMetadataDefaultsRequest",
      output: "com.amazonaws.ec2#GetInstanceMetadataDefaultsResult",
      responseWrapper: "GetInstanceMetadataDefaultsResponse",
    },
    GetInstanceTpmEkPub: {
      name: "GetInstanceTpmEkPub",
      input: "com.amazonaws.ec2#GetInstanceTpmEkPubRequest",
      output: "com.amazonaws.ec2#GetInstanceTpmEkPubResult",
      responseWrapper: "GetInstanceTpmEkPubResponse",
    },
    GetInstanceTypesFromInstanceRequirements: {
      name: "GetInstanceTypesFromInstanceRequirements",
      input:
        "com.amazonaws.ec2#GetInstanceTypesFromInstanceRequirementsRequest",
      output:
        "com.amazonaws.ec2#GetInstanceTypesFromInstanceRequirementsResult",
      responseWrapper: "GetInstanceTypesFromInstanceRequirementsResponse",
    },
    GetInstanceUefiData: {
      name: "GetInstanceUefiData",
      input: "com.amazonaws.ec2#GetInstanceUefiDataRequest",
      output: "com.amazonaws.ec2#GetInstanceUefiDataResult",
      responseWrapper: "GetInstanceUefiDataResponse",
    },
    GetIpamAddressHistory: {
      name: "GetIpamAddressHistory",
      input: "com.amazonaws.ec2#GetIpamAddressHistoryRequest",
      output: "com.amazonaws.ec2#GetIpamAddressHistoryResult",
      responseWrapper: "GetIpamAddressHistoryResponse",
    },
    GetIpamDiscoveredAccounts: {
      name: "GetIpamDiscoveredAccounts",
      input: "com.amazonaws.ec2#GetIpamDiscoveredAccountsRequest",
      output: "com.amazonaws.ec2#GetIpamDiscoveredAccountsResult",
      responseWrapper: "GetIpamDiscoveredAccountsResponse",
    },
    GetIpamDiscoveredPublicAddresses: {
      name: "GetIpamDiscoveredPublicAddresses",
      input: "com.amazonaws.ec2#GetIpamDiscoveredPublicAddressesRequest",
      output: "com.amazonaws.ec2#GetIpamDiscoveredPublicAddressesResult",
      responseWrapper: "GetIpamDiscoveredPublicAddressesResponse",
    },
    GetIpamDiscoveredResourceCidrs: {
      name: "GetIpamDiscoveredResourceCidrs",
      input: "com.amazonaws.ec2#GetIpamDiscoveredResourceCidrsRequest",
      output: "com.amazonaws.ec2#GetIpamDiscoveredResourceCidrsResult",
      responseWrapper: "GetIpamDiscoveredResourceCidrsResponse",
    },
    GetIpamPoolAllocations: {
      name: "GetIpamPoolAllocations",
      input: "com.amazonaws.ec2#GetIpamPoolAllocationsRequest",
      output: "com.amazonaws.ec2#GetIpamPoolAllocationsResult",
      responseWrapper: "GetIpamPoolAllocationsResponse",
    },
    GetIpamPoolCidrs: {
      name: "GetIpamPoolCidrs",
      input: "com.amazonaws.ec2#GetIpamPoolCidrsRequest",
      output: "com.amazonaws.ec2#GetIpamPoolCidrsResult",
      responseWrapper: "GetIpamPoolCidrsResponse",
    },
    GetIpamResourceCidrs: {
      name: "GetIpamResourceCidrs",
      input: "com.amazonaws.ec2#GetIpamResourceCidrsRequest",
      output: "com.amazonaws.ec2#GetIpamResourceCidrsResult",
      responseWrapper: "GetIpamResourceCidrsResponse",
    },
    GetLaunchTemplateData: {
      name: "GetLaunchTemplateData",
      input: "com.amazonaws.ec2#GetLaunchTemplateDataRequest",
      output: "com.amazonaws.ec2#GetLaunchTemplateDataResult",
      responseWrapper: "GetLaunchTemplateDataResponse",
    },
    GetManagedPrefixListAssociations: {
      name: "GetManagedPrefixListAssociations",
      input: "com.amazonaws.ec2#GetManagedPrefixListAssociationsRequest",
      output: "com.amazonaws.ec2#GetManagedPrefixListAssociationsResult",
      responseWrapper: "GetManagedPrefixListAssociationsResponse",
    },
    GetManagedPrefixListEntries: {
      name: "GetManagedPrefixListEntries",
      input: "com.amazonaws.ec2#GetManagedPrefixListEntriesRequest",
      output: "com.amazonaws.ec2#GetManagedPrefixListEntriesResult",
      responseWrapper: "GetManagedPrefixListEntriesResponse",
    },
    GetNetworkInsightsAccessScopeAnalysisFindings: {
      name: "GetNetworkInsightsAccessScopeAnalysisFindings",
      input:
        "com.amazonaws.ec2#GetNetworkInsightsAccessScopeAnalysisFindingsRequest",
      output:
        "com.amazonaws.ec2#GetNetworkInsightsAccessScopeAnalysisFindingsResult",
      responseWrapper: "GetNetworkInsightsAccessScopeAnalysisFindingsResponse",
    },
    GetNetworkInsightsAccessScopeContent: {
      name: "GetNetworkInsightsAccessScopeContent",
      input: "com.amazonaws.ec2#GetNetworkInsightsAccessScopeContentRequest",
      output: "com.amazonaws.ec2#GetNetworkInsightsAccessScopeContentResult",
      responseWrapper: "GetNetworkInsightsAccessScopeContentResponse",
    },
    GetPasswordData: {
      name: "GetPasswordData",
      input: "com.amazonaws.ec2#GetPasswordDataRequest",
      output: "com.amazonaws.ec2#GetPasswordDataResult",
      responseWrapper: "GetPasswordDataResponse",
    },
    GetReservedInstancesExchangeQuote: {
      name: "GetReservedInstancesExchangeQuote",
      input: "com.amazonaws.ec2#GetReservedInstancesExchangeQuoteRequest",
      output: "com.amazonaws.ec2#GetReservedInstancesExchangeQuoteResult",
      responseWrapper: "GetReservedInstancesExchangeQuoteResponse",
    },
    GetRouteServerAssociations: {
      name: "GetRouteServerAssociations",
      input: "com.amazonaws.ec2#GetRouteServerAssociationsRequest",
      output: "com.amazonaws.ec2#GetRouteServerAssociationsResult",
      responseWrapper: "GetRouteServerAssociationsResponse",
    },
    GetRouteServerPropagations: {
      name: "GetRouteServerPropagations",
      input: "com.amazonaws.ec2#GetRouteServerPropagationsRequest",
      output: "com.amazonaws.ec2#GetRouteServerPropagationsResult",
      responseWrapper: "GetRouteServerPropagationsResponse",
    },
    GetRouteServerRoutingDatabase: {
      name: "GetRouteServerRoutingDatabase",
      input: "com.amazonaws.ec2#GetRouteServerRoutingDatabaseRequest",
      output: "com.amazonaws.ec2#GetRouteServerRoutingDatabaseResult",
      responseWrapper: "GetRouteServerRoutingDatabaseResponse",
    },
    GetSecurityGroupsForVpc: {
      name: "GetSecurityGroupsForVpc",
      input: "com.amazonaws.ec2#GetSecurityGroupsForVpcRequest",
      output: "com.amazonaws.ec2#GetSecurityGroupsForVpcResult",
      responseWrapper: "GetSecurityGroupsForVpcResponse",
    },
    GetSerialConsoleAccessStatus: {
      name: "GetSerialConsoleAccessStatus",
      input: "com.amazonaws.ec2#GetSerialConsoleAccessStatusRequest",
      output: "com.amazonaws.ec2#GetSerialConsoleAccessStatusResult",
      responseWrapper: "GetSerialConsoleAccessStatusResponse",
    },
    GetSnapshotBlockPublicAccessState: {
      name: "GetSnapshotBlockPublicAccessState",
      input: "com.amazonaws.ec2#GetSnapshotBlockPublicAccessStateRequest",
      output: "com.amazonaws.ec2#GetSnapshotBlockPublicAccessStateResult",
      responseWrapper: "GetSnapshotBlockPublicAccessStateResponse",
    },
    GetSpotPlacementScores: {
      name: "GetSpotPlacementScores",
      input: "com.amazonaws.ec2#GetSpotPlacementScoresRequest",
      output: "com.amazonaws.ec2#GetSpotPlacementScoresResult",
      responseWrapper: "GetSpotPlacementScoresResponse",
    },
    GetSubnetCidrReservations: {
      name: "GetSubnetCidrReservations",
      input: "com.amazonaws.ec2#GetSubnetCidrReservationsRequest",
      output: "com.amazonaws.ec2#GetSubnetCidrReservationsResult",
      responseWrapper: "GetSubnetCidrReservationsResponse",
    },
    GetTransitGatewayAttachmentPropagations: {
      name: "GetTransitGatewayAttachmentPropagations",
      input: "com.amazonaws.ec2#GetTransitGatewayAttachmentPropagationsRequest",
      output: "com.amazonaws.ec2#GetTransitGatewayAttachmentPropagationsResult",
      responseWrapper: "GetTransitGatewayAttachmentPropagationsResponse",
    },
    GetTransitGatewayMulticastDomainAssociations: {
      name: "GetTransitGatewayMulticastDomainAssociations",
      input:
        "com.amazonaws.ec2#GetTransitGatewayMulticastDomainAssociationsRequest",
      output:
        "com.amazonaws.ec2#GetTransitGatewayMulticastDomainAssociationsResult",
      responseWrapper: "GetTransitGatewayMulticastDomainAssociationsResponse",
    },
    GetTransitGatewayPolicyTableAssociations: {
      name: "GetTransitGatewayPolicyTableAssociations",
      input:
        "com.amazonaws.ec2#GetTransitGatewayPolicyTableAssociationsRequest",
      output:
        "com.amazonaws.ec2#GetTransitGatewayPolicyTableAssociationsResult",
      responseWrapper: "GetTransitGatewayPolicyTableAssociationsResponse",
    },
    GetTransitGatewayPolicyTableEntries: {
      name: "GetTransitGatewayPolicyTableEntries",
      input: "com.amazonaws.ec2#GetTransitGatewayPolicyTableEntriesRequest",
      output: "com.amazonaws.ec2#GetTransitGatewayPolicyTableEntriesResult",
      responseWrapper: "GetTransitGatewayPolicyTableEntriesResponse",
    },
    GetTransitGatewayPrefixListReferences: {
      name: "GetTransitGatewayPrefixListReferences",
      input: "com.amazonaws.ec2#GetTransitGatewayPrefixListReferencesRequest",
      output: "com.amazonaws.ec2#GetTransitGatewayPrefixListReferencesResult",
      responseWrapper: "GetTransitGatewayPrefixListReferencesResponse",
    },
    GetTransitGatewayRouteTableAssociations: {
      name: "GetTransitGatewayRouteTableAssociations",
      input: "com.amazonaws.ec2#GetTransitGatewayRouteTableAssociationsRequest",
      output: "com.amazonaws.ec2#GetTransitGatewayRouteTableAssociationsResult",
      responseWrapper: "GetTransitGatewayRouteTableAssociationsResponse",
    },
    GetTransitGatewayRouteTablePropagations: {
      name: "GetTransitGatewayRouteTablePropagations",
      input: "com.amazonaws.ec2#GetTransitGatewayRouteTablePropagationsRequest",
      output: "com.amazonaws.ec2#GetTransitGatewayRouteTablePropagationsResult",
      responseWrapper: "GetTransitGatewayRouteTablePropagationsResponse",
    },
    GetVerifiedAccessEndpointPolicy: {
      name: "GetVerifiedAccessEndpointPolicy",
      input: "com.amazonaws.ec2#GetVerifiedAccessEndpointPolicyRequest",
      output: "com.amazonaws.ec2#GetVerifiedAccessEndpointPolicyResult",
      responseWrapper: "GetVerifiedAccessEndpointPolicyResponse",
    },
    GetVerifiedAccessEndpointTargets: {
      name: "GetVerifiedAccessEndpointTargets",
      input: "com.amazonaws.ec2#GetVerifiedAccessEndpointTargetsRequest",
      output: "com.amazonaws.ec2#GetVerifiedAccessEndpointTargetsResult",
      responseWrapper: "GetVerifiedAccessEndpointTargetsResponse",
    },
    GetVerifiedAccessGroupPolicy: {
      name: "GetVerifiedAccessGroupPolicy",
      input: "com.amazonaws.ec2#GetVerifiedAccessGroupPolicyRequest",
      output: "com.amazonaws.ec2#GetVerifiedAccessGroupPolicyResult",
      responseWrapper: "GetVerifiedAccessGroupPolicyResponse",
    },
    GetVpnConnectionDeviceSampleConfiguration: {
      name: "GetVpnConnectionDeviceSampleConfiguration",
      input:
        "com.amazonaws.ec2#GetVpnConnectionDeviceSampleConfigurationRequest",
      output:
        "com.amazonaws.ec2#GetVpnConnectionDeviceSampleConfigurationResult",
      responseWrapper: "GetVpnConnectionDeviceSampleConfigurationResponse",
    },
    GetVpnConnectionDeviceTypes: {
      name: "GetVpnConnectionDeviceTypes",
      input: "com.amazonaws.ec2#GetVpnConnectionDeviceTypesRequest",
      output: "com.amazonaws.ec2#GetVpnConnectionDeviceTypesResult",
      responseWrapper: "GetVpnConnectionDeviceTypesResponse",
    },
    GetVpnTunnelReplacementStatus: {
      name: "GetVpnTunnelReplacementStatus",
      input: "com.amazonaws.ec2#GetVpnTunnelReplacementStatusRequest",
      output: "com.amazonaws.ec2#GetVpnTunnelReplacementStatusResult",
      responseWrapper: "GetVpnTunnelReplacementStatusResponse",
    },
    ImportClientVpnClientCertificateRevocationList: {
      name: "ImportClientVpnClientCertificateRevocationList",
      input:
        "com.amazonaws.ec2#ImportClientVpnClientCertificateRevocationListRequest",
      output:
        "com.amazonaws.ec2#ImportClientVpnClientCertificateRevocationListResult",
      responseWrapper: "ImportClientVpnClientCertificateRevocationListResponse",
    },
    ImportImage: {
      name: "ImportImage",
      input: "com.amazonaws.ec2#ImportImageRequest",
      output: "com.amazonaws.ec2#ImportImageResult",
      responseWrapper: "ImportImageResponse",
    },
    ImportInstance: {
      name: "ImportInstance",
      input: "com.amazonaws.ec2#ImportInstanceRequest",
      output: "com.amazonaws.ec2#ImportInstanceResult",
      responseWrapper: "ImportInstanceResponse",
    },
    ImportKeyPair: {
      name: "ImportKeyPair",
      input: "com.amazonaws.ec2#ImportKeyPairRequest",
      output: "com.amazonaws.ec2#ImportKeyPairResult",
      responseWrapper: "ImportKeyPairResponse",
    },
    ImportSnapshot: {
      name: "ImportSnapshot",
      input: "com.amazonaws.ec2#ImportSnapshotRequest",
      output: "com.amazonaws.ec2#ImportSnapshotResult",
      responseWrapper: "ImportSnapshotResponse",
    },
    ImportVolume: {
      name: "ImportVolume",
      input: "com.amazonaws.ec2#ImportVolumeRequest",
      output: "com.amazonaws.ec2#ImportVolumeResult",
      responseWrapper: "ImportVolumeResponse",
    },
    ListImagesInRecycleBin: {
      name: "ListImagesInRecycleBin",
      input: "com.amazonaws.ec2#ListImagesInRecycleBinRequest",
      output: "com.amazonaws.ec2#ListImagesInRecycleBinResult",
      responseWrapper: "ListImagesInRecycleBinResponse",
    },
    ListSnapshotsInRecycleBin: {
      name: "ListSnapshotsInRecycleBin",
      input: "com.amazonaws.ec2#ListSnapshotsInRecycleBinRequest",
      output: "com.amazonaws.ec2#ListSnapshotsInRecycleBinResult",
      responseWrapper: "ListSnapshotsInRecycleBinResponse",
    },
    LockSnapshot: {
      name: "LockSnapshot",
      input: "com.amazonaws.ec2#LockSnapshotRequest",
      output: "com.amazonaws.ec2#LockSnapshotResult",
      responseWrapper: "LockSnapshotResponse",
    },
    ModifyAddressAttribute: {
      name: "ModifyAddressAttribute",
      input: "com.amazonaws.ec2#ModifyAddressAttributeRequest",
      output: "com.amazonaws.ec2#ModifyAddressAttributeResult",
      responseWrapper: "ModifyAddressAttributeResponse",
    },
    ModifyAvailabilityZoneGroup: {
      name: "ModifyAvailabilityZoneGroup",
      input: "com.amazonaws.ec2#ModifyAvailabilityZoneGroupRequest",
      output: "com.amazonaws.ec2#ModifyAvailabilityZoneGroupResult",
      responseWrapper: "ModifyAvailabilityZoneGroupResponse",
    },
    ModifyCapacityReservation: {
      name: "ModifyCapacityReservation",
      input: "com.amazonaws.ec2#ModifyCapacityReservationRequest",
      output: "com.amazonaws.ec2#ModifyCapacityReservationResult",
      responseWrapper: "ModifyCapacityReservationResponse",
    },
    ModifyCapacityReservationFleet: {
      name: "ModifyCapacityReservationFleet",
      input: "com.amazonaws.ec2#ModifyCapacityReservationFleetRequest",
      output: "com.amazonaws.ec2#ModifyCapacityReservationFleetResult",
      responseWrapper: "ModifyCapacityReservationFleetResponse",
    },
    ModifyClientVpnEndpoint: {
      name: "ModifyClientVpnEndpoint",
      input: "com.amazonaws.ec2#ModifyClientVpnEndpointRequest",
      output: "com.amazonaws.ec2#ModifyClientVpnEndpointResult",
      responseWrapper: "ModifyClientVpnEndpointResponse",
    },
    ModifyDefaultCreditSpecification: {
      name: "ModifyDefaultCreditSpecification",
      input: "com.amazonaws.ec2#ModifyDefaultCreditSpecificationRequest",
      output: "com.amazonaws.ec2#ModifyDefaultCreditSpecificationResult",
      responseWrapper: "ModifyDefaultCreditSpecificationResponse",
    },
    ModifyEbsDefaultKmsKeyId: {
      name: "ModifyEbsDefaultKmsKeyId",
      input: "com.amazonaws.ec2#ModifyEbsDefaultKmsKeyIdRequest",
      output: "com.amazonaws.ec2#ModifyEbsDefaultKmsKeyIdResult",
      responseWrapper: "ModifyEbsDefaultKmsKeyIdResponse",
    },
    ModifyFleet: {
      name: "ModifyFleet",
      input: "com.amazonaws.ec2#ModifyFleetRequest",
      output: "com.amazonaws.ec2#ModifyFleetResult",
      responseWrapper: "ModifyFleetResponse",
    },
    ModifyFpgaImageAttribute: {
      name: "ModifyFpgaImageAttribute",
      input: "com.amazonaws.ec2#ModifyFpgaImageAttributeRequest",
      output: "com.amazonaws.ec2#ModifyFpgaImageAttributeResult",
      responseWrapper: "ModifyFpgaImageAttributeResponse",
    },
    ModifyHosts: {
      name: "ModifyHosts",
      input: "com.amazonaws.ec2#ModifyHostsRequest",
      output: "com.amazonaws.ec2#ModifyHostsResult",
      responseWrapper: "ModifyHostsResponse",
    },
    ModifyIdFormat: {
      name: "ModifyIdFormat",
      input: "com.amazonaws.ec2#ModifyIdFormatRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyIdFormatResponse",
    },
    ModifyIdentityIdFormat: {
      name: "ModifyIdentityIdFormat",
      input: "com.amazonaws.ec2#ModifyIdentityIdFormatRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyIdentityIdFormatResponse",
    },
    ModifyImageAttribute: {
      name: "ModifyImageAttribute",
      input: "com.amazonaws.ec2#ModifyImageAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyImageAttributeResponse",
    },
    ModifyInstanceAttribute: {
      name: "ModifyInstanceAttribute",
      input: "com.amazonaws.ec2#ModifyInstanceAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyInstanceAttributeResponse",
    },
    ModifyInstanceCapacityReservationAttributes: {
      name: "ModifyInstanceCapacityReservationAttributes",
      input:
        "com.amazonaws.ec2#ModifyInstanceCapacityReservationAttributesRequest",
      output:
        "com.amazonaws.ec2#ModifyInstanceCapacityReservationAttributesResult",
      responseWrapper: "ModifyInstanceCapacityReservationAttributesResponse",
    },
    ModifyInstanceCpuOptions: {
      name: "ModifyInstanceCpuOptions",
      input: "com.amazonaws.ec2#ModifyInstanceCpuOptionsRequest",
      output: "com.amazonaws.ec2#ModifyInstanceCpuOptionsResult",
      responseWrapper: "ModifyInstanceCpuOptionsResponse",
    },
    ModifyInstanceCreditSpecification: {
      name: "ModifyInstanceCreditSpecification",
      input: "com.amazonaws.ec2#ModifyInstanceCreditSpecificationRequest",
      output: "com.amazonaws.ec2#ModifyInstanceCreditSpecificationResult",
      responseWrapper: "ModifyInstanceCreditSpecificationResponse",
    },
    ModifyInstanceEventStartTime: {
      name: "ModifyInstanceEventStartTime",
      input: "com.amazonaws.ec2#ModifyInstanceEventStartTimeRequest",
      output: "com.amazonaws.ec2#ModifyInstanceEventStartTimeResult",
      responseWrapper: "ModifyInstanceEventStartTimeResponse",
    },
    ModifyInstanceEventWindow: {
      name: "ModifyInstanceEventWindow",
      input: "com.amazonaws.ec2#ModifyInstanceEventWindowRequest",
      output: "com.amazonaws.ec2#ModifyInstanceEventWindowResult",
      responseWrapper: "ModifyInstanceEventWindowResponse",
    },
    ModifyInstanceMaintenanceOptions: {
      name: "ModifyInstanceMaintenanceOptions",
      input: "com.amazonaws.ec2#ModifyInstanceMaintenanceOptionsRequest",
      output: "com.amazonaws.ec2#ModifyInstanceMaintenanceOptionsResult",
      responseWrapper: "ModifyInstanceMaintenanceOptionsResponse",
    },
    ModifyInstanceMetadataDefaults: {
      name: "ModifyInstanceMetadataDefaults",
      input: "com.amazonaws.ec2#ModifyInstanceMetadataDefaultsRequest",
      output: "com.amazonaws.ec2#ModifyInstanceMetadataDefaultsResult",
      responseWrapper: "ModifyInstanceMetadataDefaultsResponse",
    },
    ModifyInstanceMetadataOptions: {
      name: "ModifyInstanceMetadataOptions",
      input: "com.amazonaws.ec2#ModifyInstanceMetadataOptionsRequest",
      output: "com.amazonaws.ec2#ModifyInstanceMetadataOptionsResult",
      responseWrapper: "ModifyInstanceMetadataOptionsResponse",
    },
    ModifyInstanceNetworkPerformanceOptions: {
      name: "ModifyInstanceNetworkPerformanceOptions",
      input: "com.amazonaws.ec2#ModifyInstanceNetworkPerformanceRequest",
      output: "com.amazonaws.ec2#ModifyInstanceNetworkPerformanceResult",
      responseWrapper: "ModifyInstanceNetworkPerformanceOptionsResponse",
    },
    ModifyInstancePlacement: {
      name: "ModifyInstancePlacement",
      input: "com.amazonaws.ec2#ModifyInstancePlacementRequest",
      output: "com.amazonaws.ec2#ModifyInstancePlacementResult",
      responseWrapper: "ModifyInstancePlacementResponse",
    },
    ModifyIpam: {
      name: "ModifyIpam",
      input: "com.amazonaws.ec2#ModifyIpamRequest",
      output: "com.amazonaws.ec2#ModifyIpamResult",
      responseWrapper: "ModifyIpamResponse",
    },
    ModifyIpamPool: {
      name: "ModifyIpamPool",
      input: "com.amazonaws.ec2#ModifyIpamPoolRequest",
      output: "com.amazonaws.ec2#ModifyIpamPoolResult",
      responseWrapper: "ModifyIpamPoolResponse",
    },
    ModifyIpamResourceCidr: {
      name: "ModifyIpamResourceCidr",
      input: "com.amazonaws.ec2#ModifyIpamResourceCidrRequest",
      output: "com.amazonaws.ec2#ModifyIpamResourceCidrResult",
      responseWrapper: "ModifyIpamResourceCidrResponse",
    },
    ModifyIpamResourceDiscovery: {
      name: "ModifyIpamResourceDiscovery",
      input: "com.amazonaws.ec2#ModifyIpamResourceDiscoveryRequest",
      output: "com.amazonaws.ec2#ModifyIpamResourceDiscoveryResult",
      responseWrapper: "ModifyIpamResourceDiscoveryResponse",
    },
    ModifyIpamScope: {
      name: "ModifyIpamScope",
      input: "com.amazonaws.ec2#ModifyIpamScopeRequest",
      output: "com.amazonaws.ec2#ModifyIpamScopeResult",
      responseWrapper: "ModifyIpamScopeResponse",
    },
    ModifyLaunchTemplate: {
      name: "ModifyLaunchTemplate",
      input: "com.amazonaws.ec2#ModifyLaunchTemplateRequest",
      output: "com.amazonaws.ec2#ModifyLaunchTemplateResult",
      responseWrapper: "ModifyLaunchTemplateResponse",
    },
    ModifyLocalGatewayRoute: {
      name: "ModifyLocalGatewayRoute",
      input: "com.amazonaws.ec2#ModifyLocalGatewayRouteRequest",
      output: "com.amazonaws.ec2#ModifyLocalGatewayRouteResult",
      responseWrapper: "ModifyLocalGatewayRouteResponse",
    },
    ModifyManagedPrefixList: {
      name: "ModifyManagedPrefixList",
      input: "com.amazonaws.ec2#ModifyManagedPrefixListRequest",
      output: "com.amazonaws.ec2#ModifyManagedPrefixListResult",
      responseWrapper: "ModifyManagedPrefixListResponse",
    },
    ModifyNetworkInterfaceAttribute: {
      name: "ModifyNetworkInterfaceAttribute",
      input: "com.amazonaws.ec2#ModifyNetworkInterfaceAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyNetworkInterfaceAttributeResponse",
    },
    ModifyPrivateDnsNameOptions: {
      name: "ModifyPrivateDnsNameOptions",
      input: "com.amazonaws.ec2#ModifyPrivateDnsNameOptionsRequest",
      output: "com.amazonaws.ec2#ModifyPrivateDnsNameOptionsResult",
      responseWrapper: "ModifyPrivateDnsNameOptionsResponse",
    },
    ModifyPublicIpDnsNameOptions: {
      name: "ModifyPublicIpDnsNameOptions",
      input: "com.amazonaws.ec2#ModifyPublicIpDnsNameOptionsRequest",
      output: "com.amazonaws.ec2#ModifyPublicIpDnsNameOptionsResult",
      responseWrapper: "ModifyPublicIpDnsNameOptionsResponse",
    },
    ModifyReservedInstances: {
      name: "ModifyReservedInstances",
      input: "com.amazonaws.ec2#ModifyReservedInstancesRequest",
      output: "com.amazonaws.ec2#ModifyReservedInstancesResult",
      responseWrapper: "ModifyReservedInstancesResponse",
    },
    ModifyRouteServer: {
      name: "ModifyRouteServer",
      input: "com.amazonaws.ec2#ModifyRouteServerRequest",
      output: "com.amazonaws.ec2#ModifyRouteServerResult",
      responseWrapper: "ModifyRouteServerResponse",
    },
    ModifySecurityGroupRules: {
      name: "ModifySecurityGroupRules",
      input: "com.amazonaws.ec2#ModifySecurityGroupRulesRequest",
      output: "com.amazonaws.ec2#ModifySecurityGroupRulesResult",
      responseWrapper: "ModifySecurityGroupRulesResponse",
    },
    ModifySnapshotAttribute: {
      name: "ModifySnapshotAttribute",
      input: "com.amazonaws.ec2#ModifySnapshotAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifySnapshotAttributeResponse",
    },
    ModifySnapshotTier: {
      name: "ModifySnapshotTier",
      input: "com.amazonaws.ec2#ModifySnapshotTierRequest",
      output: "com.amazonaws.ec2#ModifySnapshotTierResult",
      responseWrapper: "ModifySnapshotTierResponse",
    },
    ModifySpotFleetRequest: {
      name: "ModifySpotFleetRequest",
      input: "com.amazonaws.ec2#ModifySpotFleetRequestRequest",
      output: "com.amazonaws.ec2#ModifySpotFleetRequestResponse",
      responseWrapper: "ModifySpotFleetRequestResponse",
    },
    ModifySubnetAttribute: {
      name: "ModifySubnetAttribute",
      input: "com.amazonaws.ec2#ModifySubnetAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifySubnetAttributeResponse",
    },
    ModifyTrafficMirrorFilterNetworkServices: {
      name: "ModifyTrafficMirrorFilterNetworkServices",
      input:
        "com.amazonaws.ec2#ModifyTrafficMirrorFilterNetworkServicesRequest",
      output:
        "com.amazonaws.ec2#ModifyTrafficMirrorFilterNetworkServicesResult",
      responseWrapper: "ModifyTrafficMirrorFilterNetworkServicesResponse",
    },
    ModifyTrafficMirrorFilterRule: {
      name: "ModifyTrafficMirrorFilterRule",
      input: "com.amazonaws.ec2#ModifyTrafficMirrorFilterRuleRequest",
      output: "com.amazonaws.ec2#ModifyTrafficMirrorFilterRuleResult",
      responseWrapper: "ModifyTrafficMirrorFilterRuleResponse",
    },
    ModifyTrafficMirrorSession: {
      name: "ModifyTrafficMirrorSession",
      input: "com.amazonaws.ec2#ModifyTrafficMirrorSessionRequest",
      output: "com.amazonaws.ec2#ModifyTrafficMirrorSessionResult",
      responseWrapper: "ModifyTrafficMirrorSessionResponse",
    },
    ModifyTransitGateway: {
      name: "ModifyTransitGateway",
      input: "com.amazonaws.ec2#ModifyTransitGatewayRequest",
      output: "com.amazonaws.ec2#ModifyTransitGatewayResult",
      responseWrapper: "ModifyTransitGatewayResponse",
    },
    ModifyTransitGatewayPrefixListReference: {
      name: "ModifyTransitGatewayPrefixListReference",
      input: "com.amazonaws.ec2#ModifyTransitGatewayPrefixListReferenceRequest",
      output: "com.amazonaws.ec2#ModifyTransitGatewayPrefixListReferenceResult",
      responseWrapper: "ModifyTransitGatewayPrefixListReferenceResponse",
    },
    ModifyTransitGatewayVpcAttachment: {
      name: "ModifyTransitGatewayVpcAttachment",
      input: "com.amazonaws.ec2#ModifyTransitGatewayVpcAttachmentRequest",
      output: "com.amazonaws.ec2#ModifyTransitGatewayVpcAttachmentResult",
      responseWrapper: "ModifyTransitGatewayVpcAttachmentResponse",
    },
    ModifyVerifiedAccessEndpoint: {
      name: "ModifyVerifiedAccessEndpoint",
      input: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointRequest",
      output: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointResult",
      responseWrapper: "ModifyVerifiedAccessEndpointResponse",
    },
    ModifyVerifiedAccessEndpointPolicy: {
      name: "ModifyVerifiedAccessEndpointPolicy",
      input: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPolicyRequest",
      output: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPolicyResult",
      responseWrapper: "ModifyVerifiedAccessEndpointPolicyResponse",
    },
    ModifyVerifiedAccessGroup: {
      name: "ModifyVerifiedAccessGroup",
      input: "com.amazonaws.ec2#ModifyVerifiedAccessGroupRequest",
      output: "com.amazonaws.ec2#ModifyVerifiedAccessGroupResult",
      responseWrapper: "ModifyVerifiedAccessGroupResponse",
    },
    ModifyVerifiedAccessGroupPolicy: {
      name: "ModifyVerifiedAccessGroupPolicy",
      input: "com.amazonaws.ec2#ModifyVerifiedAccessGroupPolicyRequest",
      output: "com.amazonaws.ec2#ModifyVerifiedAccessGroupPolicyResult",
      responseWrapper: "ModifyVerifiedAccessGroupPolicyResponse",
    },
    ModifyVerifiedAccessInstance: {
      name: "ModifyVerifiedAccessInstance",
      input: "com.amazonaws.ec2#ModifyVerifiedAccessInstanceRequest",
      output: "com.amazonaws.ec2#ModifyVerifiedAccessInstanceResult",
      responseWrapper: "ModifyVerifiedAccessInstanceResponse",
    },
    ModifyVerifiedAccessInstanceLoggingConfiguration: {
      name: "ModifyVerifiedAccessInstanceLoggingConfiguration",
      input:
        "com.amazonaws.ec2#ModifyVerifiedAccessInstanceLoggingConfigurationRequest",
      output:
        "com.amazonaws.ec2#ModifyVerifiedAccessInstanceLoggingConfigurationResult",
      responseWrapper:
        "ModifyVerifiedAccessInstanceLoggingConfigurationResponse",
    },
    ModifyVerifiedAccessTrustProvider: {
      name: "ModifyVerifiedAccessTrustProvider",
      input: "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderRequest",
      output: "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderResult",
      responseWrapper: "ModifyVerifiedAccessTrustProviderResponse",
    },
    ModifyVolume: {
      name: "ModifyVolume",
      input: "com.amazonaws.ec2#ModifyVolumeRequest",
      output: "com.amazonaws.ec2#ModifyVolumeResult",
      responseWrapper: "ModifyVolumeResponse",
    },
    ModifyVolumeAttribute: {
      name: "ModifyVolumeAttribute",
      input: "com.amazonaws.ec2#ModifyVolumeAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyVolumeAttributeResponse",
    },
    ModifyVpcAttribute: {
      name: "ModifyVpcAttribute",
      input: "com.amazonaws.ec2#ModifyVpcAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ModifyVpcAttributeResponse",
    },
    ModifyVpcBlockPublicAccessExclusion: {
      name: "ModifyVpcBlockPublicAccessExclusion",
      input: "com.amazonaws.ec2#ModifyVpcBlockPublicAccessExclusionRequest",
      output: "com.amazonaws.ec2#ModifyVpcBlockPublicAccessExclusionResult",
      responseWrapper: "ModifyVpcBlockPublicAccessExclusionResponse",
    },
    ModifyVpcBlockPublicAccessOptions: {
      name: "ModifyVpcBlockPublicAccessOptions",
      input: "com.amazonaws.ec2#ModifyVpcBlockPublicAccessOptionsRequest",
      output: "com.amazonaws.ec2#ModifyVpcBlockPublicAccessOptionsResult",
      responseWrapper: "ModifyVpcBlockPublicAccessOptionsResponse",
    },
    ModifyVpcEndpoint: {
      name: "ModifyVpcEndpoint",
      input: "com.amazonaws.ec2#ModifyVpcEndpointRequest",
      output: "com.amazonaws.ec2#ModifyVpcEndpointResult",
      responseWrapper: "ModifyVpcEndpointResponse",
    },
    ModifyVpcEndpointConnectionNotification: {
      name: "ModifyVpcEndpointConnectionNotification",
      input: "com.amazonaws.ec2#ModifyVpcEndpointConnectionNotificationRequest",
      output: "com.amazonaws.ec2#ModifyVpcEndpointConnectionNotificationResult",
      responseWrapper: "ModifyVpcEndpointConnectionNotificationResponse",
    },
    ModifyVpcEndpointServiceConfiguration: {
      name: "ModifyVpcEndpointServiceConfiguration",
      input: "com.amazonaws.ec2#ModifyVpcEndpointServiceConfigurationRequest",
      output: "com.amazonaws.ec2#ModifyVpcEndpointServiceConfigurationResult",
      responseWrapper: "ModifyVpcEndpointServiceConfigurationResponse",
    },
    ModifyVpcEndpointServicePayerResponsibility: {
      name: "ModifyVpcEndpointServicePayerResponsibility",
      input:
        "com.amazonaws.ec2#ModifyVpcEndpointServicePayerResponsibilityRequest",
      output:
        "com.amazonaws.ec2#ModifyVpcEndpointServicePayerResponsibilityResult",
      responseWrapper: "ModifyVpcEndpointServicePayerResponsibilityResponse",
    },
    ModifyVpcEndpointServicePermissions: {
      name: "ModifyVpcEndpointServicePermissions",
      input: "com.amazonaws.ec2#ModifyVpcEndpointServicePermissionsRequest",
      output: "com.amazonaws.ec2#ModifyVpcEndpointServicePermissionsResult",
      responseWrapper: "ModifyVpcEndpointServicePermissionsResponse",
    },
    ModifyVpcPeeringConnectionOptions: {
      name: "ModifyVpcPeeringConnectionOptions",
      input: "com.amazonaws.ec2#ModifyVpcPeeringConnectionOptionsRequest",
      output: "com.amazonaws.ec2#ModifyVpcPeeringConnectionOptionsResult",
      responseWrapper: "ModifyVpcPeeringConnectionOptionsResponse",
    },
    ModifyVpcTenancy: {
      name: "ModifyVpcTenancy",
      input: "com.amazonaws.ec2#ModifyVpcTenancyRequest",
      output: "com.amazonaws.ec2#ModifyVpcTenancyResult",
      responseWrapper: "ModifyVpcTenancyResponse",
    },
    ModifyVpnConnection: {
      name: "ModifyVpnConnection",
      input: "com.amazonaws.ec2#ModifyVpnConnectionRequest",
      output: "com.amazonaws.ec2#ModifyVpnConnectionResult",
      responseWrapper: "ModifyVpnConnectionResponse",
    },
    ModifyVpnConnectionOptions: {
      name: "ModifyVpnConnectionOptions",
      input: "com.amazonaws.ec2#ModifyVpnConnectionOptionsRequest",
      output: "com.amazonaws.ec2#ModifyVpnConnectionOptionsResult",
      responseWrapper: "ModifyVpnConnectionOptionsResponse",
    },
    ModifyVpnTunnelCertificate: {
      name: "ModifyVpnTunnelCertificate",
      input: "com.amazonaws.ec2#ModifyVpnTunnelCertificateRequest",
      output: "com.amazonaws.ec2#ModifyVpnTunnelCertificateResult",
      responseWrapper: "ModifyVpnTunnelCertificateResponse",
    },
    ModifyVpnTunnelOptions: {
      name: "ModifyVpnTunnelOptions",
      input: "com.amazonaws.ec2#ModifyVpnTunnelOptionsRequest",
      output: "com.amazonaws.ec2#ModifyVpnTunnelOptionsResult",
      responseWrapper: "ModifyVpnTunnelOptionsResponse",
    },
    MonitorInstances: {
      name: "MonitorInstances",
      input: "com.amazonaws.ec2#MonitorInstancesRequest",
      output: "com.amazonaws.ec2#MonitorInstancesResult",
      responseWrapper: "MonitorInstancesResponse",
    },
    MoveAddressToVpc: {
      name: "MoveAddressToVpc",
      input: "com.amazonaws.ec2#MoveAddressToVpcRequest",
      output: "com.amazonaws.ec2#MoveAddressToVpcResult",
      responseWrapper: "MoveAddressToVpcResponse",
    },
    MoveByoipCidrToIpam: {
      name: "MoveByoipCidrToIpam",
      input: "com.amazonaws.ec2#MoveByoipCidrToIpamRequest",
      output: "com.amazonaws.ec2#MoveByoipCidrToIpamResult",
      responseWrapper: "MoveByoipCidrToIpamResponse",
    },
    MoveCapacityReservationInstances: {
      name: "MoveCapacityReservationInstances",
      input: "com.amazonaws.ec2#MoveCapacityReservationInstancesRequest",
      output: "com.amazonaws.ec2#MoveCapacityReservationInstancesResult",
      responseWrapper: "MoveCapacityReservationInstancesResponse",
    },
    ProvisionByoipCidr: {
      name: "ProvisionByoipCidr",
      input: "com.amazonaws.ec2#ProvisionByoipCidrRequest",
      output: "com.amazonaws.ec2#ProvisionByoipCidrResult",
      responseWrapper: "ProvisionByoipCidrResponse",
    },
    ProvisionIpamByoasn: {
      name: "ProvisionIpamByoasn",
      input: "com.amazonaws.ec2#ProvisionIpamByoasnRequest",
      output: "com.amazonaws.ec2#ProvisionIpamByoasnResult",
      responseWrapper: "ProvisionIpamByoasnResponse",
    },
    ProvisionIpamPoolCidr: {
      name: "ProvisionIpamPoolCidr",
      input: "com.amazonaws.ec2#ProvisionIpamPoolCidrRequest",
      output: "com.amazonaws.ec2#ProvisionIpamPoolCidrResult",
      responseWrapper: "ProvisionIpamPoolCidrResponse",
    },
    ProvisionPublicIpv4PoolCidr: {
      name: "ProvisionPublicIpv4PoolCidr",
      input: "com.amazonaws.ec2#ProvisionPublicIpv4PoolCidrRequest",
      output: "com.amazonaws.ec2#ProvisionPublicIpv4PoolCidrResult",
      responseWrapper: "ProvisionPublicIpv4PoolCidrResponse",
    },
    PurchaseCapacityBlock: {
      name: "PurchaseCapacityBlock",
      input: "com.amazonaws.ec2#PurchaseCapacityBlockRequest",
      output: "com.amazonaws.ec2#PurchaseCapacityBlockResult",
      responseWrapper: "PurchaseCapacityBlockResponse",
    },
    PurchaseCapacityBlockExtension: {
      name: "PurchaseCapacityBlockExtension",
      input: "com.amazonaws.ec2#PurchaseCapacityBlockExtensionRequest",
      output: "com.amazonaws.ec2#PurchaseCapacityBlockExtensionResult",
      responseWrapper: "PurchaseCapacityBlockExtensionResponse",
    },
    PurchaseHostReservation: {
      name: "PurchaseHostReservation",
      input: "com.amazonaws.ec2#PurchaseHostReservationRequest",
      output: "com.amazonaws.ec2#PurchaseHostReservationResult",
      responseWrapper: "PurchaseHostReservationResponse",
    },
    PurchaseReservedInstancesOffering: {
      name: "PurchaseReservedInstancesOffering",
      input: "com.amazonaws.ec2#PurchaseReservedInstancesOfferingRequest",
      output: "com.amazonaws.ec2#PurchaseReservedInstancesOfferingResult",
      responseWrapper: "PurchaseReservedInstancesOfferingResponse",
    },
    PurchaseScheduledInstances: {
      name: "PurchaseScheduledInstances",
      input: "com.amazonaws.ec2#PurchaseScheduledInstancesRequest",
      output: "com.amazonaws.ec2#PurchaseScheduledInstancesResult",
      responseWrapper: "PurchaseScheduledInstancesResponse",
    },
    RebootInstances: {
      name: "RebootInstances",
      input: "com.amazonaws.ec2#RebootInstancesRequest",
      output: "smithy.api#Unit",
      responseWrapper: "RebootInstancesResponse",
    },
    RegisterImage: {
      name: "RegisterImage",
      input: "com.amazonaws.ec2#RegisterImageRequest",
      output: "com.amazonaws.ec2#RegisterImageResult",
      responseWrapper: "RegisterImageResponse",
    },
    RegisterInstanceEventNotificationAttributes: {
      name: "RegisterInstanceEventNotificationAttributes",
      input:
        "com.amazonaws.ec2#RegisterInstanceEventNotificationAttributesRequest",
      output:
        "com.amazonaws.ec2#RegisterInstanceEventNotificationAttributesResult",
      responseWrapper: "RegisterInstanceEventNotificationAttributesResponse",
    },
    RegisterTransitGatewayMulticastGroupMembers: {
      name: "RegisterTransitGatewayMulticastGroupMembers",
      input:
        "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupMembersRequest",
      output:
        "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupMembersResult",
      responseWrapper: "RegisterTransitGatewayMulticastGroupMembersResponse",
    },
    RegisterTransitGatewayMulticastGroupSources: {
      name: "RegisterTransitGatewayMulticastGroupSources",
      input:
        "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupSourcesRequest",
      output:
        "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupSourcesResult",
      responseWrapper: "RegisterTransitGatewayMulticastGroupSourcesResponse",
    },
    RejectCapacityReservationBillingOwnership: {
      name: "RejectCapacityReservationBillingOwnership",
      input:
        "com.amazonaws.ec2#RejectCapacityReservationBillingOwnershipRequest",
      output:
        "com.amazonaws.ec2#RejectCapacityReservationBillingOwnershipResult",
      responseWrapper: "RejectCapacityReservationBillingOwnershipResponse",
    },
    RejectTransitGatewayMulticastDomainAssociations: {
      name: "RejectTransitGatewayMulticastDomainAssociations",
      input:
        "com.amazonaws.ec2#RejectTransitGatewayMulticastDomainAssociationsRequest",
      output:
        "com.amazonaws.ec2#RejectTransitGatewayMulticastDomainAssociationsResult",
      responseWrapper:
        "RejectTransitGatewayMulticastDomainAssociationsResponse",
    },
    RejectTransitGatewayPeeringAttachment: {
      name: "RejectTransitGatewayPeeringAttachment",
      input: "com.amazonaws.ec2#RejectTransitGatewayPeeringAttachmentRequest",
      output: "com.amazonaws.ec2#RejectTransitGatewayPeeringAttachmentResult",
      responseWrapper: "RejectTransitGatewayPeeringAttachmentResponse",
    },
    RejectTransitGatewayVpcAttachment: {
      name: "RejectTransitGatewayVpcAttachment",
      input: "com.amazonaws.ec2#RejectTransitGatewayVpcAttachmentRequest",
      output: "com.amazonaws.ec2#RejectTransitGatewayVpcAttachmentResult",
      responseWrapper: "RejectTransitGatewayVpcAttachmentResponse",
    },
    RejectVpcEndpointConnections: {
      name: "RejectVpcEndpointConnections",
      input: "com.amazonaws.ec2#RejectVpcEndpointConnectionsRequest",
      output: "com.amazonaws.ec2#RejectVpcEndpointConnectionsResult",
      responseWrapper: "RejectVpcEndpointConnectionsResponse",
    },
    RejectVpcPeeringConnection: {
      name: "RejectVpcPeeringConnection",
      input: "com.amazonaws.ec2#RejectVpcPeeringConnectionRequest",
      output: "com.amazonaws.ec2#RejectVpcPeeringConnectionResult",
      responseWrapper: "RejectVpcPeeringConnectionResponse",
    },
    ReleaseAddress: {
      name: "ReleaseAddress",
      input: "com.amazonaws.ec2#ReleaseAddressRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ReleaseAddressResponse",
    },
    ReleaseHosts: {
      name: "ReleaseHosts",
      input: "com.amazonaws.ec2#ReleaseHostsRequest",
      output: "com.amazonaws.ec2#ReleaseHostsResult",
      responseWrapper: "ReleaseHostsResponse",
    },
    ReleaseIpamPoolAllocation: {
      name: "ReleaseIpamPoolAllocation",
      input: "com.amazonaws.ec2#ReleaseIpamPoolAllocationRequest",
      output: "com.amazonaws.ec2#ReleaseIpamPoolAllocationResult",
      responseWrapper: "ReleaseIpamPoolAllocationResponse",
    },
    ReplaceIamInstanceProfileAssociation: {
      name: "ReplaceIamInstanceProfileAssociation",
      input: "com.amazonaws.ec2#ReplaceIamInstanceProfileAssociationRequest",
      output: "com.amazonaws.ec2#ReplaceIamInstanceProfileAssociationResult",
      responseWrapper: "ReplaceIamInstanceProfileAssociationResponse",
    },
    ReplaceImageCriteriaInAllowedImagesSettings: {
      name: "ReplaceImageCriteriaInAllowedImagesSettings",
      input:
        "com.amazonaws.ec2#ReplaceImageCriteriaInAllowedImagesSettingsRequest",
      output:
        "com.amazonaws.ec2#ReplaceImageCriteriaInAllowedImagesSettingsResult",
      responseWrapper: "ReplaceImageCriteriaInAllowedImagesSettingsResponse",
    },
    ReplaceNetworkAclAssociation: {
      name: "ReplaceNetworkAclAssociation",
      input: "com.amazonaws.ec2#ReplaceNetworkAclAssociationRequest",
      output: "com.amazonaws.ec2#ReplaceNetworkAclAssociationResult",
      responseWrapper: "ReplaceNetworkAclAssociationResponse",
    },
    ReplaceNetworkAclEntry: {
      name: "ReplaceNetworkAclEntry",
      input: "com.amazonaws.ec2#ReplaceNetworkAclEntryRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ReplaceNetworkAclEntryResponse",
    },
    ReplaceRoute: {
      name: "ReplaceRoute",
      input: "com.amazonaws.ec2#ReplaceRouteRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ReplaceRouteResponse",
    },
    ReplaceRouteTableAssociation: {
      name: "ReplaceRouteTableAssociation",
      input: "com.amazonaws.ec2#ReplaceRouteTableAssociationRequest",
      output: "com.amazonaws.ec2#ReplaceRouteTableAssociationResult",
      responseWrapper: "ReplaceRouteTableAssociationResponse",
    },
    ReplaceTransitGatewayRoute: {
      name: "ReplaceTransitGatewayRoute",
      input: "com.amazonaws.ec2#ReplaceTransitGatewayRouteRequest",
      output: "com.amazonaws.ec2#ReplaceTransitGatewayRouteResult",
      responseWrapper: "ReplaceTransitGatewayRouteResponse",
    },
    ReplaceVpnTunnel: {
      name: "ReplaceVpnTunnel",
      input: "com.amazonaws.ec2#ReplaceVpnTunnelRequest",
      output: "com.amazonaws.ec2#ReplaceVpnTunnelResult",
      responseWrapper: "ReplaceVpnTunnelResponse",
    },
    ReportInstanceStatus: {
      name: "ReportInstanceStatus",
      input: "com.amazonaws.ec2#ReportInstanceStatusRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ReportInstanceStatusResponse",
    },
    RequestSpotFleet: {
      name: "RequestSpotFleet",
      input: "com.amazonaws.ec2#RequestSpotFleetRequest",
      output: "com.amazonaws.ec2#RequestSpotFleetResponse",
      responseWrapper: "RequestSpotFleetResponse",
    },
    RequestSpotInstances: {
      name: "RequestSpotInstances",
      input: "com.amazonaws.ec2#RequestSpotInstancesRequest",
      output: "com.amazonaws.ec2#RequestSpotInstancesResult",
      responseWrapper: "RequestSpotInstancesResponse",
    },
    ResetAddressAttribute: {
      name: "ResetAddressAttribute",
      input: "com.amazonaws.ec2#ResetAddressAttributeRequest",
      output: "com.amazonaws.ec2#ResetAddressAttributeResult",
      responseWrapper: "ResetAddressAttributeResponse",
    },
    ResetEbsDefaultKmsKeyId: {
      name: "ResetEbsDefaultKmsKeyId",
      input: "com.amazonaws.ec2#ResetEbsDefaultKmsKeyIdRequest",
      output: "com.amazonaws.ec2#ResetEbsDefaultKmsKeyIdResult",
      responseWrapper: "ResetEbsDefaultKmsKeyIdResponse",
    },
    ResetFpgaImageAttribute: {
      name: "ResetFpgaImageAttribute",
      input: "com.amazonaws.ec2#ResetFpgaImageAttributeRequest",
      output: "com.amazonaws.ec2#ResetFpgaImageAttributeResult",
      responseWrapper: "ResetFpgaImageAttributeResponse",
    },
    ResetImageAttribute: {
      name: "ResetImageAttribute",
      input: "com.amazonaws.ec2#ResetImageAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ResetImageAttributeResponse",
    },
    ResetInstanceAttribute: {
      name: "ResetInstanceAttribute",
      input: "com.amazonaws.ec2#ResetInstanceAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ResetInstanceAttributeResponse",
    },
    ResetNetworkInterfaceAttribute: {
      name: "ResetNetworkInterfaceAttribute",
      input: "com.amazonaws.ec2#ResetNetworkInterfaceAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ResetNetworkInterfaceAttributeResponse",
    },
    ResetSnapshotAttribute: {
      name: "ResetSnapshotAttribute",
      input: "com.amazonaws.ec2#ResetSnapshotAttributeRequest",
      output: "smithy.api#Unit",
      responseWrapper: "ResetSnapshotAttributeResponse",
    },
    RestoreAddressToClassic: {
      name: "RestoreAddressToClassic",
      input: "com.amazonaws.ec2#RestoreAddressToClassicRequest",
      output: "com.amazonaws.ec2#RestoreAddressToClassicResult",
      responseWrapper: "RestoreAddressToClassicResponse",
    },
    RestoreImageFromRecycleBin: {
      name: "RestoreImageFromRecycleBin",
      input: "com.amazonaws.ec2#RestoreImageFromRecycleBinRequest",
      output: "com.amazonaws.ec2#RestoreImageFromRecycleBinResult",
      responseWrapper: "RestoreImageFromRecycleBinResponse",
    },
    RestoreManagedPrefixListVersion: {
      name: "RestoreManagedPrefixListVersion",
      input: "com.amazonaws.ec2#RestoreManagedPrefixListVersionRequest",
      output: "com.amazonaws.ec2#RestoreManagedPrefixListVersionResult",
      responseWrapper: "RestoreManagedPrefixListVersionResponse",
    },
    RestoreSnapshotFromRecycleBin: {
      name: "RestoreSnapshotFromRecycleBin",
      input: "com.amazonaws.ec2#RestoreSnapshotFromRecycleBinRequest",
      output: "com.amazonaws.ec2#RestoreSnapshotFromRecycleBinResult",
      responseWrapper: "RestoreSnapshotFromRecycleBinResponse",
    },
    RestoreSnapshotTier: {
      name: "RestoreSnapshotTier",
      input: "com.amazonaws.ec2#RestoreSnapshotTierRequest",
      output: "com.amazonaws.ec2#RestoreSnapshotTierResult",
      responseWrapper: "RestoreSnapshotTierResponse",
    },
    RevokeClientVpnIngress: {
      name: "RevokeClientVpnIngress",
      input: "com.amazonaws.ec2#RevokeClientVpnIngressRequest",
      output: "com.amazonaws.ec2#RevokeClientVpnIngressResult",
      responseWrapper: "RevokeClientVpnIngressResponse",
    },
    RevokeSecurityGroupEgress: {
      name: "RevokeSecurityGroupEgress",
      input: "com.amazonaws.ec2#RevokeSecurityGroupEgressRequest",
      output: "com.amazonaws.ec2#RevokeSecurityGroupEgressResult",
      responseWrapper: "RevokeSecurityGroupEgressResponse",
    },
    RevokeSecurityGroupIngress: {
      name: "RevokeSecurityGroupIngress",
      input: "com.amazonaws.ec2#RevokeSecurityGroupIngressRequest",
      output: "com.amazonaws.ec2#RevokeSecurityGroupIngressResult",
      responseWrapper: "RevokeSecurityGroupIngressResponse",
    },
    RunInstances: {
      name: "RunInstances",
      input: "com.amazonaws.ec2#RunInstancesRequest",
      output: "com.amazonaws.ec2#Reservation",
      responseWrapper: "RunInstancesResponse",
    },
    RunScheduledInstances: {
      name: "RunScheduledInstances",
      input: "com.amazonaws.ec2#RunScheduledInstancesRequest",
      output: "com.amazonaws.ec2#RunScheduledInstancesResult",
      responseWrapper: "RunScheduledInstancesResponse",
    },
    SearchLocalGatewayRoutes: {
      name: "SearchLocalGatewayRoutes",
      input: "com.amazonaws.ec2#SearchLocalGatewayRoutesRequest",
      output: "com.amazonaws.ec2#SearchLocalGatewayRoutesResult",
      responseWrapper: "SearchLocalGatewayRoutesResponse",
    },
    SearchTransitGatewayMulticastGroups: {
      name: "SearchTransitGatewayMulticastGroups",
      input: "com.amazonaws.ec2#SearchTransitGatewayMulticastGroupsRequest",
      output: "com.amazonaws.ec2#SearchTransitGatewayMulticastGroupsResult",
      responseWrapper: "SearchTransitGatewayMulticastGroupsResponse",
    },
    SearchTransitGatewayRoutes: {
      name: "SearchTransitGatewayRoutes",
      input: "com.amazonaws.ec2#SearchTransitGatewayRoutesRequest",
      output: "com.amazonaws.ec2#SearchTransitGatewayRoutesResult",
      responseWrapper: "SearchTransitGatewayRoutesResponse",
    },
    SendDiagnosticInterrupt: {
      name: "SendDiagnosticInterrupt",
      input: "com.amazonaws.ec2#SendDiagnosticInterruptRequest",
      output: "smithy.api#Unit",
      responseWrapper: "SendDiagnosticInterruptResponse",
    },
    StartDeclarativePoliciesReport: {
      name: "StartDeclarativePoliciesReport",
      input: "com.amazonaws.ec2#StartDeclarativePoliciesReportRequest",
      output: "com.amazonaws.ec2#StartDeclarativePoliciesReportResult",
      responseWrapper: "StartDeclarativePoliciesReportResponse",
    },
    StartInstances: {
      name: "StartInstances",
      input: "com.amazonaws.ec2#StartInstancesRequest",
      output: "com.amazonaws.ec2#StartInstancesResult",
      responseWrapper: "StartInstancesResponse",
    },
    StartNetworkInsightsAccessScopeAnalysis: {
      name: "StartNetworkInsightsAccessScopeAnalysis",
      input: "com.amazonaws.ec2#StartNetworkInsightsAccessScopeAnalysisRequest",
      output: "com.amazonaws.ec2#StartNetworkInsightsAccessScopeAnalysisResult",
      responseWrapper: "StartNetworkInsightsAccessScopeAnalysisResponse",
    },
    StartNetworkInsightsAnalysis: {
      name: "StartNetworkInsightsAnalysis",
      input: "com.amazonaws.ec2#StartNetworkInsightsAnalysisRequest",
      output: "com.amazonaws.ec2#StartNetworkInsightsAnalysisResult",
      responseWrapper: "StartNetworkInsightsAnalysisResponse",
    },
    StartVpcEndpointServicePrivateDnsVerification: {
      name: "StartVpcEndpointServicePrivateDnsVerification",
      input:
        "com.amazonaws.ec2#StartVpcEndpointServicePrivateDnsVerificationRequest",
      output:
        "com.amazonaws.ec2#StartVpcEndpointServicePrivateDnsVerificationResult",
      responseWrapper: "StartVpcEndpointServicePrivateDnsVerificationResponse",
    },
    StopInstances: {
      name: "StopInstances",
      input: "com.amazonaws.ec2#StopInstancesRequest",
      output: "com.amazonaws.ec2#StopInstancesResult",
      responseWrapper: "StopInstancesResponse",
    },
    TerminateClientVpnConnections: {
      name: "TerminateClientVpnConnections",
      input: "com.amazonaws.ec2#TerminateClientVpnConnectionsRequest",
      output: "com.amazonaws.ec2#TerminateClientVpnConnectionsResult",
      responseWrapper: "TerminateClientVpnConnectionsResponse",
    },
    TerminateInstances: {
      name: "TerminateInstances",
      input: "com.amazonaws.ec2#TerminateInstancesRequest",
      output: "com.amazonaws.ec2#TerminateInstancesResult",
      responseWrapper: "TerminateInstancesResponse",
    },
    UnassignIpv6Addresses: {
      name: "UnassignIpv6Addresses",
      input: "com.amazonaws.ec2#UnassignIpv6AddressesRequest",
      output: "com.amazonaws.ec2#UnassignIpv6AddressesResult",
      responseWrapper: "UnassignIpv6AddressesResponse",
    },
    UnassignPrivateIpAddresses: {
      name: "UnassignPrivateIpAddresses",
      input: "com.amazonaws.ec2#UnassignPrivateIpAddressesRequest",
      output: "smithy.api#Unit",
      responseWrapper: "UnassignPrivateIpAddressesResponse",
    },
    UnassignPrivateNatGatewayAddress: {
      name: "UnassignPrivateNatGatewayAddress",
      input: "com.amazonaws.ec2#UnassignPrivateNatGatewayAddressRequest",
      output: "com.amazonaws.ec2#UnassignPrivateNatGatewayAddressResult",
      responseWrapper: "UnassignPrivateNatGatewayAddressResponse",
    },
    UnlockSnapshot: {
      name: "UnlockSnapshot",
      input: "com.amazonaws.ec2#UnlockSnapshotRequest",
      output: "com.amazonaws.ec2#UnlockSnapshotResult",
      responseWrapper: "UnlockSnapshotResponse",
    },
    UnmonitorInstances: {
      name: "UnmonitorInstances",
      input: "com.amazonaws.ec2#UnmonitorInstancesRequest",
      output: "com.amazonaws.ec2#UnmonitorInstancesResult",
      responseWrapper: "UnmonitorInstancesResponse",
    },
    UpdateSecurityGroupRuleDescriptionsEgress: {
      name: "UpdateSecurityGroupRuleDescriptionsEgress",
      input:
        "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsEgressRequest",
      output:
        "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsEgressResult",
      responseWrapper: "UpdateSecurityGroupRuleDescriptionsEgressResponse",
    },
    UpdateSecurityGroupRuleDescriptionsIngress: {
      name: "UpdateSecurityGroupRuleDescriptionsIngress",
      input:
        "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsIngressRequest",
      output:
        "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsIngressResult",
      responseWrapper: "UpdateSecurityGroupRuleDescriptionsIngressResponse",
    },
    WithdrawByoipCidr: {
      name: "WithdrawByoipCidr",
      input: "com.amazonaws.ec2#WithdrawByoipCidrRequest",
      output: "com.amazonaws.ec2#WithdrawByoipCidrResult",
      responseWrapper: "WithdrawByoipCidrResponse",
    },
  },
  shapes: {
    "com.amazonaws.ec2#AcceptAddressTransferRequest": {
      type: "structure",
      members: {
        Address: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AcceptAddressTransferResult": {
      type: "structure",
      members: {
        AddressTransfer: {
          target: "com.amazonaws.ec2#AddressTransfer",
          locationName: "addressTransfer",
        },
      },
    },
    "com.amazonaws.ec2#AcceptCapacityReservationBillingOwnershipRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
      },
    },
    "com.amazonaws.ec2#AcceptCapacityReservationBillingOwnershipResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#AcceptReservedInstancesExchangeQuoteRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ReservedInstanceIds: {
          target: "com.amazonaws.ec2#ReservedInstanceIdSet",
          locationName: "ReservedInstanceId",
        },
        TargetConfigurations: {
          target: "com.amazonaws.ec2#TargetConfigurationRequestSet",
          locationName: "TargetConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#AcceptReservedInstancesExchangeQuoteResult": {
      type: "structure",
      members: {
        ExchangeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "exchangeId",
        },
      },
    },
    "com.amazonaws.ec2#AcceptTransitGatewayMulticastDomainAssociationsRequest":
      {
        type: "structure",
        members: {
          TransitGatewayMulticastDomainId: {
            target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
          },
          TransitGatewayAttachmentId: {
            target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          },
          SubnetIds: {
            target: "com.amazonaws.ec2#ValueStringList",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#AcceptTransitGatewayMulticastDomainAssociationsResult": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociations",
          locationName: "associations",
        },
      },
    },
    "com.amazonaws.ec2#AcceptTransitGatewayPeeringAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AcceptTransitGatewayPeeringAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayPeeringAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayPeeringAttachment",
          locationName: "transitGatewayPeeringAttachment",
        },
      },
    },
    "com.amazonaws.ec2#AcceptTransitGatewayVpcAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AcceptTransitGatewayVpcAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayVpcAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachment",
          locationName: "transitGatewayVpcAttachment",
        },
      },
    },
    "com.amazonaws.ec2#AcceptVpcEndpointConnectionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        VpcEndpointIds: {
          target: "com.amazonaws.ec2#VpcEndpointIdList",
          locationName: "VpcEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#AcceptVpcEndpointConnectionsResult": {
      type: "structure",
      members: {
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#AcceptVpcPeeringConnectionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionIdWithResolver",
          locationName: "vpcPeeringConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#AcceptVpcPeeringConnectionResult": {
      type: "structure",
      members: {
        VpcPeeringConnection: {
          target: "com.amazonaws.ec2#VpcPeeringConnection",
          locationName: "vpcPeeringConnection",
        },
      },
    },
    "com.amazonaws.ec2#AdvertiseByoipCidrRequest": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        Asn: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#AdvertiseByoipCidrResult": {
      type: "structure",
      members: {
        ByoipCidr: {
          target: "com.amazonaws.ec2#ByoipCidr",
          locationName: "byoipCidr",
        },
      },
    },
    "com.amazonaws.ec2#AllocateAddressRequest": {
      type: "structure",
      members: {
        Domain: {
          target: "com.amazonaws.ec2#DomainType",
        },
        Address: {
          target: "com.amazonaws.ec2#PublicIpAddress",
        },
        PublicIpv4Pool: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
        CustomerOwnedIpv4Pool: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#AllocateAddressResult": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        PublicIpv4Pool: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIpv4Pool",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
        Domain: {
          target: "com.amazonaws.ec2#DomainType",
          locationName: "domain",
        },
        CustomerOwnedIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerOwnedIp",
        },
        CustomerOwnedIpv4Pool: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerOwnedIpv4Pool",
        },
        CarrierIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "carrierIp",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
      },
    },
    "com.amazonaws.ec2#AllocateHostsRequest": {
      type: "structure",
      members: {
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        HostRecovery: {
          target: "com.amazonaws.ec2#HostRecovery",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        HostMaintenance: {
          target: "com.amazonaws.ec2#HostMaintenance",
        },
        AssetIds: {
          target: "com.amazonaws.ec2#AssetIdList",
          locationName: "AssetId",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
        },
        AutoPlacement: {
          target: "com.amazonaws.ec2#AutoPlacement",
          locationName: "autoPlacement",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        Quantity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "quantity",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
      },
    },
    "com.amazonaws.ec2#AllocateHostsResult": {
      type: "structure",
      members: {
        HostIds: {
          target: "com.amazonaws.ec2#ResponseHostIdList",
          locationName: "hostIdSet",
        },
      },
    },
    "com.amazonaws.ec2#AllocateIpamPoolCidrRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        NetmaskLength: {
          target: "com.amazonaws.ec2#Integer",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        PreviewNextCidr: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AllowedCidrs: {
          target: "com.amazonaws.ec2#IpamPoolAllocationAllowedCidrs",
          locationName: "AllowedCidr",
        },
        DisallowedCidrs: {
          target: "com.amazonaws.ec2#IpamPoolAllocationDisallowedCidrs",
          locationName: "DisallowedCidr",
        },
      },
    },
    "com.amazonaws.ec2#AllocateIpamPoolCidrResult": {
      type: "structure",
      members: {
        IpamPoolAllocation: {
          target: "com.amazonaws.ec2#IpamPoolAllocation",
          locationName: "ipamPoolAllocation",
        },
      },
    },
    "com.amazonaws.ec2#ApplySecurityGroupsToClientVpnTargetNetworkRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ClientVpnSecurityGroupIdSet",
          locationName: "SecurityGroupId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ApplySecurityGroupsToClientVpnTargetNetworkResult": {
      type: "structure",
      members: {
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ClientVpnSecurityGroupIdSet",
          locationName: "securityGroupIds",
        },
      },
    },
    "com.amazonaws.ec2#AssignIpv6AddressesRequest": {
      type: "structure",
      members: {
        Ipv6PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#IpPrefixList",
          locationName: "Ipv6Prefix",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#Ipv6AddressList",
          locationName: "ipv6Addresses",
        },
        Ipv6AddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ipv6AddressCount",
        },
      },
    },
    "com.amazonaws.ec2#AssignIpv6AddressesResult": {
      type: "structure",
      members: {
        AssignedIpv6Addresses: {
          target: "com.amazonaws.ec2#Ipv6AddressList",
          locationName: "assignedIpv6Addresses",
        },
        AssignedIpv6Prefixes: {
          target: "com.amazonaws.ec2#IpPrefixList",
          locationName: "assignedIpv6PrefixSet",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
      },
    },
    "com.amazonaws.ec2#AssignPrivateIpAddressesRequest": {
      type: "structure",
      members: {
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#IpPrefixList",
          locationName: "Ipv4Prefix",
        },
        Ipv4PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#PrivateIpAddressStringList",
          locationName: "privateIpAddress",
        },
        SecondaryPrivateIpAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "secondaryPrivateIpAddressCount",
        },
        AllowReassignment: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowReassignment",
        },
      },
    },
    "com.amazonaws.ec2#AssignPrivateIpAddressesResult": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        AssignedPrivateIpAddresses: {
          target: "com.amazonaws.ec2#AssignedPrivateIpAddressList",
          locationName: "assignedPrivateIpAddressesSet",
        },
        AssignedIpv4Prefixes: {
          target: "com.amazonaws.ec2#Ipv4PrefixesList",
          locationName: "assignedIpv4PrefixSet",
        },
      },
    },
    "com.amazonaws.ec2#AssignPrivateNatGatewayAddressRequest": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#IpList",
          locationName: "PrivateIpAddress",
        },
        PrivateIpAddressCount: {
          target: "com.amazonaws.ec2#PrivateIpAddressCount",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssignPrivateNatGatewayAddressResult": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "natGatewayId",
        },
        NatGatewayAddresses: {
          target: "com.amazonaws.ec2#NatGatewayAddressList",
          locationName: "natGatewayAddressSet",
        },
      },
    },
    "com.amazonaws.ec2#AssociateAddressRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#EipAllocationPublicIp",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        AllowReassociation: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowReassociation",
        },
      },
    },
    "com.amazonaws.ec2#AssociateAddressResult": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
      },
    },
    "com.amazonaws.ec2#AssociateCapacityReservationBillingOwnerRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        UnusedReservationBillingOwnerId: {
          target: "com.amazonaws.ec2#AccountID",
        },
      },
    },
    "com.amazonaws.ec2#AssociateCapacityReservationBillingOwnerResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#AssociateClientVpnTargetNetworkRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateClientVpnTargetNetworkResult": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        Status: {
          target: "com.amazonaws.ec2#AssociationStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#AssociateDhcpOptionsRequest": {
      type: "structure",
      members: {
        DhcpOptionsId: {
          target: "com.amazonaws.ec2#DefaultingDhcpOptionsId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#AssociateEnclaveCertificateIamRoleRequest": {
      type: "structure",
      members: {
        CertificateArn: {
          target: "com.amazonaws.ec2#CertificateId",
        },
        RoleArn: {
          target: "com.amazonaws.ec2#RoleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateEnclaveCertificateIamRoleResult": {
      type: "structure",
      members: {
        CertificateS3BucketName: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateS3BucketName",
        },
        CertificateS3ObjectKey: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateS3ObjectKey",
        },
        EncryptionKmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "encryptionKmsKeyId",
        },
      },
    },
    "com.amazonaws.ec2#AssociateIamInstanceProfileRequest": {
      type: "structure",
      members: {
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfileSpecification",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
      },
    },
    "com.amazonaws.ec2#AssociateIamInstanceProfileResult": {
      type: "structure",
      members: {
        IamInstanceProfileAssociation: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociation",
          locationName: "iamInstanceProfileAssociation",
        },
      },
    },
    "com.amazonaws.ec2#AssociateInstanceEventWindowRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceEventWindowId: {
          target: "com.amazonaws.ec2#InstanceEventWindowId",
        },
        AssociationTarget: {
          target: "com.amazonaws.ec2#InstanceEventWindowAssociationRequest",
        },
      },
    },
    "com.amazonaws.ec2#AssociateInstanceEventWindowResult": {
      type: "structure",
      members: {
        InstanceEventWindow: {
          target: "com.amazonaws.ec2#InstanceEventWindow",
          locationName: "instanceEventWindow",
        },
      },
    },
    "com.amazonaws.ec2#AssociateIpamByoasnRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Asn: {
          target: "com.amazonaws.ec2#String",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#AssociateIpamByoasnResult": {
      type: "structure",
      members: {
        AsnAssociation: {
          target: "com.amazonaws.ec2#AsnAssociation",
          locationName: "asnAssociation",
        },
      },
    },
    "com.amazonaws.ec2#AssociateIpamResourceDiscoveryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#AssociateIpamResourceDiscoveryResult": {
      type: "structure",
      members: {
        IpamResourceDiscoveryAssociation: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociation",
          locationName: "ipamResourceDiscoveryAssociation",
        },
      },
    },
    "com.amazonaws.ec2#AssociateNatGatewayAddressRequest": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
        },
        AllocationIds: {
          target: "com.amazonaws.ec2#AllocationIdList",
          locationName: "AllocationId",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#IpList",
          locationName: "PrivateIpAddress",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateNatGatewayAddressResult": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "natGatewayId",
        },
        NatGatewayAddresses: {
          target: "com.amazonaws.ec2#NatGatewayAddressList",
          locationName: "natGatewayAddressSet",
        },
      },
    },
    "com.amazonaws.ec2#AssociateRouteServerRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateRouteServerResult": {
      type: "structure",
      members: {
        RouteServerAssociation: {
          target: "com.amazonaws.ec2#RouteServerAssociation",
          locationName: "routeServerAssociation",
        },
      },
    },
    "com.amazonaws.ec2#AssociateRouteTableRequest": {
      type: "structure",
      members: {
        GatewayId: {
          target: "com.amazonaws.ec2#RouteGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
      },
    },
    "com.amazonaws.ec2#AssociateRouteTableResult": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        AssociationState: {
          target: "com.amazonaws.ec2#RouteTableAssociationState",
          locationName: "associationState",
        },
      },
    },
    "com.amazonaws.ec2#AssociateSecurityGroupVpcRequest": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateSecurityGroupVpcResult": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SecurityGroupVpcAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#AssociateSubnetCidrBlockRequest": {
      type: "structure",
      members: {
        Ipv6IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv6NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#AssociateSubnetCidrBlockResult": {
      type: "structure",
      members: {
        Ipv6CidrBlockAssociation: {
          target: "com.amazonaws.ec2#SubnetIpv6CidrBlockAssociation",
          locationName: "ipv6CidrBlockAssociation",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTransitGatewayMulticastDomainRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#TransitGatewaySubnetIdList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTransitGatewayMulticastDomainResult": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociations",
          locationName: "associations",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTransitGatewayPolicyTableRequest": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTransitGatewayPolicyTableResult": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableAssociation",
          locationName: "association",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTransitGatewayRouteTableRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTransitGatewayRouteTableResult": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#TransitGatewayAssociation",
          locationName: "association",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTrunkInterfaceRequest": {
      type: "structure",
      members: {
        BranchInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        TrunkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        VlanId: {
          target: "com.amazonaws.ec2#Integer",
        },
        GreKey: {
          target: "com.amazonaws.ec2#Integer",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AssociateTrunkInterfaceResult": {
      type: "structure",
      members: {
        InterfaceAssociation: {
          target: "com.amazonaws.ec2#TrunkInterfaceAssociation",
          locationName: "interfaceAssociation",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#AssociateVpcCidrBlockRequest": {
      type: "structure",
      members: {
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv6CidrBlockNetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv6Pool: {
          target: "com.amazonaws.ec2#Ipv6PoolEc2Id",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv4IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv4NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        Ipv6IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv6NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        AmazonProvidedIpv6CidrBlock: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "amazonProvidedIpv6CidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#AssociateVpcCidrBlockResult": {
      type: "structure",
      members: {
        Ipv6CidrBlockAssociation: {
          target: "com.amazonaws.ec2#VpcIpv6CidrBlockAssociation",
          locationName: "ipv6CidrBlockAssociation",
        },
        CidrBlockAssociation: {
          target: "com.amazonaws.ec2#VpcCidrBlockAssociation",
          locationName: "cidrBlockAssociation",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#AttachClassicLinkVpcRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdStringList",
          locationName: "SecurityGroupId",
        },
      },
    },
    "com.amazonaws.ec2#AttachClassicLinkVpcResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#AttachInternetGatewayRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InternetGatewayId: {
          target: "com.amazonaws.ec2#InternetGatewayId",
          locationName: "internetGatewayId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#AttachNetworkInterfaceRequest": {
      type: "structure",
      members: {
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#Integer",
        },
        EnaSrdSpecification: {
          target: "com.amazonaws.ec2#EnaSrdSpecification",
        },
        EnaQueueCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        DeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "deviceIndex",
        },
      },
    },
    "com.amazonaws.ec2#AttachNetworkInterfaceResult": {
      type: "structure",
      members: {
        AttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "attachmentId",
        },
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "networkCardIndex",
        },
      },
    },
    "com.amazonaws.ec2#AttachVerifiedAccessTrustProviderRequest": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        VerifiedAccessTrustProviderId: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AttachVerifiedAccessTrustProviderResult": {
      type: "structure",
      members: {
        VerifiedAccessTrustProvider: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProvider",
          locationName: "verifiedAccessTrustProvider",
        },
        VerifiedAccessInstance: {
          target: "com.amazonaws.ec2#VerifiedAccessInstance",
          locationName: "verifiedAccessInstance",
        },
      },
    },
    "com.amazonaws.ec2#AttachVolumeRequest": {
      type: "structure",
      members: {
        Device: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#VolumeAttachment": {
      type: "structure",
      members: {
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        AssociatedResource: {
          target: "com.amazonaws.ec2#String",
          locationName: "associatedResource",
        },
        InstanceOwningService: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceOwningService",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Device: {
          target: "com.amazonaws.ec2#String",
          locationName: "device",
        },
        State: {
          target: "com.amazonaws.ec2#VolumeAttachmentState",
          locationName: "status",
        },
        AttachTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "attachTime",
        },
      },
    },
    "com.amazonaws.ec2#AttachVpnGatewayRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#AttachVpnGatewayResult": {
      type: "structure",
      members: {
        VpcAttachment: {
          target: "com.amazonaws.ec2#VpcAttachment",
          locationName: "attachment",
        },
      },
    },
    "com.amazonaws.ec2#AuthorizeClientVpnIngressRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        TargetNetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        AccessGroupId: {
          target: "com.amazonaws.ec2#String",
        },
        AuthorizeAllGroups: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#AuthorizeClientVpnIngressResult": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#ClientVpnAuthorizationRuleStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#AuthorizeSecurityGroupEgressRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "groupId",
        },
        SourceSecurityGroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceSecurityGroupName",
        },
        SourceSecurityGroupOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceSecurityGroupOwnerId",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipProtocol",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
        CidrIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIp",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
          locationName: "ipPermissions",
        },
      },
    },
    "com.amazonaws.ec2#AuthorizeSecurityGroupEgressResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        SecurityGroupRules: {
          target: "com.amazonaws.ec2#SecurityGroupRuleList",
          locationName: "securityGroupRuleSet",
        },
      },
    },
    "com.amazonaws.ec2#AuthorizeSecurityGroupIngressRequest": {
      type: "structure",
      members: {
        CidrIp: {
          target: "com.amazonaws.ec2#String",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#SecurityGroupName",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
        },
        SourceSecurityGroupName: {
          target: "com.amazonaws.ec2#String",
        },
        SourceSecurityGroupOwnerId: {
          target: "com.amazonaws.ec2#String",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#AuthorizeSecurityGroupIngressResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        SecurityGroupRules: {
          target: "com.amazonaws.ec2#SecurityGroupRuleList",
          locationName: "securityGroupRuleSet",
        },
      },
    },
    "com.amazonaws.ec2#BundleInstanceRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        Storage: {
          target: "com.amazonaws.ec2#Storage",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#BundleInstanceResult": {
      type: "structure",
      members: {
        BundleTask: {
          target: "com.amazonaws.ec2#BundleTask",
          locationName: "bundleInstanceTask",
        },
      },
    },
    "com.amazonaws.ec2#CancelBundleTaskRequest": {
      type: "structure",
      members: {
        BundleId: {
          target: "com.amazonaws.ec2#BundleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CancelBundleTaskResult": {
      type: "structure",
      members: {
        BundleTask: {
          target: "com.amazonaws.ec2#BundleTask",
          locationName: "bundleInstanceTask",
        },
      },
    },
    "com.amazonaws.ec2#CancelCapacityReservationRequest": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CancelCapacityReservationResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#CancelCapacityReservationFleetsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CapacityReservationFleetIds: {
          target: "com.amazonaws.ec2#CapacityReservationFleetIdSet",
          locationName: "CapacityReservationFleetId",
        },
      },
    },
    "com.amazonaws.ec2#CancelCapacityReservationFleetsResult": {
      type: "structure",
      members: {
        SuccessfulFleetCancellations: {
          target:
            "com.amazonaws.ec2#CapacityReservationFleetCancellationStateSet",
          locationName: "successfulFleetCancellationSet",
        },
        FailedFleetCancellations: {
          target:
            "com.amazonaws.ec2#FailedCapacityReservationFleetCancellationResultSet",
          locationName: "failedFleetCancellationSet",
        },
      },
    },
    "com.amazonaws.ec2#CancelConversionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        ConversionTaskId: {
          target: "com.amazonaws.ec2#ConversionTaskId",
          locationName: "conversionTaskId",
        },
        ReasonMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "reasonMessage",
        },
      },
    },
    "com.amazonaws.ec2#CancelDeclarativePoliciesReportRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ReportId: {
          target: "com.amazonaws.ec2#DeclarativePoliciesReportId",
        },
      },
    },
    "com.amazonaws.ec2#CancelDeclarativePoliciesReportResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#CancelExportTaskRequest": {
      type: "structure",
      members: {
        ExportTaskId: {
          target: "com.amazonaws.ec2#ExportVmTaskId",
          locationName: "exportTaskId",
        },
      },
    },
    "com.amazonaws.ec2#CancelImageLaunchPermissionRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CancelImageLaunchPermissionResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#CancelImportTaskRequest": {
      type: "structure",
      members: {
        CancelReason: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ImportTaskId: {
          target: "com.amazonaws.ec2#ImportTaskId",
        },
      },
    },
    "com.amazonaws.ec2#CancelImportTaskResult": {
      type: "structure",
      members: {
        ImportTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "importTaskId",
        },
        PreviousState: {
          target: "com.amazonaws.ec2#String",
          locationName: "previousState",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#CancelReservedInstancesListingRequest": {
      type: "structure",
      members: {
        ReservedInstancesListingId: {
          target: "com.amazonaws.ec2#ReservedInstancesListingId",
          locationName: "reservedInstancesListingId",
        },
      },
    },
    "com.amazonaws.ec2#CancelReservedInstancesListingResult": {
      type: "structure",
      members: {
        ReservedInstancesListings: {
          target: "com.amazonaws.ec2#ReservedInstancesListingList",
          locationName: "reservedInstancesListingsSet",
        },
      },
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotFleetRequestIds: {
          target: "com.amazonaws.ec2#SpotFleetRequestIdList",
          locationName: "spotFleetRequestId",
        },
        TerminateInstances: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "terminateInstances",
        },
      },
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsResponse": {
      type: "structure",
      members: {
        SuccessfulFleetRequests: {
          target: "com.amazonaws.ec2#CancelSpotFleetRequestsSuccessSet",
          locationName: "successfulFleetRequestSet",
        },
        UnsuccessfulFleetRequests: {
          target: "com.amazonaws.ec2#CancelSpotFleetRequestsErrorSet",
          locationName: "unsuccessfulFleetRequestSet",
        },
      },
    },
    "com.amazonaws.ec2#CancelSpotInstanceRequestsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotInstanceRequestIds: {
          target: "com.amazonaws.ec2#SpotInstanceRequestIdList",
          locationName: "SpotInstanceRequestId",
        },
      },
    },
    "com.amazonaws.ec2#CancelSpotInstanceRequestsResult": {
      type: "structure",
      members: {
        CancelledSpotInstanceRequests: {
          target: "com.amazonaws.ec2#CancelledSpotInstanceRequestList",
          locationName: "spotInstanceRequestSet",
        },
      },
    },
    "com.amazonaws.ec2#ConfirmProductInstanceRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        ProductCode: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ConfirmProductInstanceResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
      },
    },
    "com.amazonaws.ec2#CopyFpgaImageRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SourceFpgaImageId: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        SourceRegion: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CopyFpgaImageResult": {
      type: "structure",
      members: {
        FpgaImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "fpgaImageId",
        },
      },
    },
    "com.amazonaws.ec2#CopyImageRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
          locationName: "kmsKeyId",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        SourceImageId: {
          target: "com.amazonaws.ec2#String",
        },
        SourceRegion: {
          target: "com.amazonaws.ec2#String",
        },
        DestinationOutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        CopyImageTags: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        SnapshotCopyCompletionDurationMinutes: {
          target: "com.amazonaws.ec2#Long",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CopyImageResult": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
      },
    },
    "com.amazonaws.ec2#CopySnapshotRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DestinationOutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        DestinationRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationRegion",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
          locationName: "kmsKeyId",
        },
        PresignedUrl: {
          target: "com.amazonaws.ec2#CopySnapshotRequestPSU",
          locationName: "presignedUrl",
        },
        SourceRegion: {
          target: "com.amazonaws.ec2#String",
        },
        SourceSnapshotId: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        CompletionDurationMinutes: {
          target: "com.amazonaws.ec2#SnapshotCompletionDurationMinutesRequest",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CopySnapshotResult": {
      type: "structure",
      members: {
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
      },
    },
    "com.amazonaws.ec2#CreateCapacityReservationRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
        },
        InstancePlatform: {
          target: "com.amazonaws.ec2#CapacityReservationInstancePlatform",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#CapacityReservationTenancy",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EphemeralStorage: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EndDate: {
          target: "com.amazonaws.ec2#DateTime",
        },
        EndDateType: {
          target: "com.amazonaws.ec2#EndDateType",
        },
        InstanceMatchCriteria: {
          target: "com.amazonaws.ec2#InstanceMatchCriteria",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#OutpostArn",
        },
        PlacementGroupArn: {
          target: "com.amazonaws.ec2#PlacementGroupArn",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        CommitmentDuration: {
          target: "com.amazonaws.ec2#CapacityReservationCommitmentDuration",
        },
        DeliveryPreference: {
          target: "com.amazonaws.ec2#CapacityReservationDeliveryPreference",
        },
      },
    },
    "com.amazonaws.ec2#CreateCapacityReservationResult": {
      type: "structure",
      members: {
        CapacityReservation: {
          target: "com.amazonaws.ec2#CapacityReservation",
          locationName: "capacityReservation",
        },
      },
    },
    "com.amazonaws.ec2#CreateCapacityReservationBySplittingRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        SourceCapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateCapacityReservationBySplittingResult": {
      type: "structure",
      members: {
        SourceCapacityReservation: {
          target: "com.amazonaws.ec2#CapacityReservation",
          locationName: "sourceCapacityReservation",
        },
        DestinationCapacityReservation: {
          target: "com.amazonaws.ec2#CapacityReservation",
          locationName: "destinationCapacityReservation",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
      },
    },
    "com.amazonaws.ec2#CreateCapacityReservationFleetRequest": {
      type: "structure",
      members: {
        AllocationStrategy: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceTypeSpecifications: {
          target: "com.amazonaws.ec2#ReservationFleetInstanceSpecificationList",
          locationName: "InstanceTypeSpecification",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#FleetCapacityReservationTenancy",
        },
        TotalTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        InstanceMatchCriteria: {
          target: "com.amazonaws.ec2#FleetInstanceMatchCriteria",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateCapacityReservationFleetResult": {
      type: "structure",
      members: {
        CapacityReservationFleetId: {
          target: "com.amazonaws.ec2#CapacityReservationFleetId",
          locationName: "capacityReservationFleetId",
        },
        State: {
          target: "com.amazonaws.ec2#CapacityReservationFleetState",
          locationName: "state",
        },
        TotalTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalTargetCapacity",
        },
        TotalFulfilledCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "totalFulfilledCapacity",
        },
        InstanceMatchCriteria: {
          target: "com.amazonaws.ec2#FleetInstanceMatchCriteria",
          locationName: "instanceMatchCriteria",
        },
        AllocationStrategy: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationStrategy",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createTime",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endDate",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#FleetCapacityReservationTenancy",
          locationName: "tenancy",
        },
        FleetCapacityReservations: {
          target: "com.amazonaws.ec2#FleetCapacityReservationSet",
          locationName: "fleetCapacityReservationSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#CreateCarrierGatewayRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateCarrierGatewayResult": {
      type: "structure",
      members: {
        CarrierGateway: {
          target: "com.amazonaws.ec2#CarrierGateway",
          locationName: "carrierGateway",
        },
      },
    },
    "com.amazonaws.ec2#CreateClientVpnEndpointRequest": {
      type: "structure",
      members: {
        ClientCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        ServerCertificateArn: {
          target: "com.amazonaws.ec2#String",
        },
        AuthenticationOptions: {
          target: "com.amazonaws.ec2#ClientVpnAuthenticationRequestList",
          locationName: "Authentication",
        },
        ConnectionLogOptions: {
          target: "com.amazonaws.ec2#ConnectionLogOptions",
        },
        DnsServers: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
        TransportProtocol: {
          target: "com.amazonaws.ec2#TransportProtocol",
        },
        VpnPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        SplitTunnel: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ClientVpnSecurityGroupIdSet",
          locationName: "SecurityGroupId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        SelfServicePortal: {
          target: "com.amazonaws.ec2#SelfServicePortal",
        },
        ClientConnectOptions: {
          target: "com.amazonaws.ec2#ClientConnectOptions",
        },
        SessionTimeoutHours: {
          target: "com.amazonaws.ec2#Integer",
        },
        ClientLoginBannerOptions: {
          target: "com.amazonaws.ec2#ClientLoginBannerOptions",
        },
        ClientRouteEnforcementOptions: {
          target: "com.amazonaws.ec2#ClientRouteEnforcementOptions",
        },
        DisconnectOnSessionTimeout: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateClientVpnEndpointResult": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientVpnEndpointStatus",
          locationName: "status",
        },
        DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "dnsName",
        },
      },
    },
    "com.amazonaws.ec2#CreateClientVpnRouteRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        TargetVpcSubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateClientVpnRouteResult": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#ClientVpnRouteStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#CreateCoipCidrRequest": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        CoipPoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolCoipId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateCoipCidrResult": {
      type: "structure",
      members: {
        CoipCidr: {
          target: "com.amazonaws.ec2#CoipCidr",
          locationName: "coipCidr",
        },
      },
    },
    "com.amazonaws.ec2#CreateCoipPoolRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateCoipPoolResult": {
      type: "structure",
      members: {
        CoipPool: {
          target: "com.amazonaws.ec2#CoipPool",
          locationName: "coipPool",
        },
      },
    },
    "com.amazonaws.ec2#CreateCustomerGatewayRequest": {
      type: "structure",
      members: {
        BgpAsn: {
          target: "com.amazonaws.ec2#Integer",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
        },
        CertificateArn: {
          target: "com.amazonaws.ec2#String",
        },
        Type: {
          target: "com.amazonaws.ec2#GatewayType",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DeviceName: {
          target: "com.amazonaws.ec2#String",
        },
        IpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        BgpAsnExtended: {
          target: "com.amazonaws.ec2#Long",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateCustomerGatewayResult": {
      type: "structure",
      members: {
        CustomerGateway: {
          target: "com.amazonaws.ec2#CustomerGateway",
          locationName: "customerGateway",
        },
      },
    },
    "com.amazonaws.ec2#CreateDefaultSubnetRequest": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Ipv6Native: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateDefaultSubnetResult": {
      type: "structure",
      members: {
        Subnet: {
          target: "com.amazonaws.ec2#Subnet",
          locationName: "subnet",
        },
      },
    },
    "com.amazonaws.ec2#CreateDefaultVpcRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateDefaultVpcResult": {
      type: "structure",
      members: {
        Vpc: {
          target: "com.amazonaws.ec2#Vpc",
          locationName: "vpc",
        },
      },
    },
    "com.amazonaws.ec2#CreateDelegateMacVolumeOwnershipTaskRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        MacCredentials: {
          target: "com.amazonaws.ec2#SensitiveMacCredentials",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateDelegateMacVolumeOwnershipTaskResult": {
      type: "structure",
      members: {
        MacModificationTask: {
          target: "com.amazonaws.ec2#MacModificationTask",
          locationName: "macModificationTask",
        },
      },
    },
    "com.amazonaws.ec2#CreateDhcpOptionsRequest": {
      type: "structure",
      members: {
        DhcpConfigurations: {
          target: "com.amazonaws.ec2#NewDhcpConfigurationList",
          locationName: "dhcpConfiguration",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateDhcpOptionsResult": {
      type: "structure",
      members: {
        DhcpOptions: {
          target: "com.amazonaws.ec2#DhcpOptions",
          locationName: "dhcpOptions",
        },
      },
    },
    "com.amazonaws.ec2#CreateEgressOnlyInternetGatewayRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateEgressOnlyInternetGatewayResult": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        EgressOnlyInternetGateway: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGateway",
          locationName: "egressOnlyInternetGateway",
        },
      },
    },
    "com.amazonaws.ec2#CreateFleetRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        SpotOptions: {
          target: "com.amazonaws.ec2#SpotOptionsRequest",
        },
        OnDemandOptions: {
          target: "com.amazonaws.ec2#OnDemandOptionsRequest",
        },
        ExcessCapacityTerminationPolicy: {
          target: "com.amazonaws.ec2#FleetExcessCapacityTerminationPolicy",
        },
        LaunchTemplateConfigs: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateConfigListRequest",
        },
        TargetCapacitySpecification: {
          target: "com.amazonaws.ec2#TargetCapacitySpecificationRequest",
        },
        TerminateInstancesWithExpiration: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Type: {
          target: "com.amazonaws.ec2#FleetType",
        },
        ValidFrom: {
          target: "com.amazonaws.ec2#DateTime",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
        },
        ReplaceUnhealthyInstances: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        Context: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateFleetResult": {
      type: "structure",
      members: {
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
          locationName: "fleetId",
        },
        Errors: {
          target: "com.amazonaws.ec2#CreateFleetErrorsSet",
          locationName: "errorSet",
        },
        Instances: {
          target: "com.amazonaws.ec2#CreateFleetInstancesSet",
          locationName: "fleetInstanceSet",
        },
      },
    },
    "com.amazonaws.ec2#CreateFlowLogsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DeliverLogsPermissionArn: {
          target: "com.amazonaws.ec2#String",
        },
        DeliverCrossAccountRole: {
          target: "com.amazonaws.ec2#String",
        },
        LogGroupName: {
          target: "com.amazonaws.ec2#String",
        },
        ResourceIds: {
          target: "com.amazonaws.ec2#FlowLogResourceIds",
          locationName: "ResourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#FlowLogsResourceType",
        },
        TrafficType: {
          target: "com.amazonaws.ec2#TrafficType",
        },
        LogDestinationType: {
          target: "com.amazonaws.ec2#LogDestinationType",
        },
        LogDestination: {
          target: "com.amazonaws.ec2#String",
        },
        LogFormat: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        MaxAggregationInterval: {
          target: "com.amazonaws.ec2#Integer",
        },
        DestinationOptions: {
          target: "com.amazonaws.ec2#DestinationOptionsRequest",
        },
      },
    },
    "com.amazonaws.ec2#CreateFlowLogsResult": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        FlowLogIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "flowLogIdSet",
        },
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#CreateFpgaImageRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InputStorageLocation: {
          target: "com.amazonaws.ec2#StorageLocation",
        },
        LogsStorageLocation: {
          target: "com.amazonaws.ec2#StorageLocation",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateFpgaImageResult": {
      type: "structure",
      members: {
        FpgaImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "fpgaImageId",
        },
        FpgaImageGlobalId: {
          target: "com.amazonaws.ec2#String",
          locationName: "fpgaImageGlobalId",
        },
      },
    },
    "com.amazonaws.ec2#CreateImageRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        SnapshotLocation: {
          target: "com.amazonaws.ec2#SnapshotLocationEnum",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        NoReboot: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "noReboot",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingRequestList",
          locationName: "blockDeviceMapping",
        },
      },
    },
    "com.amazonaws.ec2#CreateImageResult": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
      },
    },
    "com.amazonaws.ec2#CreateInstanceConnectEndpointRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringListRequest",
          locationName: "SecurityGroupId",
        },
        PreserveClientIp: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        IpAddressType: {
          target: "com.amazonaws.ec2#IpAddressType",
        },
      },
    },
    "com.amazonaws.ec2#CreateInstanceConnectEndpointResult": {
      type: "structure",
      members: {
        InstanceConnectEndpoint: {
          target: "com.amazonaws.ec2#Ec2InstanceConnectEndpoint",
          locationName: "instanceConnectEndpoint",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateInstanceEventWindowRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        TimeRanges: {
          target: "com.amazonaws.ec2#InstanceEventWindowTimeRangeRequestSet",
          locationName: "TimeRange",
        },
        CronExpression: {
          target: "com.amazonaws.ec2#InstanceEventWindowCronExpression",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateInstanceEventWindowResult": {
      type: "structure",
      members: {
        InstanceEventWindow: {
          target: "com.amazonaws.ec2#InstanceEventWindow",
          locationName: "instanceEventWindow",
        },
      },
    },
    "com.amazonaws.ec2#CreateInstanceExportTaskRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        TargetEnvironment: {
          target: "com.amazonaws.ec2#ExportEnvironment",
          locationName: "targetEnvironment",
        },
        ExportToS3Task: {
          target: "com.amazonaws.ec2#ExportToS3TaskSpecification",
          locationName: "exportToS3",
        },
      },
    },
    "com.amazonaws.ec2#CreateInstanceExportTaskResult": {
      type: "structure",
      members: {
        ExportTask: {
          target: "com.amazonaws.ec2#ExportTask",
          locationName: "exportTask",
        },
      },
    },
    "com.amazonaws.ec2#CreateInternetGatewayRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateInternetGatewayResult": {
      type: "structure",
      members: {
        InternetGateway: {
          target: "com.amazonaws.ec2#InternetGateway",
          locationName: "internetGateway",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        OperatingRegions: {
          target: "com.amazonaws.ec2#AddIpamOperatingRegionSet",
          locationName: "OperatingRegion",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        Tier: {
          target: "com.amazonaws.ec2#IpamTier",
        },
        EnablePrivateGua: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MeteredAccount: {
          target: "com.amazonaws.ec2#IpamMeteredAccount",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamResult": {
      type: "structure",
      members: {
        Ipam: {
          target: "com.amazonaws.ec2#Ipam",
          locationName: "ipam",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamExternalResourceVerificationTokenRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamExternalResourceVerificationTokenResult": {
      type: "structure",
      members: {
        IpamExternalResourceVerificationToken: {
          target: "com.amazonaws.ec2#IpamExternalResourceVerificationToken",
          locationName: "ipamExternalResourceVerificationToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamPoolRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
        Locale: {
          target: "com.amazonaws.ec2#String",
        },
        SourceIpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        AddressFamily: {
          target: "com.amazonaws.ec2#AddressFamily",
        },
        AutoImport: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PubliclyAdvertisable: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AllocationMinNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
        },
        AllocationMaxNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
        },
        AllocationDefaultNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
        },
        AllocationResourceTags: {
          target: "com.amazonaws.ec2#RequestIpamResourceTagList",
          locationName: "AllocationResourceTag",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        AwsService: {
          target: "com.amazonaws.ec2#IpamPoolAwsService",
        },
        PublicIpSource: {
          target: "com.amazonaws.ec2#IpamPoolPublicIpSource",
        },
        SourceResource: {
          target: "com.amazonaws.ec2#IpamPoolSourceResourceRequest",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamPoolResult": {
      type: "structure",
      members: {
        IpamPool: {
          target: "com.amazonaws.ec2#IpamPool",
          locationName: "ipamPool",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamResourceDiscoveryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        OperatingRegions: {
          target: "com.amazonaws.ec2#AddIpamOperatingRegionSet",
          locationName: "OperatingRegion",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamResourceDiscoveryResult": {
      type: "structure",
      members: {
        IpamResourceDiscovery: {
          target: "com.amazonaws.ec2#IpamResourceDiscovery",
          locationName: "ipamResourceDiscovery",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamScopeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateIpamScopeResult": {
      type: "structure",
      members: {
        IpamScope: {
          target: "com.amazonaws.ec2#IpamScope",
          locationName: "ipamScope",
        },
      },
    },
    "com.amazonaws.ec2#CreateKeyPairRequest": {
      type: "structure",
      members: {
        KeyName: {
          target: "com.amazonaws.ec2#String",
        },
        KeyType: {
          target: "com.amazonaws.ec2#KeyType",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        KeyFormat: {
          target: "com.amazonaws.ec2#KeyFormat",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#KeyPair": {
      type: "structure",
      members: {
        KeyPairId: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyPairId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        KeyFingerprint: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyFingerprint",
        },
        KeyMaterial: {
          target: "com.amazonaws.ec2#SensitiveUserData",
          locationName: "keyMaterial",
        },
      },
    },
    "com.amazonaws.ec2#CreateLaunchTemplateRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
        VersionDescription: {
          target: "com.amazonaws.ec2#VersionDescription",
        },
        LaunchTemplateData: {
          target: "com.amazonaws.ec2#RequestLaunchTemplateData",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorRequest",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateLaunchTemplateResult": {
      type: "structure",
      members: {
        LaunchTemplate: {
          target: "com.amazonaws.ec2#LaunchTemplate",
          locationName: "launchTemplate",
        },
        Warning: {
          target: "com.amazonaws.ec2#ValidationWarning",
          locationName: "warning",
        },
      },
    },
    "com.amazonaws.ec2#CreateLaunchTemplateVersionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
        SourceVersion: {
          target: "com.amazonaws.ec2#String",
        },
        VersionDescription: {
          target: "com.amazonaws.ec2#VersionDescription",
        },
        LaunchTemplateData: {
          target: "com.amazonaws.ec2#RequestLaunchTemplateData",
        },
        ResolveAlias: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateLaunchTemplateVersionResult": {
      type: "structure",
      members: {
        LaunchTemplateVersion: {
          target: "com.amazonaws.ec2#LaunchTemplateVersion",
          locationName: "launchTemplateVersion",
        },
        Warning: {
          target: "com.amazonaws.ec2#ValidationWarning",
          locationName: "warning",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayRouteResult": {
      type: "structure",
      members: {
        Route: {
          target: "com.amazonaws.ec2#LocalGatewayRoute",
          locationName: "route",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayRouteTableRequest": {
      type: "structure",
      members: {
        LocalGatewayId: {
          target: "com.amazonaws.ec2#LocalGatewayId",
        },
        Mode: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableMode",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayRouteTableResult": {
      type: "structure",
      members: {
        LocalGatewayRouteTable: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTable",
          locationName: "localGatewayRouteTable",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableId: {
            target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
          },
          LocalGatewayVirtualInterfaceGroupId: {
            target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
          },
          TagSpecifications: {
            target: "com.amazonaws.ec2#TagSpecificationList",
            locationName: "TagSpecification",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableVirtualInterfaceGroupAssociation: {
            target:
              "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            locationName:
              "localGatewayRouteTableVirtualInterfaceGroupAssociation",
          },
        },
      },
    "com.amazonaws.ec2#CreateLocalGatewayRouteTableVpcAssociationRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayRouteTableVpcAssociationResult": {
      type: "structure",
      members: {
        LocalGatewayRouteTableVpcAssociation: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociation",
          locationName: "localGatewayRouteTableVpcAssociation",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceRequest": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
        },
        OutpostLagId: {
          target: "com.amazonaws.ec2#OutpostLagId",
        },
        Vlan: {
          target: "com.amazonaws.ec2#Integer",
        },
        LocalAddress: {
          target: "com.amazonaws.ec2#String",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
        },
        PeerBgpAsn: {
          target: "com.amazonaws.ec2#Integer",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PeerBgpAsnExtended: {
          target: "com.amazonaws.ec2#Long",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceResult": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterface: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterface",
          locationName: "localGatewayVirtualInterface",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceGroupRequest": {
      type: "structure",
      members: {
        LocalGatewayId: {
          target: "com.amazonaws.ec2#LocalGatewayId",
        },
        LocalBgpAsn: {
          target: "com.amazonaws.ec2#Integer",
        },
        LocalBgpAsnExtended: {
          target: "com.amazonaws.ec2#Long",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateLocalGatewayVirtualInterfaceGroupResult": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroup: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroup",
          locationName: "localGatewayVirtualInterfaceGroup",
        },
      },
    },
    "com.amazonaws.ec2#CreateMacSystemIntegrityProtectionModificationTaskRequest":
      {
        type: "structure",
        members: {
          ClientToken: {
            target: "com.amazonaws.ec2#String",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
          InstanceId: {
            target: "com.amazonaws.ec2#InstanceId",
          },
          MacCredentials: {
            target: "com.amazonaws.ec2#SensitiveMacCredentials",
          },
          MacSystemIntegrityProtectionConfiguration: {
            target:
              "com.amazonaws.ec2#MacSystemIntegrityProtectionConfigurationRequest",
          },
          MacSystemIntegrityProtectionStatus: {
            target:
              "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          },
          TagSpecifications: {
            target: "com.amazonaws.ec2#TagSpecificationList",
            locationName: "TagSpecification",
          },
        },
      },
    "com.amazonaws.ec2#CreateMacSystemIntegrityProtectionModificationTaskResult":
      {
        type: "structure",
        members: {
          MacModificationTask: {
            target: "com.amazonaws.ec2#MacModificationTask",
            locationName: "macModificationTask",
          },
        },
      },
    "com.amazonaws.ec2#CreateManagedPrefixListRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrefixListName: {
          target: "com.amazonaws.ec2#String",
        },
        Entries: {
          target: "com.amazonaws.ec2#AddPrefixListEntries",
          locationName: "Entry",
        },
        MaxEntries: {
          target: "com.amazonaws.ec2#Integer",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        AddressFamily: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateManagedPrefixListResult": {
      type: "structure",
      members: {
        PrefixList: {
          target: "com.amazonaws.ec2#ManagedPrefixList",
          locationName: "prefixList",
        },
      },
    },
    "com.amazonaws.ec2#CreateNatGatewayRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ConnectivityType: {
          target: "com.amazonaws.ec2#ConnectivityType",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        SecondaryAllocationIds: {
          target: "com.amazonaws.ec2#AllocationIdList",
          locationName: "SecondaryAllocationId",
        },
        SecondaryPrivateIpAddresses: {
          target: "com.amazonaws.ec2#IpList",
          locationName: "SecondaryPrivateIpAddress",
        },
        SecondaryPrivateIpAddressCount: {
          target: "com.amazonaws.ec2#PrivateIpAddressCount",
        },
      },
    },
    "com.amazonaws.ec2#CreateNatGatewayResult": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        NatGateway: {
          target: "com.amazonaws.ec2#NatGateway",
          locationName: "natGateway",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkAclRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkAclResult": {
      type: "structure",
      members: {
        NetworkAcl: {
          target: "com.amazonaws.ec2#NetworkAcl",
          locationName: "networkAcl",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkAclEntryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#NetworkAclId",
          locationName: "networkAclId",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ruleNumber",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#RuleAction",
          locationName: "ruleAction",
        },
        Egress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "egress",
        },
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
        IcmpTypeCode: {
          target: "com.amazonaws.ec2#IcmpTypeCode",
          locationName: "Icmp",
        },
        PortRange: {
          target: "com.amazonaws.ec2#PortRange",
          locationName: "portRange",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInsightsAccessScopeRequest": {
      type: "structure",
      members: {
        MatchPaths: {
          target: "com.amazonaws.ec2#AccessScopePathListRequest",
          locationName: "MatchPath",
        },
        ExcludePaths: {
          target: "com.amazonaws.ec2#AccessScopePathListRequest",
          locationName: "ExcludePath",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInsightsAccessScopeResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScope: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScope",
          locationName: "networkInsightsAccessScope",
        },
        NetworkInsightsAccessScopeContent: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeContent",
          locationName: "networkInsightsAccessScopeContent",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInsightsPathRequest": {
      type: "structure",
      members: {
        SourceIp: {
          target: "com.amazonaws.ec2#IpAddress",
        },
        DestinationIp: {
          target: "com.amazonaws.ec2#IpAddress",
        },
        Source: {
          target: "com.amazonaws.ec2#NetworkInsightsResourceId",
        },
        Destination: {
          target: "com.amazonaws.ec2#NetworkInsightsResourceId",
        },
        Protocol: {
          target: "com.amazonaws.ec2#Protocol",
        },
        DestinationPort: {
          target: "com.amazonaws.ec2#Port",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        FilterAtSource: {
          target: "com.amazonaws.ec2#PathRequestFilter",
        },
        FilterAtDestination: {
          target: "com.amazonaws.ec2#PathRequestFilter",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInsightsPathResult": {
      type: "structure",
      members: {
        NetworkInsightsPath: {
          target: "com.amazonaws.ec2#NetworkInsightsPath",
          locationName: "networkInsightsPath",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInterfaceRequest": {
      type: "structure",
      members: {
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#Ipv4PrefixList",
          locationName: "Ipv4Prefix",
        },
        Ipv4PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#Ipv6PrefixList",
          locationName: "Ipv6Prefix",
        },
        Ipv6PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        InterfaceType: {
          target: "com.amazonaws.ec2#NetworkInterfaceCreationType",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        EnablePrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ConnectionTrackingSpecification: {
          target: "com.amazonaws.ec2#ConnectionTrackingSpecificationRequest",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorRequest",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        Groups: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringList",
          locationName: "SecurityGroupId",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#PrivateIpAddressSpecificationList",
          locationName: "privateIpAddresses",
        },
        SecondaryPrivateIpAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "secondaryPrivateIpAddressCount",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#InstanceIpv6AddressList",
          locationName: "ipv6Addresses",
        },
        Ipv6AddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ipv6AddressCount",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInterfaceResult": {
      type: "structure",
      members: {
        NetworkInterface: {
          target: "com.amazonaws.ec2#NetworkInterface",
          locationName: "networkInterface",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInterfacePermissionRequest": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        AwsAccountId: {
          target: "com.amazonaws.ec2#String",
        },
        AwsService: {
          target: "com.amazonaws.ec2#String",
        },
        Permission: {
          target: "com.amazonaws.ec2#InterfacePermissionType",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateNetworkInterfacePermissionResult": {
      type: "structure",
      members: {
        InterfacePermission: {
          target: "com.amazonaws.ec2#NetworkInterfacePermission",
          locationName: "interfacePermission",
        },
      },
    },
    "com.amazonaws.ec2#CreatePlacementGroupRequest": {
      type: "structure",
      members: {
        PartitionCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        SpreadLevel: {
          target: "com.amazonaws.ec2#SpreadLevel",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        Strategy: {
          target: "com.amazonaws.ec2#PlacementStrategy",
          locationName: "strategy",
        },
      },
    },
    "com.amazonaws.ec2#CreatePlacementGroupResult": {
      type: "structure",
      members: {
        PlacementGroup: {
          target: "com.amazonaws.ec2#PlacementGroup",
          locationName: "placementGroup",
        },
      },
    },
    "com.amazonaws.ec2#CreatePublicIpv4PoolRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreatePublicIpv4PoolResult": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
          locationName: "poolId",
        },
      },
    },
    "com.amazonaws.ec2#CreateReplaceRootVolumeTaskRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DeleteReplacedRootVolume: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VolumeInitializationRate: {
          target: "com.amazonaws.ec2#Long",
        },
      },
    },
    "com.amazonaws.ec2#CreateReplaceRootVolumeTaskResult": {
      type: "structure",
      members: {
        ReplaceRootVolumeTask: {
          target: "com.amazonaws.ec2#ReplaceRootVolumeTask",
          locationName: "replaceRootVolumeTask",
        },
      },
    },
    "com.amazonaws.ec2#CreateReservedInstancesListingRequest": {
      type: "structure",
      members: {
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#ReservationId",
          locationName: "reservedInstancesId",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        PriceSchedules: {
          target: "com.amazonaws.ec2#PriceScheduleSpecificationList",
          locationName: "priceSchedules",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateReservedInstancesListingResult": {
      type: "structure",
      members: {
        ReservedInstancesListings: {
          target: "com.amazonaws.ec2#ReservedInstancesListingList",
          locationName: "reservedInstancesListingsSet",
        },
      },
    },
    "com.amazonaws.ec2#CreateRestoreImageTaskRequest": {
      type: "structure",
      members: {
        Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        ObjectKey: {
          target: "com.amazonaws.ec2#String",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateRestoreImageTaskResult": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteRequest": {
      type: "structure",
      members: {
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#VpcEndpointId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#LocalGatewayId",
        },
        CarrierGatewayId: {
          target: "com.amazonaws.ec2#CarrierGatewayId",
        },
        CoreNetworkArn: {
          target: "com.amazonaws.ec2#CoreNetworkArn",
        },
        OdbNetworkArn: {
          target: "com.amazonaws.ec2#OdbNetworkArn",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        GatewayId: {
          target: "com.amazonaws.ec2#RouteGatewayId",
          locationName: "gatewayId",
        },
        DestinationIpv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationIpv6CidrBlock",
        },
        EgressOnlyInternetGatewayId: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGatewayId",
          locationName: "egressOnlyInternetGatewayId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionId",
          locationName: "vpcPeeringConnectionId",
        },
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "natGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteServerRequest": {
      type: "structure",
      members: {
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PersistRoutes: {
          target: "com.amazonaws.ec2#RouteServerPersistRoutesAction",
        },
        PersistRoutesDuration: {
          target: "com.amazonaws.ec2#BoxedLong",
        },
        SnsNotificationsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteServerResult": {
      type: "structure",
      members: {
        RouteServer: {
          target: "com.amazonaws.ec2#RouteServer",
          locationName: "routeServer",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteServerEndpointRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteServerEndpointResult": {
      type: "structure",
      members: {
        RouteServerEndpoint: {
          target: "com.amazonaws.ec2#RouteServerEndpoint",
          locationName: "routeServerEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteServerPeerRequest": {
      type: "structure",
      members: {
        RouteServerEndpointId: {
          target: "com.amazonaws.ec2#RouteServerEndpointId",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
        },
        BgpOptions: {
          target: "com.amazonaws.ec2#RouteServerBgpOptionsRequest",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteServerPeerResult": {
      type: "structure",
      members: {
        RouteServerPeer: {
          target: "com.amazonaws.ec2#RouteServerPeer",
          locationName: "routeServerPeer",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteTableRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#CreateRouteTableResult": {
      type: "structure",
      members: {
        RouteTable: {
          target: "com.amazonaws.ec2#RouteTable",
          locationName: "routeTable",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateSecurityGroupRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "GroupDescription",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateSecurityGroupResult": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SecurityGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "securityGroupArn",
        },
      },
    },
    "com.amazonaws.ec2#CreateSnapshotRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        Location: {
          target: "com.amazonaws.ec2#SnapshotLocationEnum",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#Snapshot": {
      type: "structure",
      members: {
        OwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerAlias",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        StorageTier: {
          target: "com.amazonaws.ec2#StorageTier",
          locationName: "storageTier",
        },
        RestoreExpiryTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "restoreExpiryTime",
        },
        SseType: {
          target: "com.amazonaws.ec2#SSEType",
          locationName: "sseType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        TransferType: {
          target: "com.amazonaws.ec2#TransferType",
          locationName: "transferType",
        },
        CompletionDurationMinutes: {
          target: "com.amazonaws.ec2#SnapshotCompletionDurationMinutesResponse",
          locationName: "completionDurationMinutes",
        },
        CompletionTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "completionTime",
        },
        FullSnapshotSizeInBytes: {
          target: "com.amazonaws.ec2#Long",
          locationName: "fullSnapshotSizeInBytes",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        State: {
          target: "com.amazonaws.ec2#SnapshotState",
          locationName: "status",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeSize",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
        DataEncryptionKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "dataEncryptionKeyId",
        },
      },
    },
    "com.amazonaws.ec2#CreateSnapshotsRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceSpecification: {
          target: "com.amazonaws.ec2#InstanceSpecification",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CopyTagsFromSource: {
          target: "com.amazonaws.ec2#CopyTagsFromSource",
        },
        Location: {
          target: "com.amazonaws.ec2#SnapshotLocationEnum",
        },
      },
    },
    "com.amazonaws.ec2#CreateSnapshotsResult": {
      type: "structure",
      members: {
        Snapshots: {
          target: "com.amazonaws.ec2#SnapshotSet",
          locationName: "snapshotSet",
        },
      },
    },
    "com.amazonaws.ec2#CreateSpotDatafeedSubscriptionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "bucket",
        },
        Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefix",
        },
      },
    },
    "com.amazonaws.ec2#CreateSpotDatafeedSubscriptionResult": {
      type: "structure",
      members: {
        SpotDatafeedSubscription: {
          target: "com.amazonaws.ec2#SpotDatafeedSubscription",
          locationName: "spotDatafeedSubscription",
        },
      },
    },
    "com.amazonaws.ec2#CreateStoreImageTaskRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        S3ObjectTags: {
          target: "com.amazonaws.ec2#S3ObjectTagList",
          locationName: "S3ObjectTag",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateStoreImageTaskResult": {
      type: "structure",
      members: {
        ObjectKey: {
          target: "com.amazonaws.ec2#String",
          locationName: "objectKey",
        },
      },
    },
    "com.amazonaws.ec2#CreateSubnetRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
        },
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        Ipv6Native: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Ipv4IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv4NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        Ipv6IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv6NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateSubnetResult": {
      type: "structure",
      members: {
        Subnet: {
          target: "com.amazonaws.ec2#Subnet",
          locationName: "subnet",
        },
      },
    },
    "com.amazonaws.ec2#CreateSubnetCidrReservationRequest": {
      type: "structure",
      members: {
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        ReservationType: {
          target: "com.amazonaws.ec2#SubnetCidrReservationType",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateSubnetCidrReservationResult": {
      type: "structure",
      members: {
        SubnetCidrReservation: {
          target: "com.amazonaws.ec2#SubnetCidrReservation",
          locationName: "subnetCidrReservation",
        },
      },
    },
    "com.amazonaws.ec2#CreateTagsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Resources: {
          target: "com.amazonaws.ec2#ResourceIdList",
          locationName: "ResourceId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "Tag",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorFilterRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorFilterResult": {
      type: "structure",
      members: {
        TrafficMirrorFilter: {
          target: "com.amazonaws.ec2#TrafficMirrorFilter",
          locationName: "trafficMirrorFilter",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorFilterRuleRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        },
        TrafficDirection: {
          target: "com.amazonaws.ec2#TrafficDirection",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#TrafficMirrorRuleAction",
        },
        DestinationPortRange: {
          target: "com.amazonaws.ec2#TrafficMirrorPortRangeRequest",
        },
        SourcePortRange: {
          target: "com.amazonaws.ec2#TrafficMirrorPortRangeRequest",
        },
        Protocol: {
          target: "com.amazonaws.ec2#Integer",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        SourceCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorFilterRuleResult": {
      type: "structure",
      members: {
        TrafficMirrorFilterRule: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRule",
          locationName: "trafficMirrorFilterRule",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorSessionRequest": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        TrafficMirrorTargetId: {
          target: "com.amazonaws.ec2#TrafficMirrorTargetId",
        },
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        },
        PacketLength: {
          target: "com.amazonaws.ec2#Integer",
        },
        SessionNumber: {
          target: "com.amazonaws.ec2#Integer",
        },
        VirtualNetworkId: {
          target: "com.amazonaws.ec2#Integer",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorSessionResult": {
      type: "structure",
      members: {
        TrafficMirrorSession: {
          target: "com.amazonaws.ec2#TrafficMirrorSession",
          locationName: "trafficMirrorSession",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorTargetRequest": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        NetworkLoadBalancerArn: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        GatewayLoadBalancerEndpointId: {
          target: "com.amazonaws.ec2#VpcEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#CreateTrafficMirrorTargetResult": {
      type: "structure",
      members: {
        TrafficMirrorTarget: {
          target: "com.amazonaws.ec2#TrafficMirrorTarget",
          locationName: "trafficMirrorTarget",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Options: {
          target: "com.amazonaws.ec2#TransitGatewayRequestOptions",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayResult": {
      type: "structure",
      members: {
        TransitGateway: {
          target: "com.amazonaws.ec2#TransitGateway",
          locationName: "transitGateway",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayConnectRequest": {
      type: "structure",
      members: {
        TransportTransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        Options: {
          target: "com.amazonaws.ec2#CreateTransitGatewayConnectRequestOptions",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayConnectResult": {
      type: "structure",
      members: {
        TransitGatewayConnect: {
          target: "com.amazonaws.ec2#TransitGatewayConnect",
          locationName: "transitGatewayConnect",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayConnectPeerRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        TransitGatewayAddress: {
          target: "com.amazonaws.ec2#String",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
        },
        BgpOptions: {
          target: "com.amazonaws.ec2#TransitGatewayConnectRequestBgpOptions",
        },
        InsideCidrBlocks: {
          target: "com.amazonaws.ec2#InsideCidrBlocksStringList",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayConnectPeerResult": {
      type: "structure",
      members: {
        TransitGatewayConnectPeer: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeer",
          locationName: "transitGatewayConnectPeer",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayMulticastDomainRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        Options: {
          target:
            "com.amazonaws.ec2#CreateTransitGatewayMulticastDomainRequestOptions",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayMulticastDomainResult": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomain: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomain",
          locationName: "transitGatewayMulticastDomain",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayPeeringAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        PeerTransitGatewayId: {
          target: "com.amazonaws.ec2#TransitAssociationGatewayId",
        },
        PeerAccountId: {
          target: "com.amazonaws.ec2#String",
        },
        PeerRegion: {
          target: "com.amazonaws.ec2#String",
        },
        Options: {
          target:
            "com.amazonaws.ec2#CreateTransitGatewayPeeringAttachmentRequestOptions",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayPeeringAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayPeeringAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayPeeringAttachment",
          locationName: "transitGatewayPeeringAttachment",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayPolicyTableRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayPolicyTableResult": {
      type: "structure",
      members: {
        TransitGatewayPolicyTable: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTable",
          locationName: "transitGatewayPolicyTable",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayPrefixListReferenceRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        Blackhole: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayPrefixListReferenceResult": {
      type: "structure",
      members: {
        TransitGatewayPrefixListReference: {
          target: "com.amazonaws.ec2#TransitGatewayPrefixListReference",
          locationName: "transitGatewayPrefixListReference",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        Blackhole: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRouteResult": {
      type: "structure",
      members: {
        Route: {
          target: "com.amazonaws.ec2#TransitGatewayRoute",
          locationName: "route",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRouteTableRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRouteTableResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTable: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTable",
          locationName: "transitGatewayRouteTable",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRouteTableAnnouncementRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        PeeringAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayRouteTableAnnouncementResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTableAnnouncement: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncement",
          locationName: "transitGatewayRouteTableAnnouncement",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayVpcAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#TransitGatewaySubnetIdList",
        },
        Options: {
          target:
            "com.amazonaws.ec2#CreateTransitGatewayVpcAttachmentRequestOptions",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayVpcAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayVpcAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachment",
          locationName: "transitGatewayVpcAttachment",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointRequest": {
      type: "structure",
      members: {
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        EndpointType: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointType",
        },
        AttachmentType: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointAttachmentType",
        },
        DomainCertificateArn: {
          target: "com.amazonaws.ec2#CertificateArn",
        },
        ApplicationDomain: {
          target: "com.amazonaws.ec2#String",
        },
        EndpointDomainPrefix: {
          target: "com.amazonaws.ec2#String",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdList",
          locationName: "SecurityGroupId",
        },
        LoadBalancerOptions: {
          target:
            "com.amazonaws.ec2#CreateVerifiedAccessEndpointLoadBalancerOptions",
        },
        NetworkInterfaceOptions: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointEniOptions",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest",
        },
        RdsOptions: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointRdsOptions",
        },
        CidrOptions: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointCidrOptions",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointResult": {
      type: "structure",
      members: {
        VerifiedAccessEndpoint: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpoint",
          locationName: "verifiedAccessEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessGroupRequest": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessGroupResult": {
      type: "structure",
      members: {
        VerifiedAccessGroup: {
          target: "com.amazonaws.ec2#VerifiedAccessGroup",
          locationName: "verifiedAccessGroup",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessInstanceRequest": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FIPSEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CidrEndpointsCustomSubDomain: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessInstanceResult": {
      type: "structure",
      members: {
        VerifiedAccessInstance: {
          target: "com.amazonaws.ec2#VerifiedAccessInstance",
          locationName: "verifiedAccessInstance",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderRequest": {
      type: "structure",
      members: {
        TrustProviderType: {
          target: "com.amazonaws.ec2#TrustProviderType",
        },
        UserTrustProviderType: {
          target: "com.amazonaws.ec2#UserTrustProviderType",
        },
        DeviceTrustProviderType: {
          target: "com.amazonaws.ec2#DeviceTrustProviderType",
        },
        OidcOptions: {
          target:
            "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderOidcOptions",
        },
        DeviceOptions: {
          target:
            "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderDeviceOptions",
        },
        PolicyReferenceName: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest",
        },
        NativeApplicationOidcOptions: {
          target:
            "com.amazonaws.ec2#CreateVerifiedAccessNativeApplicationOidcOptions",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderResult": {
      type: "structure",
      members: {
        VerifiedAccessTrustProvider: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProvider",
          locationName: "verifiedAccessTrustProvider",
        },
      },
    },
    "com.amazonaws.ec2#CreateVolumeRequest": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
        },
        Size: {
          target: "com.amazonaws.ec2#Integer",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        MultiAttachEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        VolumeInitializationRate: {
          target: "com.amazonaws.ec2#Integer",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorRequest",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#Volume": {
      type: "structure",
      members: {
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "iops",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
          locationName: "volumeType",
        },
        FastRestored: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "fastRestored",
        },
        MultiAttachEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "multiAttachEnabled",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "throughput",
        },
        SseType: {
          target: "com.amazonaws.ec2#SSEType",
          locationName: "sseType",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
        VolumeInitializationRate: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeInitializationRate",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        Size: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "size",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        State: {
          target: "com.amazonaws.ec2#VolumeState",
          locationName: "status",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        Attachments: {
          target: "com.amazonaws.ec2#VolumeAttachmentList",
          locationName: "attachmentSet",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcRequest": {
      type: "structure",
      members: {
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv6Pool: {
          target: "com.amazonaws.ec2#Ipv6PoolEc2Id",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv4IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv4NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        Ipv6IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Ipv6NetmaskLength: {
          target: "com.amazonaws.ec2#NetmaskLength",
        },
        Ipv6CidrBlockNetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceTenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "instanceTenancy",
        },
        AmazonProvidedIpv6CidrBlock: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "amazonProvidedIpv6CidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcResult": {
      type: "structure",
      members: {
        Vpc: {
          target: "com.amazonaws.ec2#Vpc",
          locationName: "vpc",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcBlockPublicAccessExclusionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        InternetGatewayExclusionMode: {
          target: "com.amazonaws.ec2#InternetGatewayExclusionMode",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcBlockPublicAccessExclusionResult": {
      type: "structure",
      members: {
        VpcBlockPublicAccessExclusion: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusion",
          locationName: "vpcBlockPublicAccessExclusion",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcEndpointRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VpcEndpointType: {
          target: "com.amazonaws.ec2#VpcEndpointType",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        ServiceName: {
          target: "com.amazonaws.ec2#String",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
        },
        RouteTableIds: {
          target: "com.amazonaws.ec2#VpcEndpointRouteTableIdList",
          locationName: "RouteTableId",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#VpcEndpointSubnetIdList",
          locationName: "SubnetId",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#VpcEndpointSecurityGroupIdList",
          locationName: "SecurityGroupId",
        },
        IpAddressType: {
          target: "com.amazonaws.ec2#IpAddressType",
        },
        DnsOptions: {
          target: "com.amazonaws.ec2#DnsOptionsSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        PrivateDnsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        SubnetConfigurations: {
          target: "com.amazonaws.ec2#SubnetConfigurationsList",
          locationName: "SubnetConfiguration",
        },
        ServiceNetworkArn: {
          target: "com.amazonaws.ec2#ServiceNetworkArn",
        },
        ResourceConfigurationArn: {
          target: "com.amazonaws.ec2#ResourceConfigurationArn",
        },
        ServiceRegion: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcEndpointResult": {
      type: "structure",
      members: {
        VpcEndpoint: {
          target: "com.amazonaws.ec2#VpcEndpoint",
          locationName: "vpcEndpoint",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcEndpointConnectionNotificationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#VpcEndpointId",
        },
        ConnectionNotificationArn: {
          target: "com.amazonaws.ec2#String",
        },
        ConnectionEvents: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcEndpointConnectionNotificationResult": {
      type: "structure",
      members: {
        ConnectionNotification: {
          target: "com.amazonaws.ec2#ConnectionNotification",
          locationName: "connectionNotification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcEndpointServiceConfigurationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AcceptanceRequired: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "NetworkLoadBalancerArn",
        },
        GatewayLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "GatewayLoadBalancerArn",
        },
        SupportedIpAddressTypes: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "SupportedIpAddressType",
        },
        SupportedRegions: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "SupportedRegion",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcEndpointServiceConfigurationResult": {
      type: "structure",
      members: {
        ServiceConfiguration: {
          target: "com.amazonaws.ec2#ServiceConfiguration",
          locationName: "serviceConfiguration",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcPeeringConnectionRequest": {
      type: "structure",
      members: {
        PeerRegion: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        PeerVpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerVpcId",
        },
        PeerOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerOwnerId",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpcPeeringConnectionResult": {
      type: "structure",
      members: {
        VpcPeeringConnection: {
          target: "com.amazonaws.ec2#VpcPeeringConnection",
          locationName: "vpcPeeringConnection",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpnConnectionRequest": {
      type: "structure",
      members: {
        CustomerGatewayId: {
          target: "com.amazonaws.ec2#CustomerGatewayId",
        },
        Type: {
          target: "com.amazonaws.ec2#String",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        PreSharedKeyStorage: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Options: {
          target: "com.amazonaws.ec2#VpnConnectionOptionsSpecification",
          locationName: "options",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpnConnectionResult": {
      type: "structure",
      members: {
        VpnConnection: {
          target: "com.amazonaws.ec2#VpnConnection",
          locationName: "vpnConnection",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpnConnectionRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpnGatewayRequest": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
        },
        Type: {
          target: "com.amazonaws.ec2#GatewayType",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#CreateVpnGatewayResult": {
      type: "structure",
      members: {
        VpnGateway: {
          target: "com.amazonaws.ec2#VpnGateway",
          locationName: "vpnGateway",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCarrierGatewayRequest": {
      type: "structure",
      members: {
        CarrierGatewayId: {
          target: "com.amazonaws.ec2#CarrierGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCarrierGatewayResult": {
      type: "structure",
      members: {
        CarrierGateway: {
          target: "com.amazonaws.ec2#CarrierGateway",
          locationName: "carrierGateway",
        },
      },
    },
    "com.amazonaws.ec2#DeleteClientVpnEndpointRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteClientVpnEndpointResult": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#ClientVpnEndpointStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#DeleteClientVpnRouteRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        TargetVpcSubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteClientVpnRouteResult": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#ClientVpnRouteStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCoipCidrRequest": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        CoipPoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolCoipId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCoipCidrResult": {
      type: "structure",
      members: {
        CoipCidr: {
          target: "com.amazonaws.ec2#CoipCidr",
          locationName: "coipCidr",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCoipPoolRequest": {
      type: "structure",
      members: {
        CoipPoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolCoipId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCoipPoolResult": {
      type: "structure",
      members: {
        CoipPool: {
          target: "com.amazonaws.ec2#CoipPool",
          locationName: "coipPool",
        },
      },
    },
    "com.amazonaws.ec2#DeleteCustomerGatewayRequest": {
      type: "structure",
      members: {
        CustomerGatewayId: {
          target: "com.amazonaws.ec2#CustomerGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteDhcpOptionsRequest": {
      type: "structure",
      members: {
        DhcpOptionsId: {
          target: "com.amazonaws.ec2#DhcpOptionsId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteEgressOnlyInternetGatewayRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EgressOnlyInternetGatewayId: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteEgressOnlyInternetGatewayResult": {
      type: "structure",
      members: {
        ReturnCode: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "returnCode",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFleetsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FleetIds: {
          target: "com.amazonaws.ec2#FleetIdSet",
          locationName: "FleetId",
        },
        TerminateInstances: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFleetsResult": {
      type: "structure",
      members: {
        SuccessfulFleetDeletions: {
          target: "com.amazonaws.ec2#DeleteFleetSuccessSet",
          locationName: "successfulFleetDeletionSet",
        },
        UnsuccessfulFleetDeletions: {
          target: "com.amazonaws.ec2#DeleteFleetErrorSet",
          locationName: "unsuccessfulFleetDeletionSet",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFlowLogsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FlowLogIds: {
          target: "com.amazonaws.ec2#FlowLogIdList",
          locationName: "FlowLogId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFlowLogsResult": {
      type: "structure",
      members: {
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFpgaImageRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FpgaImageId: {
          target: "com.amazonaws.ec2#FpgaImageId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFpgaImageResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DeleteInstanceConnectEndpointRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceConnectEndpointId: {
          target: "com.amazonaws.ec2#InstanceConnectEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteInstanceConnectEndpointResult": {
      type: "structure",
      members: {
        InstanceConnectEndpoint: {
          target: "com.amazonaws.ec2#Ec2InstanceConnectEndpoint",
          locationName: "instanceConnectEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#DeleteInstanceEventWindowRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ForceDelete: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceEventWindowId: {
          target: "com.amazonaws.ec2#InstanceEventWindowId",
          locationName: "InstanceEventWindowId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteInstanceEventWindowResult": {
      type: "structure",
      members: {
        InstanceEventWindowState: {
          target: "com.amazonaws.ec2#InstanceEventWindowStateChange",
          locationName: "instanceEventWindowState",
        },
      },
    },
    "com.amazonaws.ec2#DeleteInternetGatewayRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InternetGatewayId: {
          target: "com.amazonaws.ec2#InternetGatewayId",
          locationName: "internetGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        Cascade: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamResult": {
      type: "structure",
      members: {
        Ipam: {
          target: "com.amazonaws.ec2#Ipam",
          locationName: "ipam",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamExternalResourceVerificationTokenRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamExternalResourceVerificationTokenId: {
          target: "com.amazonaws.ec2#IpamExternalResourceVerificationTokenId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamExternalResourceVerificationTokenResult": {
      type: "structure",
      members: {
        IpamExternalResourceVerificationToken: {
          target: "com.amazonaws.ec2#IpamExternalResourceVerificationToken",
          locationName: "ipamExternalResourceVerificationToken",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamPoolRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Cascade: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamPoolResult": {
      type: "structure",
      members: {
        IpamPool: {
          target: "com.amazonaws.ec2#IpamPool",
          locationName: "ipamPool",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamResourceDiscoveryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamResourceDiscoveryResult": {
      type: "structure",
      members: {
        IpamResourceDiscovery: {
          target: "com.amazonaws.ec2#IpamResourceDiscovery",
          locationName: "ipamResourceDiscovery",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamScopeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteIpamScopeResult": {
      type: "structure",
      members: {
        IpamScope: {
          target: "com.amazonaws.ec2#IpamScope",
          locationName: "ipamScope",
        },
      },
    },
    "com.amazonaws.ec2#DeleteKeyPairRequest": {
      type: "structure",
      members: {
        KeyName: {
          target: "com.amazonaws.ec2#KeyPairNameWithResolver",
        },
        KeyPairId: {
          target: "com.amazonaws.ec2#KeyPairId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteKeyPairResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        KeyPairId: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyPairId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateResult": {
      type: "structure",
      members: {
        LaunchTemplate: {
          target: "com.amazonaws.ec2#LaunchTemplate",
          locationName: "launchTemplate",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateVersionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
        Versions: {
          target: "com.amazonaws.ec2#VersionStringList",
          locationName: "LaunchTemplateVersion",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResult": {
      type: "structure",
      members: {
        SuccessfullyDeletedLaunchTemplateVersions: {
          target:
            "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseSuccessSet",
          locationName: "successfullyDeletedLaunchTemplateVersionSet",
        },
        UnsuccessfullyDeletedLaunchTemplateVersions: {
          target:
            "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorSet",
          locationName: "unsuccessfullyDeletedLaunchTemplateVersionSet",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteResult": {
      type: "structure",
      members: {
        Route: {
          target: "com.amazonaws.ec2#LocalGatewayRoute",
          locationName: "route",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteTableRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteTableResult": {
      type: "structure",
      members: {
        LocalGatewayRouteTable: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTable",
          locationName: "localGatewayRouteTable",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableVirtualInterfaceGroupAssociationId: {
            target:
              "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableVirtualInterfaceGroupAssociation: {
            target:
              "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            locationName:
              "localGatewayRouteTableVirtualInterfaceGroupAssociation",
          },
        },
      },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVpcAssociationRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableVpcAssociationId: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayRouteTableVpcAssociationResult": {
      type: "structure",
      members: {
        LocalGatewayRouteTableVpcAssociation: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociation",
          locationName: "localGatewayRouteTableVpcAssociation",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceRequest": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceResult": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterface: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterface",
          locationName: "localGatewayVirtualInterface",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceGroupRequest": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLocalGatewayVirtualInterfaceGroupResult": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroup: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroup",
          locationName: "localGatewayVirtualInterfaceGroup",
        },
      },
    },
    "com.amazonaws.ec2#DeleteManagedPrefixListRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteManagedPrefixListResult": {
      type: "structure",
      members: {
        PrefixList: {
          target: "com.amazonaws.ec2#ManagedPrefixList",
          locationName: "prefixList",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNatGatewayRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "NatGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNatGatewayResult": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "natGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkAclRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#NetworkAclId",
          locationName: "networkAclId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkAclEntryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#NetworkAclId",
          locationName: "networkAclId",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ruleNumber",
        },
        Egress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "egress",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
          locationName: "networkInsightsAccessScopeId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeAnalysisRequest": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsAccessScopeAnalysisResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
          locationName: "networkInsightsAccessScopeAnalysisId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsAnalysisRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkInsightsAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAnalysisId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsAnalysisResult": {
      type: "structure",
      members: {
        NetworkInsightsAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAnalysisId",
          locationName: "networkInsightsAnalysisId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsPathRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkInsightsPathId: {
          target: "com.amazonaws.ec2#NetworkInsightsPathId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInsightsPathResult": {
      type: "structure",
      members: {
        NetworkInsightsPathId: {
          target: "com.amazonaws.ec2#NetworkInsightsPathId",
          locationName: "networkInsightsPathId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInterfaceRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInterfacePermissionRequest": {
      type: "structure",
      members: {
        NetworkInterfacePermissionId: {
          target: "com.amazonaws.ec2#NetworkInterfacePermissionId",
        },
        Force: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteNetworkInterfacePermissionResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DeletePlacementGroupRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
          locationName: "groupName",
        },
      },
    },
    "com.amazonaws.ec2#DeletePublicIpv4PoolRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeletePublicIpv4PoolResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "returnValue",
        },
      },
    },
    "com.amazonaws.ec2#DeleteQueuedReservedInstancesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ReservedInstancesIds: {
          target: "com.amazonaws.ec2#DeleteQueuedReservedInstancesIdList",
          locationName: "ReservedInstancesId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteQueuedReservedInstancesResult": {
      type: "structure",
      members: {
        SuccessfulQueuedPurchaseDeletions: {
          target: "com.amazonaws.ec2#SuccessfulQueuedPurchaseDeletionSet",
          locationName: "successfulQueuedPurchaseDeletionSet",
        },
        FailedQueuedPurchaseDeletions: {
          target: "com.amazonaws.ec2#FailedQueuedPurchaseDeletionSet",
          locationName: "failedQueuedPurchaseDeletionSet",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteRequest": {
      type: "structure",
      members: {
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        DestinationIpv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationIpv6CidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteServerRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteServerResult": {
      type: "structure",
      members: {
        RouteServer: {
          target: "com.amazonaws.ec2#RouteServer",
          locationName: "routeServer",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteServerEndpointRequest": {
      type: "structure",
      members: {
        RouteServerEndpointId: {
          target: "com.amazonaws.ec2#RouteServerEndpointId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteServerEndpointResult": {
      type: "structure",
      members: {
        RouteServerEndpoint: {
          target: "com.amazonaws.ec2#RouteServerEndpoint",
          locationName: "routeServerEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteServerPeerRequest": {
      type: "structure",
      members: {
        RouteServerPeerId: {
          target: "com.amazonaws.ec2#RouteServerPeerId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteServerPeerResult": {
      type: "structure",
      members: {
        RouteServerPeer: {
          target: "com.amazonaws.ec2#RouteServerPeer",
          locationName: "routeServerPeer",
        },
      },
    },
    "com.amazonaws.ec2#DeleteRouteTableRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSecurityGroupRequest": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#SecurityGroupName",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSecurityGroupResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "groupId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSnapshotRequest": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSpotDatafeedSubscriptionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSubnetRequest": {
      type: "structure",
      members: {
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSubnetCidrReservationRequest": {
      type: "structure",
      members: {
        SubnetCidrReservationId: {
          target: "com.amazonaws.ec2#SubnetCidrReservationId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteSubnetCidrReservationResult": {
      type: "structure",
      members: {
        DeletedSubnetCidrReservation: {
          target: "com.amazonaws.ec2#SubnetCidrReservation",
          locationName: "deletedSubnetCidrReservation",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTagsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Resources: {
          target: "com.amazonaws.ec2#ResourceIdList",
          locationName: "resourceId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tag",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorFilterRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorFilterResult": {
      type: "structure",
      members: {
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorFilterId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorFilterRuleRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterRuleId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleIdWithResolver",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorFilterRuleResult": {
      type: "structure",
      members: {
        TrafficMirrorFilterRuleId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorFilterRuleId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorSessionRequest": {
      type: "structure",
      members: {
        TrafficMirrorSessionId: {
          target: "com.amazonaws.ec2#TrafficMirrorSessionId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorSessionResult": {
      type: "structure",
      members: {
        TrafficMirrorSessionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorSessionId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorTargetRequest": {
      type: "structure",
      members: {
        TrafficMirrorTargetId: {
          target: "com.amazonaws.ec2#TrafficMirrorTargetId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTrafficMirrorTargetResult": {
      type: "structure",
      members: {
        TrafficMirrorTargetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorTargetId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayResult": {
      type: "structure",
      members: {
        TransitGateway: {
          target: "com.amazonaws.ec2#TransitGateway",
          locationName: "transitGateway",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayConnectRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayConnectResult": {
      type: "structure",
      members: {
        TransitGatewayConnect: {
          target: "com.amazonaws.ec2#TransitGatewayConnect",
          locationName: "transitGatewayConnect",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayConnectPeerRequest": {
      type: "structure",
      members: {
        TransitGatewayConnectPeerId: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeerId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayConnectPeerResult": {
      type: "structure",
      members: {
        TransitGatewayConnectPeer: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeer",
          locationName: "transitGatewayConnectPeer",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayMulticastDomainRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayMulticastDomainResult": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomain: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomain",
          locationName: "transitGatewayMulticastDomain",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayPeeringAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayPeeringAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayPeeringAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayPeeringAttachment",
          locationName: "transitGatewayPeeringAttachment",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayPolicyTableRequest": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayPolicyTableResult": {
      type: "structure",
      members: {
        TransitGatewayPolicyTable: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTable",
          locationName: "transitGatewayPolicyTable",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayPrefixListReferenceRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayPrefixListReferenceResult": {
      type: "structure",
      members: {
        TransitGatewayPrefixListReference: {
          target: "com.amazonaws.ec2#TransitGatewayPrefixListReference",
          locationName: "transitGatewayPrefixListReference",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRouteRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRouteResult": {
      type: "structure",
      members: {
        Route: {
          target: "com.amazonaws.ec2#TransitGatewayRoute",
          locationName: "route",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRouteTableRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRouteTableResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTable: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTable",
          locationName: "transitGatewayRouteTable",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRouteTableAnnouncementRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayRouteTableAnnouncementResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTableAnnouncement: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncement",
          locationName: "transitGatewayRouteTableAnnouncement",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayVpcAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteTransitGatewayVpcAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayVpcAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachment",
          locationName: "transitGatewayVpcAttachment",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessEndpointRequest": {
      type: "structure",
      members: {
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessEndpointResult": {
      type: "structure",
      members: {
        VerifiedAccessEndpoint: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpoint",
          locationName: "verifiedAccessEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessGroupRequest": {
      type: "structure",
      members: {
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessGroupResult": {
      type: "structure",
      members: {
        VerifiedAccessGroup: {
          target: "com.amazonaws.ec2#VerifiedAccessGroup",
          locationName: "verifiedAccessGroup",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessInstanceRequest": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessInstanceResult": {
      type: "structure",
      members: {
        VerifiedAccessInstance: {
          target: "com.amazonaws.ec2#VerifiedAccessInstance",
          locationName: "verifiedAccessInstance",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessTrustProviderRequest": {
      type: "structure",
      members: {
        VerifiedAccessTrustProviderId: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVerifiedAccessTrustProviderResult": {
      type: "structure",
      members: {
        VerifiedAccessTrustProvider: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProvider",
          locationName: "verifiedAccessTrustProvider",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVolumeRequest": {
      type: "structure",
      members: {
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcBlockPublicAccessExclusionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ExclusionId: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcBlockPublicAccessExclusionResult": {
      type: "structure",
      members: {
        VpcBlockPublicAccessExclusion: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusion",
          locationName: "vpcBlockPublicAccessExclusion",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcEndpointConnectionNotificationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ConnectionNotificationIds: {
          target: "com.amazonaws.ec2#ConnectionNotificationIdsList",
          locationName: "ConnectionNotificationId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcEndpointConnectionNotificationsResult": {
      type: "structure",
      members: {
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcEndpointServiceConfigurationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceIds: {
          target: "com.amazonaws.ec2#VpcEndpointServiceIdList",
          locationName: "ServiceId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcEndpointServiceConfigurationsResult": {
      type: "structure",
      members: {
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcEndpointsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VpcEndpointIds: {
          target: "com.amazonaws.ec2#VpcEndpointIdList",
          locationName: "VpcEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcEndpointsResult": {
      type: "structure",
      members: {
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcPeeringConnectionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionId",
          locationName: "vpcPeeringConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpcPeeringConnectionResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpnConnectionRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpnConnectionRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteVpnGatewayRequest": {
      type: "structure",
      members: {
        VpnGatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionByoipCidrRequest": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionByoipCidrResult": {
      type: "structure",
      members: {
        ByoipCidr: {
          target: "com.amazonaws.ec2#ByoipCidr",
          locationName: "byoipCidr",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionIpamByoasnRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        Asn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionIpamByoasnResult": {
      type: "structure",
      members: {
        Byoasn: {
          target: "com.amazonaws.ec2#Byoasn",
          locationName: "byoasn",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionIpamPoolCidrRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionIpamPoolCidrResult": {
      type: "structure",
      members: {
        IpamPoolCidr: {
          target: "com.amazonaws.ec2#IpamPoolCidr",
          locationName: "ipamPoolCidr",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionPublicIpv4PoolCidrRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeprovisionPublicIpv4PoolCidrResult": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
          locationName: "poolId",
        },
        DeprovisionedAddresses: {
          target: "com.amazonaws.ec2#DeprovisionedAddressSet",
          locationName: "deprovisionedAddressSet",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterImageRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DeleteAssociatedSnapshots: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterImageResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        DeleteSnapshotResults: {
          target: "com.amazonaws.ec2#DeleteSnapshotResultSet",
          locationName: "deleteSnapshotResultSet",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterInstanceEventNotificationAttributesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceTagAttribute: {
          target: "com.amazonaws.ec2#DeregisterInstanceTagAttributeRequest",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterInstanceEventNotificationAttributesResult": {
      type: "structure",
      members: {
        InstanceTagAttribute: {
          target: "com.amazonaws.ec2#InstanceTagNotificationAttribute",
          locationName: "instanceTagAttribute",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupMembersRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#TransitGatewayNetworkInterfaceIdList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupMembersResult": {
      type: "structure",
      members: {
        DeregisteredMulticastGroupMembers: {
          target:
            "com.amazonaws.ec2#TransitGatewayMulticastDeregisteredGroupMembers",
          locationName: "deregisteredMulticastGroupMembers",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupSourcesRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#TransitGatewayNetworkInterfaceIdList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DeregisterTransitGatewayMulticastGroupSourcesResult": {
      type: "structure",
      members: {
        DeregisteredMulticastGroupSources: {
          target:
            "com.amazonaws.ec2#TransitGatewayMulticastDeregisteredGroupSources",
          locationName: "deregisteredMulticastGroupSources",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAccountAttributesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        AttributeNames: {
          target: "com.amazonaws.ec2#AccountAttributeNameStringList",
          locationName: "attributeName",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAccountAttributesResult": {
      type: "structure",
      members: {
        AccountAttributes: {
          target: "com.amazonaws.ec2#AccountAttributeList",
          locationName: "accountAttributeSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressTransfersRequest": {
      type: "structure",
      members: {
        AllocationIds: {
          target: "com.amazonaws.ec2#AllocationIdList",
          locationName: "AllocationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeAddressTransfersMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressTransfersResult": {
      type: "structure",
      members: {
        AddressTransfers: {
          target: "com.amazonaws.ec2#AddressTransferList",
          locationName: "addressTransferSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressesRequest": {
      type: "structure",
      members: {
        PublicIps: {
          target: "com.amazonaws.ec2#PublicIpStringList",
          locationName: "PublicIp",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        AllocationIds: {
          target: "com.amazonaws.ec2#AllocationIdList",
          locationName: "AllocationId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressesResult": {
      type: "structure",
      members: {
        Addresses: {
          target: "com.amazonaws.ec2#AddressList",
          locationName: "addressesSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressesAttributeRequest": {
      type: "structure",
      members: {
        AllocationIds: {
          target: "com.amazonaws.ec2#AllocationIds",
          locationName: "AllocationId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#AddressAttributeName",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#AddressMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressesAttributeResult": {
      type: "structure",
      members: {
        Addresses: {
          target: "com.amazonaws.ec2#AddressSet",
          locationName: "addressSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAggregateIdFormatRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAggregateIdFormatResult": {
      type: "structure",
      members: {
        UseLongIdsAggregated: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "useLongIdsAggregated",
        },
        Statuses: {
          target: "com.amazonaws.ec2#IdFormatList",
          locationName: "statusSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAvailabilityZonesRequest": {
      type: "structure",
      members: {
        ZoneNames: {
          target: "com.amazonaws.ec2#ZoneNameStringList",
          locationName: "ZoneName",
        },
        ZoneIds: {
          target: "com.amazonaws.ec2#ZoneIdStringList",
          locationName: "ZoneId",
        },
        AllAvailabilityZones: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAvailabilityZonesResult": {
      type: "structure",
      members: {
        AvailabilityZones: {
          target: "com.amazonaws.ec2#AvailabilityZoneList",
          locationName: "availabilityZoneInfo",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAwsNetworkPerformanceMetricSubscriptionsRequest":
      {
        type: "structure",
        members: {
          MaxResults: {
            target: "com.amazonaws.ec2#MaxResultsParam",
          },
          NextToken: {
            target: "com.amazonaws.ec2#String",
          },
          Filters: {
            target: "com.amazonaws.ec2#FilterList",
            locationName: "Filter",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#DescribeAwsNetworkPerformanceMetricSubscriptionsResult":
      {
        type: "structure",
        members: {
          NextToken: {
            target: "com.amazonaws.ec2#String",
            locationName: "nextToken",
          },
          Subscriptions: {
            target: "com.amazonaws.ec2#SubscriptionList",
            locationName: "subscriptionSet",
          },
        },
      },
    "com.amazonaws.ec2#DescribeBundleTasksRequest": {
      type: "structure",
      members: {
        BundleIds: {
          target: "com.amazonaws.ec2#BundleIdStringList",
          locationName: "BundleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeBundleTasksResult": {
      type: "structure",
      members: {
        BundleTasks: {
          target: "com.amazonaws.ec2#BundleTaskList",
          locationName: "bundleInstanceTasksSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeByoipCidrsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeByoipCidrsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeByoipCidrsResult": {
      type: "structure",
      members: {
        ByoipCidrs: {
          target: "com.amazonaws.ec2#ByoipCidrSet",
          locationName: "byoipCidrSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockExtensionHistoryRequest": {
      type: "structure",
      members: {
        CapacityReservationIds: {
          target: "com.amazonaws.ec2#CapacityReservationIdSet",
          locationName: "CapacityReservationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeFutureCapacityMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockExtensionHistoryResult": {
      type: "structure",
      members: {
        CapacityBlockExtensions: {
          target: "com.amazonaws.ec2#CapacityBlockExtensionSet",
          locationName: "capacityBlockExtensionSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockExtensionOfferingsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CapacityBlockExtensionDurationHours: {
          target: "com.amazonaws.ec2#Integer",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeCapacityBlockExtensionOfferingsMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockExtensionOfferingsResult": {
      type: "structure",
      members: {
        CapacityBlockExtensionOfferings: {
          target: "com.amazonaws.ec2#CapacityBlockExtensionOfferingSet",
          locationName: "capacityBlockExtensionOfferingSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockOfferingsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        StartDateRange: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        EndDateRange: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        CapacityDurationHours: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeCapacityBlockOfferingsMaxResults",
        },
        UltraserverType: {
          target: "com.amazonaws.ec2#String",
        },
        UltraserverCount: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockOfferingsResult": {
      type: "structure",
      members: {
        CapacityBlockOfferings: {
          target: "com.amazonaws.ec2#CapacityBlockOfferingSet",
          locationName: "capacityBlockOfferingSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockStatusRequest": {
      type: "structure",
      members: {
        CapacityBlockIds: {
          target: "com.amazonaws.ec2#CapacityBlockIds",
          locationName: "CapacityBlockId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeCapacityBlockStatusMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockStatusResult": {
      type: "structure",
      members: {
        CapacityBlockStatuses: {
          target: "com.amazonaws.ec2#CapacityBlockStatusSet",
          locationName: "capacityBlockStatusSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlocksRequest": {
      type: "structure",
      members: {
        CapacityBlockIds: {
          target: "com.amazonaws.ec2#CapacityBlockIds",
          locationName: "CapacityBlockId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeCapacityBlocksMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlocksResult": {
      type: "structure",
      members: {
        CapacityBlocks: {
          target: "com.amazonaws.ec2#CapacityBlockSet",
          locationName: "capacityBlockSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationBillingRequestsRequest": {
      type: "structure",
      members: {
        CapacityReservationIds: {
          target: "com.amazonaws.ec2#CapacityReservationIdSet",
          locationName: "CapacityReservationId",
        },
        Role: {
          target: "com.amazonaws.ec2#CallerRole",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeCapacityReservationBillingRequestsRequestMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationBillingRequestsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        CapacityReservationBillingRequests: {
          target: "com.amazonaws.ec2#CapacityReservationBillingRequestSet",
          locationName: "capacityReservationBillingRequestSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationFleetsRequest": {
      type: "structure",
      members: {
        CapacityReservationFleetIds: {
          target: "com.amazonaws.ec2#CapacityReservationFleetIdSet",
          locationName: "CapacityReservationFleetId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeCapacityReservationFleetsMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationFleetsResult": {
      type: "structure",
      members: {
        CapacityReservationFleets: {
          target: "com.amazonaws.ec2#CapacityReservationFleetSet",
          locationName: "capacityReservationFleetSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationsRequest": {
      type: "structure",
      members: {
        CapacityReservationIds: {
          target: "com.amazonaws.ec2#CapacityReservationIdSet",
          locationName: "CapacityReservationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeCapacityReservationsMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        CapacityReservations: {
          target: "com.amazonaws.ec2#CapacityReservationSet",
          locationName: "capacityReservationSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCarrierGatewaysRequest": {
      type: "structure",
      members: {
        CarrierGatewayIds: {
          target: "com.amazonaws.ec2#CarrierGatewayIdSet",
          locationName: "CarrierGatewayId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#CarrierGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCarrierGatewaysResult": {
      type: "structure",
      members: {
        CarrierGateways: {
          target: "com.amazonaws.ec2#CarrierGatewaySet",
          locationName: "carrierGatewaySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClassicLinkInstancesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeClassicLinkInstancesMaxResults",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClassicLinkInstancesResult": {
      type: "structure",
      members: {
        Instances: {
          target: "com.amazonaws.ec2#ClassicLinkInstanceList",
          locationName: "instancesSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnAuthorizationRulesRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeClientVpnAuthorizationRulesMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnAuthorizationRulesResult": {
      type: "structure",
      members: {
        AuthorizationRules: {
          target: "com.amazonaws.ec2#AuthorizationRuleSet",
          locationName: "authorizationRule",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnConnectionsRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeClientVpnConnectionsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnConnectionsResult": {
      type: "structure",
      members: {
        Connections: {
          target: "com.amazonaws.ec2#ClientVpnConnectionSet",
          locationName: "connections",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnEndpointsRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointIds: {
          target: "com.amazonaws.ec2#ClientVpnEndpointIdList",
          locationName: "ClientVpnEndpointId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeClientVpnEndpointMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnEndpointsResult": {
      type: "structure",
      members: {
        ClientVpnEndpoints: {
          target: "com.amazonaws.ec2#EndpointSet",
          locationName: "clientVpnEndpoint",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnRoutesRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeClientVpnRoutesMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnRoutesResult": {
      type: "structure",
      members: {
        Routes: {
          target: "com.amazonaws.ec2#ClientVpnRouteSet",
          locationName: "routes",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnTargetNetworksRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        AssociationIds: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeClientVpnTargetNetworksMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnTargetNetworksResult": {
      type: "structure",
      members: {
        ClientVpnTargetNetworks: {
          target: "com.amazonaws.ec2#TargetNetworkSet",
          locationName: "clientVpnTargetNetworks",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCoipPoolsRequest": {
      type: "structure",
      members: {
        PoolIds: {
          target: "com.amazonaws.ec2#CoipPoolIdSet",
          locationName: "PoolId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#CoipPoolMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCoipPoolsResult": {
      type: "structure",
      members: {
        CoipPools: {
          target: "com.amazonaws.ec2#CoipPoolSet",
          locationName: "coipPoolSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeConversionTasksRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        ConversionTaskIds: {
          target: "com.amazonaws.ec2#ConversionIdStringList",
          locationName: "conversionTaskId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeConversionTasksResult": {
      type: "structure",
      members: {
        ConversionTasks: {
          target: "com.amazonaws.ec2#DescribeConversionTaskList",
          locationName: "conversionTasks",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCustomerGatewaysRequest": {
      type: "structure",
      members: {
        CustomerGatewayIds: {
          target: "com.amazonaws.ec2#CustomerGatewayIdStringList",
          locationName: "CustomerGatewayId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCustomerGatewaysResult": {
      type: "structure",
      members: {
        CustomerGateways: {
          target: "com.amazonaws.ec2#CustomerGatewayList",
          locationName: "customerGatewaySet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeDeclarativePoliciesReportsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DeclarativePoliciesMaxResults",
        },
        ReportIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "ReportId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeDeclarativePoliciesReportsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Reports: {
          target: "com.amazonaws.ec2#DeclarativePoliciesReportList",
          locationName: "reportSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeDhcpOptionsRequest": {
      type: "structure",
      members: {
        DhcpOptionsIds: {
          target: "com.amazonaws.ec2#DhcpOptionsIdStringList",
          locationName: "DhcpOptionsId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeDhcpOptionsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeDhcpOptionsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        DhcpOptions: {
          target: "com.amazonaws.ec2#DhcpOptionsList",
          locationName: "dhcpOptionsSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeEgressOnlyInternetGatewaysRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EgressOnlyInternetGatewayIds: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGatewayIdList",
          locationName: "EgressOnlyInternetGatewayId",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeEgressOnlyInternetGatewaysMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeEgressOnlyInternetGatewaysResult": {
      type: "structure",
      members: {
        EgressOnlyInternetGateways: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGatewayList",
          locationName: "egressOnlyInternetGatewaySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeElasticGpusRequest": {
      type: "structure",
      members: {
        ElasticGpuIds: {
          target: "com.amazonaws.ec2#ElasticGpuIdSet",
          locationName: "ElasticGpuId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeElasticGpusMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeElasticGpusResult": {
      type: "structure",
      members: {
        ElasticGpuSet: {
          target: "com.amazonaws.ec2#ElasticGpuSet",
          locationName: "elasticGpuSet",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeExportImageTasksRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        ExportImageTaskIds: {
          target: "com.amazonaws.ec2#ExportImageTaskIdList",
          locationName: "ExportImageTaskId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeExportImageTasksMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeExportImageTasksResult": {
      type: "structure",
      members: {
        ExportImageTasks: {
          target: "com.amazonaws.ec2#ExportImageTaskList",
          locationName: "exportImageTaskSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeExportTasksRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        ExportTaskIds: {
          target: "com.amazonaws.ec2#ExportTaskIdStringList",
          locationName: "exportTaskId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeExportTasksResult": {
      type: "structure",
      members: {
        ExportTasks: {
          target: "com.amazonaws.ec2#ExportTaskList",
          locationName: "exportTaskSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFastLaunchImagesRequest": {
      type: "structure",
      members: {
        ImageIds: {
          target: "com.amazonaws.ec2#FastLaunchImageIdList",
          locationName: "ImageId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeFastLaunchImagesRequestMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFastLaunchImagesResult": {
      type: "structure",
      members: {
        FastLaunchImages: {
          target: "com.amazonaws.ec2#DescribeFastLaunchImagesSuccessSet",
          locationName: "fastLaunchImageSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFastSnapshotRestoresRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeFastSnapshotRestoresMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFastSnapshotRestoresResult": {
      type: "structure",
      members: {
        FastSnapshotRestores: {
          target: "com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessSet",
          locationName: "fastSnapshotRestoreSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetHistoryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EventType: {
          target: "com.amazonaws.ec2#FleetEventType",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetHistoryResult": {
      type: "structure",
      members: {
        HistoryRecords: {
          target: "com.amazonaws.ec2#HistoryRecordSet",
          locationName: "historyRecordSet",
        },
        LastEvaluatedTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "lastEvaluatedTime",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
          locationName: "fleetId",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetInstancesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetInstancesResult": {
      type: "structure",
      members: {
        ActiveInstances: {
          target: "com.amazonaws.ec2#ActiveInstanceSet",
          locationName: "activeInstanceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
          locationName: "fleetId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        FleetIds: {
          target: "com.amazonaws.ec2#FleetIdSet",
          locationName: "FleetId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Fleets: {
          target: "com.amazonaws.ec2#FleetSet",
          locationName: "fleetSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFlowLogsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filter: {
          target: "com.amazonaws.ec2#FilterList",
        },
        FlowLogIds: {
          target: "com.amazonaws.ec2#FlowLogIdList",
          locationName: "FlowLogId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFlowLogsResult": {
      type: "structure",
      members: {
        FlowLogs: {
          target: "com.amazonaws.ec2#FlowLogSet",
          locationName: "flowLogSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFpgaImageAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FpgaImageId: {
          target: "com.amazonaws.ec2#FpgaImageId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#FpgaImageAttributeName",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFpgaImageAttributeResult": {
      type: "structure",
      members: {
        FpgaImageAttribute: {
          target: "com.amazonaws.ec2#FpgaImageAttribute",
          locationName: "fpgaImageAttribute",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFpgaImagesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FpgaImageIds: {
          target: "com.amazonaws.ec2#FpgaImageIdList",
          locationName: "FpgaImageId",
        },
        Owners: {
          target: "com.amazonaws.ec2#OwnerStringList",
          locationName: "Owner",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeFpgaImagesMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFpgaImagesResult": {
      type: "structure",
      members: {
        FpgaImages: {
          target: "com.amazonaws.ec2#FpgaImageList",
          locationName: "fpgaImageSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeHostReservationOfferingsRequest": {
      type: "structure",
      members: {
        Filter: {
          target: "com.amazonaws.ec2#FilterList",
        },
        MaxDuration: {
          target: "com.amazonaws.ec2#Integer",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeHostReservationsMaxResults",
        },
        MinDuration: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeHostReservationOfferingsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        OfferingSet: {
          target: "com.amazonaws.ec2#HostOfferingSet",
          locationName: "offeringSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeHostReservationsRequest": {
      type: "structure",
      members: {
        Filter: {
          target: "com.amazonaws.ec2#FilterList",
        },
        HostReservationIdSet: {
          target: "com.amazonaws.ec2#HostReservationIdSet",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeHostReservationsResult": {
      type: "structure",
      members: {
        HostReservationSet: {
          target: "com.amazonaws.ec2#HostReservationSet",
          locationName: "hostReservationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeHostsRequest": {
      type: "structure",
      members: {
        HostIds: {
          target: "com.amazonaws.ec2#RequestHostIdList",
          locationName: "hostId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
        Filter: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeHostsResult": {
      type: "structure",
      members: {
        Hosts: {
          target: "com.amazonaws.ec2#HostList",
          locationName: "hostSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIamInstanceProfileAssociationsRequest": {
      type: "structure",
      members: {
        AssociationIds: {
          target: "com.amazonaws.ec2#AssociationIdList",
          locationName: "AssociationId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeIamInstanceProfileAssociationsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIamInstanceProfileAssociationsResult": {
      type: "structure",
      members: {
        IamInstanceProfileAssociations: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociationSet",
          locationName: "iamInstanceProfileAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIdFormatRequest": {
      type: "structure",
      members: {
        Resource: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIdFormatResult": {
      type: "structure",
      members: {
        Statuses: {
          target: "com.amazonaws.ec2#IdFormatList",
          locationName: "statusSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIdentityIdFormatRequest": {
      type: "structure",
      members: {
        Resource: {
          target: "com.amazonaws.ec2#String",
          locationName: "resource",
        },
        PrincipalArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "principalArn",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIdentityIdFormatResult": {
      type: "structure",
      members: {
        Statuses: {
          target: "com.amazonaws.ec2#IdFormatList",
          locationName: "statusSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImageAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#ImageAttributeName",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ImageAttribute": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "description",
        },
        KernelId: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "kernel",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "ramdisk",
        },
        SriovNetSupport: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "sriovNetSupport",
        },
        BootMode: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "bootMode",
        },
        TpmSupport: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "tpmSupport",
        },
        UefiData: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "uefiData",
        },
        LastLaunchedTime: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "lastLaunchedTime",
        },
        ImdsSupport: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "imdsSupport",
        },
        DeregistrationProtection: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "deregistrationProtection",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        LaunchPermissions: {
          target: "com.amazonaws.ec2#LaunchPermissionList",
          locationName: "launchPermission",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImagesRequest": {
      type: "structure",
      members: {
        ExecutableUsers: {
          target: "com.amazonaws.ec2#ExecutableByStringList",
          locationName: "ExecutableBy",
        },
        ImageIds: {
          target: "com.amazonaws.ec2#ImageIdStringList",
          locationName: "ImageId",
        },
        Owners: {
          target: "com.amazonaws.ec2#OwnerStringList",
          locationName: "Owner",
        },
        IncludeDeprecated: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IncludeDisabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImagesResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Images: {
          target: "com.amazonaws.ec2#ImageList",
          locationName: "imagesSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImportImageTasksRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filters",
        },
        ImportTaskIds: {
          target: "com.amazonaws.ec2#ImportTaskIdList",
          locationName: "ImportTaskId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImportImageTasksResult": {
      type: "structure",
      members: {
        ImportImageTasks: {
          target: "com.amazonaws.ec2#ImportImageTaskList",
          locationName: "importImageTaskSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImportSnapshotTasksRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filters",
        },
        ImportTaskIds: {
          target: "com.amazonaws.ec2#ImportSnapshotTaskIdList",
          locationName: "ImportTaskId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeImportSnapshotTasksResult": {
      type: "structure",
      members: {
        ImportSnapshotTasks: {
          target: "com.amazonaws.ec2#ImportSnapshotTaskList",
          locationName: "importSnapshotTaskSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#InstanceAttributeName",
          locationName: "attribute",
        },
      },
    },
    "com.amazonaws.ec2#InstanceAttribute": {
      type: "structure",
      members: {
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#InstanceBlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
        DisableApiTermination: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "disableApiTermination",
        },
        EnaSupport: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "enaSupport",
        },
        EnclaveOptions: {
          target: "com.amazonaws.ec2#EnclaveOptions",
          locationName: "enclaveOptions",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "ebsOptimized",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceInitiatedShutdownBehavior: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "instanceInitiatedShutdownBehavior",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "instanceType",
        },
        KernelId: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "kernel",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "ramdisk",
        },
        RootDeviceName: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "rootDeviceName",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "sourceDestCheck",
        },
        SriovNetSupport: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "sriovNetSupport",
        },
        UserData: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "userData",
        },
        DisableApiStop: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "disableApiStop",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceConnectEndpointsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#InstanceConnectEndpointMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        InstanceConnectEndpointIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "InstanceConnectEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceConnectEndpointsResult": {
      type: "structure",
      members: {
        InstanceConnectEndpoints: {
          target: "com.amazonaws.ec2#InstanceConnectEndpointSet",
          locationName: "instanceConnectEndpointSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceCreditSpecificationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeInstanceCreditSpecificationsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceCreditSpecificationsResult": {
      type: "structure",
      members: {
        InstanceCreditSpecifications: {
          target: "com.amazonaws.ec2#InstanceCreditSpecificationList",
          locationName: "instanceCreditSpecificationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceEventNotificationAttributesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceEventNotificationAttributesResult": {
      type: "structure",
      members: {
        InstanceTagAttribute: {
          target: "com.amazonaws.ec2#InstanceTagNotificationAttribute",
          locationName: "instanceTagAttribute",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceEventWindowsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceEventWindowIds: {
          target: "com.amazonaws.ec2#InstanceEventWindowIdSet",
          locationName: "InstanceEventWindowId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#ResultRange",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceEventWindowsResult": {
      type: "structure",
      members: {
        InstanceEventWindows: {
          target: "com.amazonaws.ec2#InstanceEventWindowSet",
          locationName: "instanceEventWindowSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceImageMetadataRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeInstanceImageMetadataMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceImageMetadataResult": {
      type: "structure",
      members: {
        InstanceImageMetadata: {
          target: "com.amazonaws.ec2#InstanceImageMetadataList",
          locationName: "instanceImageMetadataSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceStatusRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        IncludeAllInstances: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "includeAllInstances",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceStatusResult": {
      type: "structure",
      members: {
        InstanceStatuses: {
          target: "com.amazonaws.ec2#InstanceStatusList",
          locationName: "instanceStatusSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTopologyRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeInstanceTopologyMaxResults",
        },
        InstanceIds: {
          target: "com.amazonaws.ec2#DescribeInstanceTopologyInstanceIdSet",
          locationName: "InstanceId",
        },
        GroupNames: {
          target: "com.amazonaws.ec2#DescribeInstanceTopologyGroupNameSet",
          locationName: "GroupName",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTopologyResult": {
      type: "structure",
      members: {
        Instances: {
          target: "com.amazonaws.ec2#InstanceSet",
          locationName: "instanceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTypeOfferingsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LocationType: {
          target: "com.amazonaws.ec2#LocationType",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DITOMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTypeOfferingsResult": {
      type: "structure",
      members: {
        InstanceTypeOfferings: {
          target: "com.amazonaws.ec2#InstanceTypeOfferingsList",
          locationName: "instanceTypeOfferingSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTypesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceTypes: {
          target: "com.amazonaws.ec2#RequestInstanceTypeList",
          locationName: "InstanceType",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DITMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTypesResult": {
      type: "structure",
      members: {
        InstanceTypes: {
          target: "com.amazonaws.ec2#InstanceTypeInfoList",
          locationName: "instanceTypeSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstancesResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Reservations: {
          target: "com.amazonaws.ec2#ReservationList",
          locationName: "reservationSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInternetGatewaysRequest": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeInternetGatewaysMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InternetGatewayIds: {
          target: "com.amazonaws.ec2#InternetGatewayIdList",
          locationName: "internetGatewayId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInternetGatewaysResult": {
      type: "structure",
      members: {
        InternetGateways: {
          target: "com.amazonaws.ec2#InternetGatewayList",
          locationName: "internetGatewaySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamByoasnRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeIpamByoasnMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamByoasnResult": {
      type: "structure",
      members: {
        Byoasns: {
          target: "com.amazonaws.ec2#ByoasnSet",
          locationName: "byoasnSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamExternalResourceVerificationTokensRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        IpamExternalResourceVerificationTokenIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "IpamExternalResourceVerificationTokenId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamExternalResourceVerificationTokensResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
        IpamExternalResourceVerificationTokens: {
          target: "com.amazonaws.ec2#IpamExternalResourceVerificationTokenSet",
          locationName: "ipamExternalResourceVerificationTokenSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamPoolsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        IpamPoolIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "IpamPoolId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamPoolsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
        IpamPools: {
          target: "com.amazonaws.ec2#IpamPoolSet",
          locationName: "ipamPoolSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamResourceDiscoveriesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "IpamResourceDiscoveryId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamResourceDiscoveriesResult": {
      type: "structure",
      members: {
        IpamResourceDiscoveries: {
          target: "com.amazonaws.ec2#IpamResourceDiscoverySet",
          locationName: "ipamResourceDiscoverySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamResourceDiscoveryAssociationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryAssociationIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "IpamResourceDiscoveryAssociationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamResourceDiscoveryAssociationsResult": {
      type: "structure",
      members: {
        IpamResourceDiscoveryAssociations: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociationSet",
          locationName: "ipamResourceDiscoveryAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamScopesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        IpamScopeIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "IpamScopeId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamScopesResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
        IpamScopes: {
          target: "com.amazonaws.ec2#IpamScopeSet",
          locationName: "ipamScopeSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        IpamIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "IpamId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpamsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
        Ipams: {
          target: "com.amazonaws.ec2#IpamSet",
          locationName: "ipamSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpv6PoolsRequest": {
      type: "structure",
      members: {
        PoolIds: {
          target: "com.amazonaws.ec2#Ipv6PoolIdList",
          locationName: "PoolId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Ipv6PoolMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeIpv6PoolsResult": {
      type: "structure",
      members: {
        Ipv6Pools: {
          target: "com.amazonaws.ec2#Ipv6PoolSet",
          locationName: "ipv6PoolSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeKeyPairsRequest": {
      type: "structure",
      members: {
        KeyNames: {
          target: "com.amazonaws.ec2#KeyNameStringList",
          locationName: "KeyName",
        },
        KeyPairIds: {
          target: "com.amazonaws.ec2#KeyPairIdStringList",
          locationName: "KeyPairId",
        },
        IncludePublicKey: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeKeyPairsResult": {
      type: "structure",
      members: {
        KeyPairs: {
          target: "com.amazonaws.ec2#KeyPairList",
          locationName: "keySet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLaunchTemplateVersionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
        Versions: {
          target: "com.amazonaws.ec2#VersionStringList",
          locationName: "LaunchTemplateVersion",
        },
        MinVersion: {
          target: "com.amazonaws.ec2#String",
        },
        MaxVersion: {
          target: "com.amazonaws.ec2#String",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        ResolveAlias: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLaunchTemplateVersionsResult": {
      type: "structure",
      members: {
        LaunchTemplateVersions: {
          target: "com.amazonaws.ec2#LaunchTemplateVersionSet",
          locationName: "launchTemplateVersionSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLaunchTemplatesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LaunchTemplateIds: {
          target: "com.amazonaws.ec2#LaunchTemplateIdStringList",
          locationName: "LaunchTemplateId",
        },
        LaunchTemplateNames: {
          target: "com.amazonaws.ec2#LaunchTemplateNameStringList",
          locationName: "LaunchTemplateName",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeLaunchTemplatesMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLaunchTemplatesResult": {
      type: "structure",
      members: {
        LaunchTemplates: {
          target: "com.amazonaws.ec2#LaunchTemplateSet",
          locationName: "launchTemplates",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds: {
            target:
              "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet",
            locationName:
              "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
          },
          Filters: {
            target: "com.amazonaws.ec2#FilterList",
            locationName: "Filter",
          },
          MaxResults: {
            target: "com.amazonaws.ec2#LocalGatewayMaxResults",
          },
          NextToken: {
            target: "com.amazonaws.ec2#String",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableVirtualInterfaceGroupAssociations: {
            target:
              "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet",
            locationName:
              "localGatewayRouteTableVirtualInterfaceGroupAssociationSet",
          },
          NextToken: {
            target: "com.amazonaws.ec2#String",
            locationName: "nextToken",
          },
        },
      },
    "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVpcAssociationsRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableVpcAssociationIds: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationIdSet",
          locationName: "LocalGatewayRouteTableVpcAssociationId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#LocalGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayRouteTableVpcAssociationsResult": {
      type: "structure",
      members: {
        LocalGatewayRouteTableVpcAssociations: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationSet",
          locationName: "localGatewayRouteTableVpcAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayRouteTablesRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableIds: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableIdSet",
          locationName: "LocalGatewayRouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#LocalGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayRouteTablesResult": {
      type: "structure",
      members: {
        LocalGatewayRouteTables: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableSet",
          locationName: "localGatewayRouteTableSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfaceGroupsRequest": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroupIds: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupIdSet",
          locationName: "LocalGatewayVirtualInterfaceGroupId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#LocalGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfaceGroupsResult": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroups: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupSet",
          locationName: "localGatewayVirtualInterfaceGroupSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfacesRequest": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceIds: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceIdSet",
          locationName: "LocalGatewayVirtualInterfaceId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#LocalGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewayVirtualInterfacesResult": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaces: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceSet",
          locationName: "localGatewayVirtualInterfaceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewaysRequest": {
      type: "structure",
      members: {
        LocalGatewayIds: {
          target: "com.amazonaws.ec2#LocalGatewayIdSet",
          locationName: "LocalGatewayId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#LocalGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLocalGatewaysResult": {
      type: "structure",
      members: {
        LocalGateways: {
          target: "com.amazonaws.ec2#LocalGatewaySet",
          locationName: "localGatewaySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLockedSnapshotsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeLockedSnapshotsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        SnapshotIds: {
          target: "com.amazonaws.ec2#SnapshotIdStringList",
          locationName: "SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLockedSnapshotsResult": {
      type: "structure",
      members: {
        Snapshots: {
          target: "com.amazonaws.ec2#LockedSnapshotsInfoList",
          locationName: "snapshotSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeMacHostsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        HostIds: {
          target: "com.amazonaws.ec2#RequestHostIdList",
          locationName: "HostId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeMacHostsRequestMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeMacHostsResult": {
      type: "structure",
      members: {
        MacHosts: {
          target: "com.amazonaws.ec2#MacHostList",
          locationName: "macHostSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeMacModificationTasksRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MacModificationTaskIds: {
          target: "com.amazonaws.ec2#MacModificationTaskIdList",
          locationName: "MacModificationTaskId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeMacModificationTasksMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeMacModificationTasksResult": {
      type: "structure",
      members: {
        MacModificationTasks: {
          target: "com.amazonaws.ec2#MacModificationTaskList",
          locationName: "macModificationTaskSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeManagedPrefixListsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#PrefixListMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        PrefixListIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "PrefixListId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeManagedPrefixListsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
        PrefixLists: {
          target: "com.amazonaws.ec2#ManagedPrefixListSet",
          locationName: "prefixListSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeMovingAddressesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        PublicIps: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "publicIp",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeMovingAddressesMaxResults",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeMovingAddressesResult": {
      type: "structure",
      members: {
        MovingAddressStatuses: {
          target: "com.amazonaws.ec2#MovingAddressStatusSet",
          locationName: "movingAddressStatusSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNatGatewaysRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filter: {
          target: "com.amazonaws.ec2#FilterList",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeNatGatewaysMaxResults",
        },
        NatGatewayIds: {
          target: "com.amazonaws.ec2#NatGatewayIdStringList",
          locationName: "NatGatewayId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNatGatewaysResult": {
      type: "structure",
      members: {
        NatGateways: {
          target: "com.amazonaws.ec2#NatGatewayList",
          locationName: "natGatewaySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkAclsRequest": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeNetworkAclsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkAclIds: {
          target: "com.amazonaws.ec2#NetworkAclIdStringList",
          locationName: "NetworkAclId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkAclsResult": {
      type: "structure",
      members: {
        NetworkAcls: {
          target: "com.amazonaws.ec2#NetworkAclList",
          locationName: "networkAclSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopeAnalysesRequest": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisIds: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisIdList",
          locationName: "NetworkInsightsAccessScopeAnalysisId",
        },
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
        },
        AnalysisStartTimeBegin: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        AnalysisStartTimeEnd: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#NetworkInsightsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopeAnalysesResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalyses: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisList",
          locationName: "networkInsightsAccessScopeAnalysisSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopesRequest": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeIds: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeIdList",
          locationName: "NetworkInsightsAccessScopeId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#NetworkInsightsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsAccessScopesResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopes: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeList",
          locationName: "networkInsightsAccessScopeSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsAnalysesRequest": {
      type: "structure",
      members: {
        NetworkInsightsAnalysisIds: {
          target: "com.amazonaws.ec2#NetworkInsightsAnalysisIdList",
          locationName: "NetworkInsightsAnalysisId",
        },
        NetworkInsightsPathId: {
          target: "com.amazonaws.ec2#NetworkInsightsPathId",
        },
        AnalysisStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        AnalysisEndTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#NetworkInsightsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsAnalysesResult": {
      type: "structure",
      members: {
        NetworkInsightsAnalyses: {
          target: "com.amazonaws.ec2#NetworkInsightsAnalysisList",
          locationName: "networkInsightsAnalysisSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsPathsRequest": {
      type: "structure",
      members: {
        NetworkInsightsPathIds: {
          target: "com.amazonaws.ec2#NetworkInsightsPathIdList",
          locationName: "NetworkInsightsPathId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#NetworkInsightsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInsightsPathsResult": {
      type: "structure",
      members: {
        NetworkInsightsPaths: {
          target: "com.amazonaws.ec2#NetworkInsightsPathList",
          locationName: "networkInsightsPathSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfaceAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#NetworkInterfaceAttribute",
          locationName: "attribute",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfaceAttributeResult": {
      type: "structure",
      members: {
        Attachment: {
          target: "com.amazonaws.ec2#NetworkInterfaceAttachment",
          locationName: "attachment",
        },
        Description: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "description",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "sourceDestCheck",
        },
        AssociatePublicIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "associatePublicIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfacePermissionsRequest": {
      type: "structure",
      members: {
        NetworkInterfacePermissionIds: {
          target: "com.amazonaws.ec2#NetworkInterfacePermissionIdList",
          locationName: "NetworkInterfacePermissionId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeNetworkInterfacePermissionsMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfacePermissionsResult": {
      type: "structure",
      members: {
        NetworkInterfacePermissions: {
          target: "com.amazonaws.ec2#NetworkInterfacePermissionList",
          locationName: "networkInterfacePermissions",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfacesRequest": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeNetworkInterfacesMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#NetworkInterfaceIdList",
          locationName: "NetworkInterfaceId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfacesResult": {
      type: "structure",
      members: {
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#NetworkInterfaceList",
          locationName: "networkInterfaceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeOutpostLagsRequest": {
      type: "structure",
      members: {
        OutpostLagIds: {
          target: "com.amazonaws.ec2#OutpostLagIdSet",
          locationName: "OutpostLagId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#OutpostLagMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeOutpostLagsResult": {
      type: "structure",
      members: {
        OutpostLags: {
          target: "com.amazonaws.ec2#OutpostLagSet",
          locationName: "outpostLagSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribePlacementGroupsRequest": {
      type: "structure",
      members: {
        GroupIds: {
          target: "com.amazonaws.ec2#PlacementGroupIdStringList",
          locationName: "GroupId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        GroupNames: {
          target: "com.amazonaws.ec2#PlacementGroupStringList",
          locationName: "groupName",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribePlacementGroupsResult": {
      type: "structure",
      members: {
        PlacementGroups: {
          target: "com.amazonaws.ec2#PlacementGroupList",
          locationName: "placementGroupSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribePrefixListsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        PrefixListIds: {
          target: "com.amazonaws.ec2#PrefixListResourceIdStringList",
          locationName: "PrefixListId",
        },
      },
    },
    "com.amazonaws.ec2#DescribePrefixListsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        PrefixLists: {
          target: "com.amazonaws.ec2#PrefixListSet",
          locationName: "prefixListSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribePrincipalIdFormatRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Resources: {
          target: "com.amazonaws.ec2#ResourceList",
          locationName: "Resource",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribePrincipalIdFormatMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribePrincipalIdFormatResult": {
      type: "structure",
      members: {
        Principals: {
          target: "com.amazonaws.ec2#PrincipalIdFormatList",
          locationName: "principalSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribePublicIpv4PoolsRequest": {
      type: "structure",
      members: {
        PoolIds: {
          target: "com.amazonaws.ec2#PublicIpv4PoolIdStringList",
          locationName: "PoolId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#PoolMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribePublicIpv4PoolsResult": {
      type: "structure",
      members: {
        PublicIpv4Pools: {
          target: "com.amazonaws.ec2#PublicIpv4PoolSet",
          locationName: "publicIpv4PoolSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRegionsRequest": {
      type: "structure",
      members: {
        RegionNames: {
          target: "com.amazonaws.ec2#RegionNameStringList",
          locationName: "RegionName",
        },
        AllRegions: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRegionsResult": {
      type: "structure",
      members: {
        Regions: {
          target: "com.amazonaws.ec2#RegionList",
          locationName: "regionInfo",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReplaceRootVolumeTasksRequest": {
      type: "structure",
      members: {
        ReplaceRootVolumeTaskIds: {
          target: "com.amazonaws.ec2#ReplaceRootVolumeTaskIds",
          locationName: "ReplaceRootVolumeTaskId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeReplaceRootVolumeTasksMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReplaceRootVolumeTasksResult": {
      type: "structure",
      members: {
        ReplaceRootVolumeTasks: {
          target: "com.amazonaws.ec2#ReplaceRootVolumeTasks",
          locationName: "replaceRootVolumeTaskSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesRequest": {
      type: "structure",
      members: {
        OfferingClass: {
          target: "com.amazonaws.ec2#OfferingClassType",
        },
        ReservedInstancesIds: {
          target: "com.amazonaws.ec2#ReservedInstancesIdStringList",
          locationName: "ReservedInstancesId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        OfferingType: {
          target: "com.amazonaws.ec2#OfferingTypeValues",
          locationName: "offeringType",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesResult": {
      type: "structure",
      members: {
        ReservedInstances: {
          target: "com.amazonaws.ec2#ReservedInstancesList",
          locationName: "reservedInstancesSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesListingsRequest": {
      type: "structure",
      members: {
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#ReservationId",
          locationName: "reservedInstancesId",
        },
        ReservedInstancesListingId: {
          target: "com.amazonaws.ec2#ReservedInstancesListingId",
          locationName: "reservedInstancesListingId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesListingsResult": {
      type: "structure",
      members: {
        ReservedInstancesListings: {
          target: "com.amazonaws.ec2#ReservedInstancesListingList",
          locationName: "reservedInstancesListingsSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesModificationsRequest": {
      type: "structure",
      members: {
        ReservedInstancesModificationIds: {
          target: "com.amazonaws.ec2#ReservedInstancesModificationIdStringList",
          locationName: "ReservedInstancesModificationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesModificationsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        ReservedInstancesModifications: {
          target: "com.amazonaws.ec2#ReservedInstancesModificationList",
          locationName: "reservedInstancesModificationsSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesOfferingsRequest": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
        },
        IncludeMarketplace: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
        },
        MaxDuration: {
          target: "com.amazonaws.ec2#Long",
        },
        MaxInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        MinDuration: {
          target: "com.amazonaws.ec2#Long",
        },
        OfferingClass: {
          target: "com.amazonaws.ec2#OfferingClassType",
        },
        ProductDescription: {
          target: "com.amazonaws.ec2#RIProductDescription",
        },
        ReservedInstancesOfferingIds: {
          target: "com.amazonaws.ec2#ReservedInstancesOfferingIdStringList",
          locationName: "ReservedInstancesOfferingId",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        InstanceTenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "instanceTenancy",
        },
        OfferingType: {
          target: "com.amazonaws.ec2#OfferingTypeValues",
          locationName: "offeringType",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeReservedInstancesOfferingsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        ReservedInstancesOfferings: {
          target: "com.amazonaws.ec2#ReservedInstancesOfferingList",
          locationName: "reservedInstancesOfferingsSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteServerEndpointsRequest": {
      type: "structure",
      members: {
        RouteServerEndpointIds: {
          target: "com.amazonaws.ec2#RouteServerEndpointIdsList",
          locationName: "RouteServerEndpointId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#RouteServerMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteServerEndpointsResult": {
      type: "structure",
      members: {
        RouteServerEndpoints: {
          target: "com.amazonaws.ec2#RouteServerEndpointsList",
          locationName: "routeServerEndpointSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteServerPeersRequest": {
      type: "structure",
      members: {
        RouteServerPeerIds: {
          target: "com.amazonaws.ec2#RouteServerPeerIdsList",
          locationName: "RouteServerPeerId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#RouteServerMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteServerPeersResult": {
      type: "structure",
      members: {
        RouteServerPeers: {
          target: "com.amazonaws.ec2#RouteServerPeersList",
          locationName: "routeServerPeerSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteServersRequest": {
      type: "structure",
      members: {
        RouteServerIds: {
          target: "com.amazonaws.ec2#RouteServerIdsList",
          locationName: "RouteServerId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#RouteServerMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteServersResult": {
      type: "structure",
      members: {
        RouteServers: {
          target: "com.amazonaws.ec2#RouteServersList",
          locationName: "routeServerSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteTablesRequest": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeRouteTablesMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        RouteTableIds: {
          target: "com.amazonaws.ec2#RouteTableIdStringList",
          locationName: "RouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeRouteTablesResult": {
      type: "structure",
      members: {
        RouteTables: {
          target: "com.amazonaws.ec2#RouteTableList",
          locationName: "routeTableSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeScheduledInstanceAvailabilityRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        FirstSlotStartTimeRange: {
          target: "com.amazonaws.ec2#SlotDateTimeRangeRequest",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeScheduledInstanceAvailabilityMaxResults",
        },
        MaxSlotDurationInHours: {
          target: "com.amazonaws.ec2#Integer",
        },
        MinSlotDurationInHours: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        Recurrence: {
          target: "com.amazonaws.ec2#ScheduledInstanceRecurrenceRequest",
        },
      },
    },
    "com.amazonaws.ec2#DescribeScheduledInstanceAvailabilityResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        ScheduledInstanceAvailabilitySet: {
          target: "com.amazonaws.ec2#ScheduledInstanceAvailabilitySet",
          locationName: "scheduledInstanceAvailabilitySet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeScheduledInstancesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        ScheduledInstanceIds: {
          target: "com.amazonaws.ec2#ScheduledInstanceIdRequestSet",
          locationName: "ScheduledInstanceId",
        },
        SlotStartTimeRange: {
          target: "com.amazonaws.ec2#SlotStartTimeRangeRequest",
        },
      },
    },
    "com.amazonaws.ec2#DescribeScheduledInstancesResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        ScheduledInstanceSet: {
          target: "com.amazonaws.ec2#ScheduledInstanceSet",
          locationName: "scheduledInstanceSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupReferencesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        GroupId: {
          target: "com.amazonaws.ec2#GroupIds",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupReferencesResult": {
      type: "structure",
      members: {
        SecurityGroupReferenceSet: {
          target: "com.amazonaws.ec2#SecurityGroupReferences",
          locationName: "securityGroupReferenceSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupRulesRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        SecurityGroupRuleIds: {
          target: "com.amazonaws.ec2#SecurityGroupRuleIdList",
          locationName: "SecurityGroupRuleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeSecurityGroupRulesMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupRulesResult": {
      type: "structure",
      members: {
        SecurityGroupRules: {
          target: "com.amazonaws.ec2#SecurityGroupRuleList",
          locationName: "securityGroupRuleSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupVpcAssociationsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeSecurityGroupVpcAssociationsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupVpcAssociationsResult": {
      type: "structure",
      members: {
        SecurityGroupVpcAssociations: {
          target: "com.amazonaws.ec2#SecurityGroupVpcAssociationList",
          locationName: "securityGroupVpcAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupsRequest": {
      type: "structure",
      members: {
        GroupIds: {
          target: "com.amazonaws.ec2#GroupIdStringList",
          locationName: "GroupId",
        },
        GroupNames: {
          target: "com.amazonaws.ec2#GroupNameStringList",
          locationName: "GroupName",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeSecurityGroupsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#SecurityGroupList",
          locationName: "securityGroupInfo",
        },
      },
    },
    "com.amazonaws.ec2#DescribeServiceLinkVirtualInterfacesRequest": {
      type: "structure",
      members: {
        ServiceLinkVirtualInterfaceIds: {
          target: "com.amazonaws.ec2#ServiceLinkVirtualInterfaceIdSet",
          locationName: "ServiceLinkVirtualInterfaceId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#ServiceLinkMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeServiceLinkVirtualInterfacesResult": {
      type: "structure",
      members: {
        ServiceLinkVirtualInterfaces: {
          target: "com.amazonaws.ec2#ServiceLinkVirtualInterfaceSet",
          locationName: "serviceLinkVirtualInterfaceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#SnapshotAttributeName",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotAttributeResult": {
      type: "structure",
      members: {
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        CreateVolumePermissions: {
          target: "com.amazonaws.ec2#CreateVolumePermissionList",
          locationName: "createVolumePermission",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotTierStatusRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeSnapshotTierStatusMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotTierStatusResult": {
      type: "structure",
      members: {
        SnapshotTierStatuses: {
          target: "com.amazonaws.ec2#snapshotTierStatusSet",
          locationName: "snapshotTierStatusSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotsRequest": {
      type: "structure",
      members: {
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        OwnerIds: {
          target: "com.amazonaws.ec2#OwnerStringList",
          locationName: "Owner",
        },
        RestorableByUserIds: {
          target: "com.amazonaws.ec2#RestorableByStringList",
          locationName: "RestorableBy",
        },
        SnapshotIds: {
          target: "com.amazonaws.ec2#SnapshotIdStringList",
          locationName: "SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Snapshots: {
          target: "com.amazonaws.ec2#SnapshotList",
          locationName: "snapshotSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotDatafeedSubscriptionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotDatafeedSubscriptionResult": {
      type: "structure",
      members: {
        SpotDatafeedSubscription: {
          target: "com.amazonaws.ec2#SpotDatafeedSubscription",
          locationName: "spotDatafeedSubscription",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetInstancesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#SpotFleetRequestId",
          locationName: "spotFleetRequestId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeSpotFleetInstancesMaxResults",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetInstancesResponse": {
      type: "structure",
      members: {
        ActiveInstances: {
          target: "com.amazonaws.ec2#ActiveInstanceSet",
          locationName: "activeInstanceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotFleetRequestId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetRequestHistoryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#SpotFleetRequestId",
          locationName: "spotFleetRequestId",
        },
        EventType: {
          target: "com.amazonaws.ec2#EventType",
          locationName: "eventType",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeSpotFleetRequestHistoryMaxResults",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetRequestHistoryResponse": {
      type: "structure",
      members: {
        HistoryRecords: {
          target: "com.amazonaws.ec2#HistoryRecords",
          locationName: "historyRecordSet",
        },
        LastEvaluatedTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "lastEvaluatedTime",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotFleetRequestId",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetRequestsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotFleetRequestIds: {
          target: "com.amazonaws.ec2#SpotFleetRequestIdList",
          locationName: "spotFleetRequestId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetRequestsResponse": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        SpotFleetRequestConfigs: {
          target: "com.amazonaws.ec2#SpotFleetRequestConfigSet",
          locationName: "spotFleetRequestConfigSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotInstanceRequestsRequest": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotInstanceRequestIds: {
          target: "com.amazonaws.ec2#SpotInstanceRequestIdList",
          locationName: "SpotInstanceRequestId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotInstanceRequestsResult": {
      type: "structure",
      members: {
        SpotInstanceRequests: {
          target: "com.amazonaws.ec2#SpotInstanceRequestList",
          locationName: "spotInstanceRequestSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotPriceHistoryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "endTime",
        },
        InstanceTypes: {
          target: "com.amazonaws.ec2#InstanceTypeList",
          locationName: "InstanceType",
        },
        ProductDescriptions: {
          target: "com.amazonaws.ec2#ProductDescriptionList",
          locationName: "ProductDescription",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSpotPriceHistoryResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        SpotPriceHistory: {
          target: "com.amazonaws.ec2#SpotPriceHistoryList",
          locationName: "spotPriceHistorySet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeStaleSecurityGroupsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeStaleSecurityGroupsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#DescribeStaleSecurityGroupsNextToken",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeStaleSecurityGroupsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        StaleSecurityGroupSet: {
          target: "com.amazonaws.ec2#StaleSecurityGroupSet",
          locationName: "staleSecurityGroupSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeStoreImageTasksRequest": {
      type: "structure",
      members: {
        ImageIds: {
          target: "com.amazonaws.ec2#ImageIdList",
          locationName: "ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeStoreImageTasksRequestMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeStoreImageTasksResult": {
      type: "structure",
      members: {
        StoreImageTaskResults: {
          target: "com.amazonaws.ec2#StoreImageTaskResultSet",
          locationName: "storeImageTaskResultSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSubnetsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#SubnetIdStringList",
          locationName: "SubnetId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeSubnetsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSubnetsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Subnets: {
          target: "com.amazonaws.ec2#SubnetList",
          locationName: "subnetSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTagsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTagsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagDescriptionList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorFilterRulesRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterRuleIds: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleIdList",
          locationName: "TrafficMirrorFilterRuleId",
        },
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TrafficMirroringMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorFilterRulesResult": {
      type: "structure",
      members: {
        TrafficMirrorFilterRules: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleSet",
          locationName: "trafficMirrorFilterRuleSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorFiltersRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterIds: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterIdList",
          locationName: "TrafficMirrorFilterId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TrafficMirroringMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorFiltersResult": {
      type: "structure",
      members: {
        TrafficMirrorFilters: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterSet",
          locationName: "trafficMirrorFilterSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorSessionsRequest": {
      type: "structure",
      members: {
        TrafficMirrorSessionIds: {
          target: "com.amazonaws.ec2#TrafficMirrorSessionIdList",
          locationName: "TrafficMirrorSessionId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TrafficMirroringMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorSessionsResult": {
      type: "structure",
      members: {
        TrafficMirrorSessions: {
          target: "com.amazonaws.ec2#TrafficMirrorSessionSet",
          locationName: "trafficMirrorSessionSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorTargetsRequest": {
      type: "structure",
      members: {
        TrafficMirrorTargetIds: {
          target: "com.amazonaws.ec2#TrafficMirrorTargetIdList",
          locationName: "TrafficMirrorTargetId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TrafficMirroringMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrafficMirrorTargetsResult": {
      type: "structure",
      members: {
        TrafficMirrorTargets: {
          target: "com.amazonaws.ec2#TrafficMirrorTargetSet",
          locationName: "trafficMirrorTargetSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayAttachmentsRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentIds: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayAttachmentsResult": {
      type: "structure",
      members: {
        TransitGatewayAttachments: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentList",
          locationName: "transitGatewayAttachments",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayConnectPeersRequest": {
      type: "structure",
      members: {
        TransitGatewayConnectPeerIds: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeerIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayConnectPeersResult": {
      type: "structure",
      members: {
        TransitGatewayConnectPeers: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeerList",
          locationName: "transitGatewayConnectPeerSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayConnectsRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentIds: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayConnectsResult": {
      type: "structure",
      members: {
        TransitGatewayConnects: {
          target: "com.amazonaws.ec2#TransitGatewayConnectList",
          locationName: "transitGatewayConnectSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayMulticastDomainsRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainIds: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayMulticastDomainsResult": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomains: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainList",
          locationName: "transitGatewayMulticastDomains",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayPeeringAttachmentsRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentIds: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayPeeringAttachmentsResult": {
      type: "structure",
      members: {
        TransitGatewayPeeringAttachments: {
          target: "com.amazonaws.ec2#TransitGatewayPeeringAttachmentList",
          locationName: "transitGatewayPeeringAttachments",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayPolicyTablesRequest": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableIds: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayPolicyTablesResult": {
      type: "structure",
      members: {
        TransitGatewayPolicyTables: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableList",
          locationName: "transitGatewayPolicyTables",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayRouteTableAnnouncementsRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableAnnouncementIds: {
          target:
            "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayRouteTableAnnouncementsResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTableAnnouncements: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementList",
          locationName: "transitGatewayRouteTableAnnouncements",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayRouteTablesRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableIds: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayRouteTablesResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTables: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableList",
          locationName: "transitGatewayRouteTables",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayVpcAttachmentsRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentIds: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewayVpcAttachmentsResult": {
      type: "structure",
      members: {
        TransitGatewayVpcAttachments: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachmentList",
          locationName: "transitGatewayVpcAttachments",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewaysRequest": {
      type: "structure",
      members: {
        TransitGatewayIds: {
          target: "com.amazonaws.ec2#TransitGatewayIdStringList",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTransitGatewaysResult": {
      type: "structure",
      members: {
        TransitGateways: {
          target: "com.amazonaws.ec2#TransitGatewayList",
          locationName: "transitGatewaySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrunkInterfaceAssociationsRequest": {
      type: "structure",
      members: {
        AssociationIds: {
          target: "com.amazonaws.ec2#TrunkInterfaceAssociationIdList",
          locationName: "AssociationId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeTrunkInterfaceAssociationsMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeTrunkInterfaceAssociationsResult": {
      type: "structure",
      members: {
        InterfaceAssociations: {
          target: "com.amazonaws.ec2#TrunkInterfaceAssociationList",
          locationName: "interfaceAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessEndpointsRequest": {
      type: "structure",
      members: {
        VerifiedAccessEndpointIds: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointIdList",
          locationName: "VerifiedAccessEndpointId",
        },
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeVerifiedAccessEndpointsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessEndpointsResult": {
      type: "structure",
      members: {
        VerifiedAccessEndpoints: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointList",
          locationName: "verifiedAccessEndpointSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessGroupsRequest": {
      type: "structure",
      members: {
        VerifiedAccessGroupIds: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupIdList",
          locationName: "VerifiedAccessGroupId",
        },
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeVerifiedAccessGroupMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessGroupsResult": {
      type: "structure",
      members: {
        VerifiedAccessGroups: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupList",
          locationName: "verifiedAccessGroupSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessInstanceLoggingConfigurationsRequest":
      {
        type: "structure",
        members: {
          VerifiedAccessInstanceIds: {
            target: "com.amazonaws.ec2#VerifiedAccessInstanceIdList",
            locationName: "VerifiedAccessInstanceId",
          },
          MaxResults: {
            target:
              "com.amazonaws.ec2#DescribeVerifiedAccessInstanceLoggingConfigurationsMaxResults",
          },
          NextToken: {
            target: "com.amazonaws.ec2#NextToken",
          },
          Filters: {
            target: "com.amazonaws.ec2#FilterList",
            locationName: "Filter",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#DescribeVerifiedAccessInstanceLoggingConfigurationsResult":
      {
        type: "structure",
        members: {
          LoggingConfigurations: {
            target:
              "com.amazonaws.ec2#VerifiedAccessInstanceLoggingConfigurationList",
            locationName: "loggingConfigurationSet",
          },
          NextToken: {
            target: "com.amazonaws.ec2#NextToken",
            locationName: "nextToken",
          },
        },
      },
    "com.amazonaws.ec2#DescribeVerifiedAccessInstancesRequest": {
      type: "structure",
      members: {
        VerifiedAccessInstanceIds: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceIdList",
          locationName: "VerifiedAccessInstanceId",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeVerifiedAccessInstancesMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessInstancesResult": {
      type: "structure",
      members: {
        VerifiedAccessInstances: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceList",
          locationName: "verifiedAccessInstanceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessTrustProvidersRequest": {
      type: "structure",
      members: {
        VerifiedAccessTrustProviderIds: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderIdList",
          locationName: "VerifiedAccessTrustProviderId",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeVerifiedAccessTrustProvidersMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessTrustProvidersResult": {
      type: "structure",
      members: {
        VerifiedAccessTrustProviders: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderList",
          locationName: "verifiedAccessTrustProviderSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumeAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#VolumeAttributeName",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumeAttributeResult": {
      type: "structure",
      members: {
        AutoEnableIO: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "autoEnableIO",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumeStatusRequest": {
      type: "structure",
      members: {
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        VolumeIds: {
          target: "com.amazonaws.ec2#VolumeIdStringList",
          locationName: "VolumeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumeStatusResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        VolumeStatuses: {
          target: "com.amazonaws.ec2#VolumeStatusList",
          locationName: "volumeStatusSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumesRequest": {
      type: "structure",
      members: {
        VolumeIds: {
          target: "com.amazonaws.ec2#VolumeIdStringList",
          locationName: "VolumeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumesResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Volumes: {
          target: "com.amazonaws.ec2#VolumeList",
          locationName: "volumeSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumesModificationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VolumeIds: {
          target: "com.amazonaws.ec2#VolumeIdStringList",
          locationName: "VolumeId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVolumesModificationsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        VolumesModifications: {
          target: "com.amazonaws.ec2#VolumeModificationList",
          locationName: "volumeModificationSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#VpcAttributeName",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcAttributeResult": {
      type: "structure",
      members: {
        EnableDnsHostnames: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "enableDnsHostnames",
        },
        EnableDnsSupport: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "enableDnsSupport",
        },
        EnableNetworkAddressUsageMetrics: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "enableNetworkAddressUsageMetrics",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcBlockPublicAccessExclusionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        ExclusionIds: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionIdList",
          locationName: "ExclusionId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeVpcBlockPublicAccessExclusionsMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcBlockPublicAccessExclusionsResult": {
      type: "structure",
      members: {
        VpcBlockPublicAccessExclusions: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionList",
          locationName: "vpcBlockPublicAccessExclusionSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcBlockPublicAccessOptionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcBlockPublicAccessOptionsResult": {
      type: "structure",
      members: {
        VpcBlockPublicAccessOptions: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessOptions",
          locationName: "vpcBlockPublicAccessOptions",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcClassicLinkRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcIds: {
          target: "com.amazonaws.ec2#VpcClassicLinkIdList",
          locationName: "VpcId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcClassicLinkResult": {
      type: "structure",
      members: {
        Vpcs: {
          target: "com.amazonaws.ec2#VpcClassicLinkList",
          locationName: "vpcSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportRequest": {
      type: "structure",
      members: {
        VpcIds: {
          target: "com.amazonaws.ec2#VpcClassicLinkIdList",
          locationName: "VpcIds",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportMaxResults",
          locationName: "maxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportNextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportNextToken",
          locationName: "nextToken",
        },
        Vpcs: {
          target: "com.amazonaws.ec2#ClassicLinkDnsSupportList",
          locationName: "vpcs",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointAssociationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VpcEndpointIds: {
          target: "com.amazonaws.ec2#VpcEndpointIdList",
          locationName: "VpcEndpointId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#MaxResults2",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointAssociationsResult": {
      type: "structure",
      members: {
        VpcEndpointAssociations: {
          target: "com.amazonaws.ec2#VpcEndpointAssociationSet",
          locationName: "vpcEndpointAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointConnectionNotificationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ConnectionNotificationId: {
          target: "com.amazonaws.ec2#ConnectionNotificationId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointConnectionNotificationsResult": {
      type: "structure",
      members: {
        ConnectionNotificationSet: {
          target: "com.amazonaws.ec2#ConnectionNotificationSet",
          locationName: "connectionNotificationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointConnectionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointConnectionsResult": {
      type: "structure",
      members: {
        VpcEndpointConnections: {
          target: "com.amazonaws.ec2#VpcEndpointConnectionSet",
          locationName: "vpcEndpointConnectionSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointServiceConfigurationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceIds: {
          target: "com.amazonaws.ec2#VpcEndpointServiceIdList",
          locationName: "ServiceId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointServiceConfigurationsResult": {
      type: "structure",
      members: {
        ServiceConfigurations: {
          target: "com.amazonaws.ec2#ServiceConfigurationSet",
          locationName: "serviceConfigurationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointServicePermissionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointServicePermissionsResult": {
      type: "structure",
      members: {
        AllowedPrincipals: {
          target: "com.amazonaws.ec2#AllowedPrincipalSet",
          locationName: "allowedPrincipals",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointServicesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceNames: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "ServiceName",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        ServiceRegions: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "ServiceRegion",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointServicesResult": {
      type: "structure",
      members: {
        ServiceNames: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "serviceNameSet",
        },
        ServiceDetails: {
          target: "com.amazonaws.ec2#ServiceDetailSet",
          locationName: "serviceDetailSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VpcEndpointIds: {
          target: "com.amazonaws.ec2#VpcEndpointIdList",
          locationName: "VpcEndpointId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcEndpointsResult": {
      type: "structure",
      members: {
        VpcEndpoints: {
          target: "com.amazonaws.ec2#VpcEndpointSet",
          locationName: "vpcEndpointSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcPeeringConnectionsRequest": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeVpcPeeringConnectionsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcPeeringConnectionIds: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionIdList",
          locationName: "VpcPeeringConnectionId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcPeeringConnectionsResult": {
      type: "structure",
      members: {
        VpcPeeringConnections: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionList",
          locationName: "vpcPeeringConnectionSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        VpcIds: {
          target: "com.amazonaws.ec2#VpcIdStringList",
          locationName: "VpcId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#DescribeVpcsMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        Vpcs: {
          target: "com.amazonaws.ec2#VpcList",
          locationName: "vpcSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpnConnectionsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        VpnConnectionIds: {
          target: "com.amazonaws.ec2#VpnConnectionIdStringList",
          locationName: "VpnConnectionId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpnConnectionsResult": {
      type: "structure",
      members: {
        VpnConnections: {
          target: "com.amazonaws.ec2#VpnConnectionList",
          locationName: "vpnConnectionSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpnGatewaysRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        VpnGatewayIds: {
          target: "com.amazonaws.ec2#VpnGatewayIdStringList",
          locationName: "VpnGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpnGatewaysResult": {
      type: "structure",
      members: {
        VpnGateways: {
          target: "com.amazonaws.ec2#VpnGatewayList",
          locationName: "vpnGatewaySet",
        },
      },
    },
    "com.amazonaws.ec2#DetachClassicLinkVpcRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#DetachClassicLinkVpcResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DetachInternetGatewayRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InternetGatewayId: {
          target: "com.amazonaws.ec2#InternetGatewayId",
          locationName: "internetGatewayId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#DetachNetworkInterfaceRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        AttachmentId: {
          target: "com.amazonaws.ec2#NetworkInterfaceAttachmentId",
          locationName: "attachmentId",
        },
        Force: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "force",
        },
      },
    },
    "com.amazonaws.ec2#DetachVerifiedAccessTrustProviderRequest": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        VerifiedAccessTrustProviderId: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DetachVerifiedAccessTrustProviderResult": {
      type: "structure",
      members: {
        VerifiedAccessTrustProvider: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProvider",
          locationName: "verifiedAccessTrustProvider",
        },
        VerifiedAccessInstance: {
          target: "com.amazonaws.ec2#VerifiedAccessInstance",
          locationName: "verifiedAccessInstance",
        },
      },
    },
    "com.amazonaws.ec2#DetachVolumeRequest": {
      type: "structure",
      members: {
        Device: {
          target: "com.amazonaws.ec2#String",
        },
        Force: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceIdForResolver",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeIdWithResolver",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DetachVpnGatewayRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DisableAddressTransferRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableAddressTransferResult": {
      type: "structure",
      members: {
        AddressTransfer: {
          target: "com.amazonaws.ec2#AddressTransfer",
          locationName: "addressTransfer",
        },
      },
    },
    "com.amazonaws.ec2#DisableAllowedImagesSettingsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableAllowedImagesSettingsResult": {
      type: "structure",
      members: {
        AllowedImagesSettingsState: {
          target: "com.amazonaws.ec2#AllowedImagesSettingsDisabledState",
          locationName: "allowedImagesSettingsState",
        },
      },
    },
    "com.amazonaws.ec2#DisableAwsNetworkPerformanceMetricSubscriptionRequest": {
      type: "structure",
      members: {
        Source: {
          target: "com.amazonaws.ec2#String",
        },
        Destination: {
          target: "com.amazonaws.ec2#String",
        },
        Metric: {
          target: "com.amazonaws.ec2#MetricType",
        },
        Statistic: {
          target: "com.amazonaws.ec2#StatisticType",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableAwsNetworkPerformanceMetricSubscriptionResult": {
      type: "structure",
      members: {
        Output: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "output",
        },
      },
    },
    "com.amazonaws.ec2#DisableEbsEncryptionByDefaultRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableEbsEncryptionByDefaultResult": {
      type: "structure",
      members: {
        EbsEncryptionByDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsEncryptionByDefault",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastLaunchRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        Force: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastLaunchResult": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#FastLaunchResourceType",
          locationName: "resourceType",
        },
        SnapshotConfiguration: {
          target: "com.amazonaws.ec2#FastLaunchSnapshotConfigurationResponse",
          locationName: "snapshotConfiguration",
        },
        LaunchTemplate: {
          target:
            "com.amazonaws.ec2#FastLaunchLaunchTemplateSpecificationResponse",
          locationName: "launchTemplate",
        },
        MaxParallelLaunches: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxParallelLaunches",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#FastLaunchStateCode",
          locationName: "state",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateTransitionReason",
        },
        StateTransitionTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "stateTransitionTime",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoresRequest": {
      type: "structure",
      members: {
        AvailabilityZones: {
          target: "com.amazonaws.ec2#AvailabilityZoneStringList",
          locationName: "AvailabilityZone",
        },
        SourceSnapshotIds: {
          target: "com.amazonaws.ec2#SnapshotIdStringList",
          locationName: "SourceSnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoresResult": {
      type: "structure",
      members: {
        Successful: {
          target: "com.amazonaws.ec2#DisableFastSnapshotRestoreSuccessSet",
          locationName: "successful",
        },
        Unsuccessful: {
          target: "com.amazonaws.ec2#DisableFastSnapshotRestoreErrorSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageBlockPublicAccessRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageBlockPublicAccessResult": {
      type: "structure",
      members: {
        ImageBlockPublicAccessState: {
          target: "com.amazonaws.ec2#ImageBlockPublicAccessDisabledState",
          locationName: "imageBlockPublicAccessState",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageDeprecationRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageDeprecationResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageDeregistrationProtectionRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableImageDeregistrationProtectionResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#String",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisableIpamOrganizationAdminAccountRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DelegatedAdminAccountId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DisableIpamOrganizationAdminAccountResult": {
      type: "structure",
      members: {
        Success: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "success",
        },
      },
    },
    "com.amazonaws.ec2#DisableRouteServerPropagationRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableRouteServerPropagationResult": {
      type: "structure",
      members: {
        RouteServerPropagation: {
          target: "com.amazonaws.ec2#RouteServerPropagation",
          locationName: "routeServerPropagation",
        },
      },
    },
    "com.amazonaws.ec2#DisableSerialConsoleAccessRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableSerialConsoleAccessResult": {
      type: "structure",
      members: {
        SerialConsoleAccessEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "serialConsoleAccessEnabled",
        },
      },
    },
    "com.amazonaws.ec2#DisableSnapshotBlockPublicAccessRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableSnapshotBlockPublicAccessResult": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SnapshotBlockPublicAccessState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#DisableTransitGatewayRouteTablePropagationRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
        },
      },
    },
    "com.amazonaws.ec2#DisableTransitGatewayRouteTablePropagationResult": {
      type: "structure",
      members: {
        Propagation: {
          target: "com.amazonaws.ec2#TransitGatewayPropagation",
          locationName: "propagation",
        },
      },
    },
    "com.amazonaws.ec2#DisableVgwRoutePropagationRequest": {
      type: "structure",
      members: {
        GatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisableVpcClassicLinkRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#DisableVpcClassicLinkResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisableVpcClassicLinkDnsSupportRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "VpcId",
        },
      },
    },
    "com.amazonaws.ec2#DisableVpcClassicLinkDnsSupportResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateAddressRequest": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#ElasticIpAssociationId",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#EipAllocationPublicIp",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateCapacityReservationBillingOwnerRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        UnusedReservationBillingOwnerId: {
          target: "com.amazonaws.ec2#AccountID",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateCapacityReservationBillingOwnerResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateClientVpnTargetNetworkRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateClientVpnTargetNetworkResult": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        Status: {
          target: "com.amazonaws.ec2#AssociationStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateEnclaveCertificateIamRoleRequest": {
      type: "structure",
      members: {
        CertificateArn: {
          target: "com.amazonaws.ec2#CertificateId",
        },
        RoleArn: {
          target: "com.amazonaws.ec2#RoleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateEnclaveCertificateIamRoleResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateIamInstanceProfileRequest": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociationId",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateIamInstanceProfileResult": {
      type: "structure",
      members: {
        IamInstanceProfileAssociation: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociation",
          locationName: "iamInstanceProfileAssociation",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateInstanceEventWindowRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceEventWindowId: {
          target: "com.amazonaws.ec2#InstanceEventWindowId",
        },
        AssociationTarget: {
          target: "com.amazonaws.ec2#InstanceEventWindowDisassociationRequest",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateInstanceEventWindowResult": {
      type: "structure",
      members: {
        InstanceEventWindow: {
          target: "com.amazonaws.ec2#InstanceEventWindow",
          locationName: "instanceEventWindow",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateIpamByoasnRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Asn: {
          target: "com.amazonaws.ec2#String",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateIpamByoasnResult": {
      type: "structure",
      members: {
        AsnAssociation: {
          target: "com.amazonaws.ec2#AsnAssociation",
          locationName: "asnAssociation",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateIpamResourceDiscoveryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryAssociationId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociationId",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateIpamResourceDiscoveryResult": {
      type: "structure",
      members: {
        IpamResourceDiscoveryAssociation: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociation",
          locationName: "ipamResourceDiscoveryAssociation",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateNatGatewayAddressRequest": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
        },
        AssociationIds: {
          target: "com.amazonaws.ec2#EipAssociationIdList",
          locationName: "AssociationId",
        },
        MaxDrainDurationSeconds: {
          target: "com.amazonaws.ec2#DrainSeconds",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateNatGatewayAddressResult": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "natGatewayId",
        },
        NatGatewayAddresses: {
          target: "com.amazonaws.ec2#NatGatewayAddressList",
          locationName: "natGatewayAddressSet",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateRouteServerRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateRouteServerResult": {
      type: "structure",
      members: {
        RouteServerAssociation: {
          target: "com.amazonaws.ec2#RouteServerAssociation",
          locationName: "routeServerAssociation",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateRouteTableRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#RouteTableAssociationId",
          locationName: "associationId",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateSecurityGroupVpcRequest": {
      type: "structure",
      members: {
        GroupId: {
          target:
            "com.amazonaws.ec2#DisassociateSecurityGroupVpcSecurityGroupId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateSecurityGroupVpcResult": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SecurityGroupVpcAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateSubnetCidrBlockRequest": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#SubnetCidrAssociationId",
          locationName: "associationId",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateSubnetCidrBlockResult": {
      type: "structure",
      members: {
        Ipv6CidrBlockAssociation: {
          target: "com.amazonaws.ec2#SubnetIpv6CidrBlockAssociation",
          locationName: "ipv6CidrBlockAssociation",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTransitGatewayMulticastDomainRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#TransitGatewaySubnetIdList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTransitGatewayMulticastDomainResult": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociations",
          locationName: "associations",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTransitGatewayPolicyTableRequest": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTransitGatewayPolicyTableResult": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableAssociation",
          locationName: "association",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTransitGatewayRouteTableRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTransitGatewayRouteTableResult": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#TransitGatewayAssociation",
          locationName: "association",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTrunkInterfaceRequest": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#TrunkInterfaceAssociationId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateTrunkInterfaceResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateVpcCidrBlockRequest": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#VpcCidrAssociationId",
          locationName: "associationId",
        },
      },
    },
    "com.amazonaws.ec2#DisassociateVpcCidrBlockResult": {
      type: "structure",
      members: {
        Ipv6CidrBlockAssociation: {
          target: "com.amazonaws.ec2#VpcIpv6CidrBlockAssociation",
          locationName: "ipv6CidrBlockAssociation",
        },
        CidrBlockAssociation: {
          target: "com.amazonaws.ec2#VpcCidrBlockAssociation",
          locationName: "cidrBlockAssociation",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#EnableAddressTransferRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        TransferAccountId: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableAddressTransferResult": {
      type: "structure",
      members: {
        AddressTransfer: {
          target: "com.amazonaws.ec2#AddressTransfer",
          locationName: "addressTransfer",
        },
      },
    },
    "com.amazonaws.ec2#EnableAllowedImagesSettingsRequest": {
      type: "structure",
      members: {
        AllowedImagesSettingsState: {
          target: "com.amazonaws.ec2#AllowedImagesSettingsEnabledState",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableAllowedImagesSettingsResult": {
      type: "structure",
      members: {
        AllowedImagesSettingsState: {
          target: "com.amazonaws.ec2#AllowedImagesSettingsEnabledState",
          locationName: "allowedImagesSettingsState",
        },
      },
    },
    "com.amazonaws.ec2#EnableAwsNetworkPerformanceMetricSubscriptionRequest": {
      type: "structure",
      members: {
        Source: {
          target: "com.amazonaws.ec2#String",
        },
        Destination: {
          target: "com.amazonaws.ec2#String",
        },
        Metric: {
          target: "com.amazonaws.ec2#MetricType",
        },
        Statistic: {
          target: "com.amazonaws.ec2#StatisticType",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableAwsNetworkPerformanceMetricSubscriptionResult": {
      type: "structure",
      members: {
        Output: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "output",
        },
      },
    },
    "com.amazonaws.ec2#EnableEbsEncryptionByDefaultRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableEbsEncryptionByDefaultResult": {
      type: "structure",
      members: {
        EbsEncryptionByDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsEncryptionByDefault",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastLaunchRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#String",
        },
        SnapshotConfiguration: {
          target: "com.amazonaws.ec2#FastLaunchSnapshotConfigurationRequest",
        },
        LaunchTemplate: {
          target:
            "com.amazonaws.ec2#FastLaunchLaunchTemplateSpecificationRequest",
        },
        MaxParallelLaunches: {
          target: "com.amazonaws.ec2#Integer",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastLaunchResult": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#FastLaunchResourceType",
          locationName: "resourceType",
        },
        SnapshotConfiguration: {
          target: "com.amazonaws.ec2#FastLaunchSnapshotConfigurationResponse",
          locationName: "snapshotConfiguration",
        },
        LaunchTemplate: {
          target:
            "com.amazonaws.ec2#FastLaunchLaunchTemplateSpecificationResponse",
          locationName: "launchTemplate",
        },
        MaxParallelLaunches: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxParallelLaunches",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#FastLaunchStateCode",
          locationName: "state",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateTransitionReason",
        },
        StateTransitionTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "stateTransitionTime",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoresRequest": {
      type: "structure",
      members: {
        AvailabilityZones: {
          target: "com.amazonaws.ec2#AvailabilityZoneStringList",
          locationName: "AvailabilityZone",
        },
        SourceSnapshotIds: {
          target: "com.amazonaws.ec2#SnapshotIdStringList",
          locationName: "SourceSnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoresResult": {
      type: "structure",
      members: {
        Successful: {
          target: "com.amazonaws.ec2#EnableFastSnapshotRestoreSuccessSet",
          locationName: "successful",
        },
        Unsuccessful: {
          target: "com.amazonaws.ec2#EnableFastSnapshotRestoreErrorSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageBlockPublicAccessRequest": {
      type: "structure",
      members: {
        ImageBlockPublicAccessState: {
          target: "com.amazonaws.ec2#ImageBlockPublicAccessEnabledState",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageBlockPublicAccessResult": {
      type: "structure",
      members: {
        ImageBlockPublicAccessState: {
          target: "com.amazonaws.ec2#ImageBlockPublicAccessEnabledState",
          locationName: "imageBlockPublicAccessState",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageDeprecationRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DeprecateAt: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageDeprecationResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageDeregistrationProtectionRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        WithCooldown: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableImageDeregistrationProtectionResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#String",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#EnableIpamOrganizationAdminAccountRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DelegatedAdminAccountId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#EnableIpamOrganizationAdminAccountResult": {
      type: "structure",
      members: {
        Success: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "success",
        },
      },
    },
    "com.amazonaws.ec2#EnableReachabilityAnalyzerOrganizationSharingRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableReachabilityAnalyzerOrganizationSharingResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "returnValue",
        },
      },
    },
    "com.amazonaws.ec2#EnableRouteServerPropagationRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableRouteServerPropagationResult": {
      type: "structure",
      members: {
        RouteServerPropagation: {
          target: "com.amazonaws.ec2#RouteServerPropagation",
          locationName: "routeServerPropagation",
        },
      },
    },
    "com.amazonaws.ec2#EnableSerialConsoleAccessRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableSerialConsoleAccessResult": {
      type: "structure",
      members: {
        SerialConsoleAccessEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "serialConsoleAccessEnabled",
        },
      },
    },
    "com.amazonaws.ec2#EnableSnapshotBlockPublicAccessRequest": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SnapshotBlockPublicAccessState",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableSnapshotBlockPublicAccessResult": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SnapshotBlockPublicAccessState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#EnableTransitGatewayRouteTablePropagationRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
        },
      },
    },
    "com.amazonaws.ec2#EnableTransitGatewayRouteTablePropagationResult": {
      type: "structure",
      members: {
        Propagation: {
          target: "com.amazonaws.ec2#TransitGatewayPropagation",
          locationName: "propagation",
        },
      },
    },
    "com.amazonaws.ec2#EnableVgwRoutePropagationRequest": {
      type: "structure",
      members: {
        GatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#EnableVolumeIORequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
          locationName: "volumeId",
        },
      },
    },
    "com.amazonaws.ec2#EnableVpcClassicLinkRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#EnableVpcClassicLinkResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#EnableVpcClassicLinkDnsSupportRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "VpcId",
        },
      },
    },
    "com.amazonaws.ec2#EnableVpcClassicLinkDnsSupportResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ExportClientVpnClientCertificateRevocationListRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ExportClientVpnClientCertificateRevocationListResult": {
      type: "structure",
      members: {
        CertificateRevocationList: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateRevocationList",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientCertificateRevocationListStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#ExportClientVpnClientConfigurationRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ExportClientVpnClientConfigurationResult": {
      type: "structure",
      members: {
        ClientConfiguration: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#ExportImageRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DiskImageFormat: {
          target: "com.amazonaws.ec2#DiskImageFormat",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        S3ExportLocation: {
          target: "com.amazonaws.ec2#ExportTaskS3LocationRequest",
        },
        RoleName: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#ExportImageResult": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        DiskImageFormat: {
          target: "com.amazonaws.ec2#DiskImageFormat",
          locationName: "diskImageFormat",
        },
        ExportImageTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "exportImageTaskId",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        RoleName: {
          target: "com.amazonaws.ec2#String",
          locationName: "roleName",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        S3ExportLocation: {
          target: "com.amazonaws.ec2#ExportTaskS3Location",
          locationName: "s3ExportLocation",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ExportTransitGatewayRoutesRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ExportTransitGatewayRoutesResult": {
      type: "structure",
      members: {
        S3Location: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Location",
        },
      },
    },
    "com.amazonaws.ec2#ExportVerifiedAccessInstanceClientConfigurationRequest":
      {
        type: "structure",
        members: {
          VerifiedAccessInstanceId: {
            target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#ExportVerifiedAccessInstanceClientConfigurationResult": {
      type: "structure",
      members: {
        Version: {
          target: "com.amazonaws.ec2#String",
          locationName: "version",
        },
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessInstanceId",
        },
        Region: {
          target: "com.amazonaws.ec2#String",
          locationName: "region",
        },
        DeviceTrustProviders: {
          target: "com.amazonaws.ec2#DeviceTrustProviderTypeList",
          locationName: "deviceTrustProviderSet",
        },
        UserTrustProvider: {
          target:
            "com.amazonaws.ec2#VerifiedAccessInstanceUserTrustProviderClientConfiguration",
          locationName: "userTrustProvider",
        },
        OpenVpnConfigurations: {
          target:
            "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfigurationList",
          locationName: "openVpnConfigurationSet",
        },
      },
    },
    "com.amazonaws.ec2#GetActiveVpnTunnelStatusRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        VpnTunnelOutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetActiveVpnTunnelStatusResult": {
      type: "structure",
      members: {
        ActiveVpnTunnelStatus: {
          target: "com.amazonaws.ec2#ActiveVpnTunnelStatus",
          locationName: "activeVpnTunnelStatus",
        },
      },
    },
    "com.amazonaws.ec2#GetAllowedImagesSettingsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetAllowedImagesSettingsResult": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        ImageCriteria: {
          target: "com.amazonaws.ec2#ImageCriterionList",
          locationName: "imageCriterionSet",
        },
        ManagedBy: {
          target: "com.amazonaws.ec2#ManagedBy",
          locationName: "managedBy",
        },
      },
    },
    "com.amazonaws.ec2#GetAssociatedEnclaveCertificateIamRolesRequest": {
      type: "structure",
      members: {
        CertificateArn: {
          target: "com.amazonaws.ec2#CertificateId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetAssociatedEnclaveCertificateIamRolesResult": {
      type: "structure",
      members: {
        AssociatedRoles: {
          target: "com.amazonaws.ec2#AssociatedRolesList",
          locationName: "associatedRoleSet",
        },
      },
    },
    "com.amazonaws.ec2#GetAssociatedIpv6PoolCidrsRequest": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#Ipv6PoolEc2Id",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Ipv6PoolMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetAssociatedIpv6PoolCidrsResult": {
      type: "structure",
      members: {
        Ipv6CidrAssociations: {
          target: "com.amazonaws.ec2#Ipv6CidrAssociationSet",
          locationName: "ipv6CidrAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetAwsNetworkPerformanceDataRequest": {
      type: "structure",
      members: {
        DataQueries: {
          target: "com.amazonaws.ec2#DataQueries",
          locationName: "DataQuery",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetAwsNetworkPerformanceDataResult": {
      type: "structure",
      members: {
        DataResponses: {
          target: "com.amazonaws.ec2#DataResponses",
          locationName: "dataResponseSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetCapacityReservationUsageRequest": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#GetCapacityReservationUsageRequestMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetCapacityReservationUsageResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        TotalInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalInstanceCount",
        },
        AvailableInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableInstanceCount",
        },
        State: {
          target: "com.amazonaws.ec2#CapacityReservationState",
          locationName: "state",
        },
        InstanceUsages: {
          target: "com.amazonaws.ec2#InstanceUsageSet",
          locationName: "instanceUsageSet",
        },
      },
    },
    "com.amazonaws.ec2#GetCoipPoolUsageRequest": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolCoipId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#CoipPoolMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetCoipPoolUsageResult": {
      type: "structure",
      members: {
        CoipPoolId: {
          target: "com.amazonaws.ec2#String",
          locationName: "coipPoolId",
        },
        CoipAddressUsages: {
          target: "com.amazonaws.ec2#CoipAddressUsageSet",
          locationName: "coipAddressUsageSet",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayRouteTableId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetConsoleOutputRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        Latest: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#GetConsoleOutputResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "timestamp",
        },
        Output: {
          target: "com.amazonaws.ec2#String",
          locationName: "output",
        },
      },
    },
    "com.amazonaws.ec2#GetConsoleScreenshotRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        WakeUp: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetConsoleScreenshotResult": {
      type: "structure",
      members: {
        ImageData: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageData",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
      },
    },
    "com.amazonaws.ec2#GetDeclarativePoliciesReportSummaryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ReportId: {
          target: "com.amazonaws.ec2#DeclarativePoliciesReportId",
        },
      },
    },
    "com.amazonaws.ec2#GetDeclarativePoliciesReportSummaryResult": {
      type: "structure",
      members: {
        ReportId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reportId",
        },
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Bucket",
        },
        S3Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Prefix",
        },
        TargetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "targetId",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endTime",
        },
        NumberOfAccounts: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "numberOfAccounts",
        },
        NumberOfFailedAccounts: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "numberOfFailedAccounts",
        },
        AttributeSummaries: {
          target: "com.amazonaws.ec2#AttributeSummaryList",
          locationName: "attributeSummarySet",
        },
      },
    },
    "com.amazonaws.ec2#GetDefaultCreditSpecificationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#UnlimitedSupportedInstanceFamily",
        },
      },
    },
    "com.amazonaws.ec2#GetDefaultCreditSpecificationResult": {
      type: "structure",
      members: {
        InstanceFamilyCreditSpecification: {
          target: "com.amazonaws.ec2#InstanceFamilyCreditSpecification",
          locationName: "instanceFamilyCreditSpecification",
        },
      },
    },
    "com.amazonaws.ec2#GetEbsDefaultKmsKeyIdRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetEbsDefaultKmsKeyIdResult": {
      type: "structure",
      members: {
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
      },
    },
    "com.amazonaws.ec2#GetEbsEncryptionByDefaultRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetEbsEncryptionByDefaultResult": {
      type: "structure",
      members: {
        EbsEncryptionByDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsEncryptionByDefault",
        },
        SseType: {
          target: "com.amazonaws.ec2#SSEType",
          locationName: "sseType",
        },
      },
    },
    "com.amazonaws.ec2#GetFlowLogsIntegrationTemplateRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FlowLogId: {
          target: "com.amazonaws.ec2#VpcFlowLogId",
        },
        ConfigDeliveryS3DestinationArn: {
          target: "com.amazonaws.ec2#String",
        },
        IntegrateServices: {
          target: "com.amazonaws.ec2#IntegrateServices",
          locationName: "IntegrateService",
        },
      },
    },
    "com.amazonaws.ec2#GetFlowLogsIntegrationTemplateResult": {
      type: "structure",
      members: {
        Result: {
          target: "com.amazonaws.ec2#String",
          locationName: "result",
        },
      },
    },
    "com.amazonaws.ec2#GetGroupsForCapacityReservationRequest": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#GetGroupsForCapacityReservationRequestMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetGroupsForCapacityReservationResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        CapacityReservationGroups: {
          target: "com.amazonaws.ec2#CapacityReservationGroupSet",
          locationName: "capacityReservationGroupSet",
        },
      },
    },
    "com.amazonaws.ec2#GetHostReservationPurchasePreviewRequest": {
      type: "structure",
      members: {
        HostIdSet: {
          target: "com.amazonaws.ec2#RequestHostIdSet",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
        },
      },
    },
    "com.amazonaws.ec2#GetHostReservationPurchasePreviewResult": {
      type: "structure",
      members: {
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        Purchase: {
          target: "com.amazonaws.ec2#PurchaseSet",
          locationName: "purchase",
        },
        TotalHourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "totalHourlyPrice",
        },
        TotalUpfrontPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "totalUpfrontPrice",
        },
      },
    },
    "com.amazonaws.ec2#GetImageBlockPublicAccessStateRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetImageBlockPublicAccessStateResult": {
      type: "structure",
      members: {
        ImageBlockPublicAccessState: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageBlockPublicAccessState",
        },
        ManagedBy: {
          target: "com.amazonaws.ec2#ManagedBy",
          locationName: "managedBy",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceMetadataDefaultsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceMetadataDefaultsResult": {
      type: "structure",
      members: {
        AccountLevel: {
          target: "com.amazonaws.ec2#InstanceMetadataDefaultsResponse",
          locationName: "accountLevel",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceTpmEkPubRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "InstanceId",
        },
        KeyType: {
          target: "com.amazonaws.ec2#EkPubKeyType",
        },
        KeyFormat: {
          target: "com.amazonaws.ec2#EkPubKeyFormat",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceTpmEkPubResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        KeyType: {
          target: "com.amazonaws.ec2#EkPubKeyType",
          locationName: "keyType",
        },
        KeyFormat: {
          target: "com.amazonaws.ec2#EkPubKeyFormat",
          locationName: "keyFormat",
        },
        KeyValue: {
          target: "com.amazonaws.ec2#EkPubKeyValue",
          locationName: "keyValue",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceTypesFromInstanceRequirementsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ArchitectureTypes: {
          target: "com.amazonaws.ec2#ArchitectureTypeSet",
          locationName: "ArchitectureType",
        },
        VirtualizationTypes: {
          target: "com.amazonaws.ec2#VirtualizationTypeSet",
          locationName: "VirtualizationType",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirementsRequest",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#Integer",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        Context: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceTypesFromInstanceRequirementsResult": {
      type: "structure",
      members: {
        InstanceTypes: {
          target:
            "com.amazonaws.ec2#InstanceTypeInfoFromInstanceRequirementsSet",
          locationName: "instanceTypeSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceUefiDataRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetInstanceUefiDataResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        UefiData: {
          target: "com.amazonaws.ec2#String",
          locationName: "uefiData",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamAddressHistoryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamAddressHistoryMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamAddressHistoryResult": {
      type: "structure",
      members: {
        HistoryRecords: {
          target: "com.amazonaws.ec2#IpamAddressHistoryRecordSet",
          locationName: "historyRecordSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamDiscoveredAccountsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
        },
        DiscoveryRegion: {
          target: "com.amazonaws.ec2#String",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamDiscoveredAccountsResult": {
      type: "structure",
      members: {
        IpamDiscoveredAccounts: {
          target: "com.amazonaws.ec2#IpamDiscoveredAccountSet",
          locationName: "ipamDiscoveredAccountSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamDiscoveredPublicAddressesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
        },
        AddressRegion: {
          target: "com.amazonaws.ec2#String",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamDiscoveredPublicAddressesResult": {
      type: "structure",
      members: {
        IpamDiscoveredPublicAddresses: {
          target: "com.amazonaws.ec2#IpamDiscoveredPublicAddressSet",
          locationName: "ipamDiscoveredPublicAddressSet",
        },
        OldestSampleTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "oldestSampleTime",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamDiscoveredResourceCidrsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamDiscoveredResourceCidrsResult": {
      type: "structure",
      members: {
        IpamDiscoveredResourceCidrs: {
          target: "com.amazonaws.ec2#IpamDiscoveredResourceCidrSet",
          locationName: "ipamDiscoveredResourceCidrSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamPoolAllocationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        IpamPoolAllocationId: {
          target: "com.amazonaws.ec2#IpamPoolAllocationId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#GetIpamPoolAllocationsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamPoolAllocationsResult": {
      type: "structure",
      members: {
        IpamPoolAllocations: {
          target: "com.amazonaws.ec2#IpamPoolAllocationSet",
          locationName: "ipamPoolAllocationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamPoolCidrsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamPoolCidrsResult": {
      type: "structure",
      members: {
        IpamPoolCidrs: {
          target: "com.amazonaws.ec2#IpamPoolCidrSet",
          locationName: "ipamPoolCidrSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamResourceCidrsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#IpamMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamResourceType",
        },
        ResourceTag: {
          target: "com.amazonaws.ec2#RequestIpamResourceTag",
        },
        ResourceOwner: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#GetIpamResourceCidrsResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
        IpamResourceCidrs: {
          target: "com.amazonaws.ec2#IpamResourceCidrSet",
          locationName: "ipamResourceCidrSet",
        },
      },
    },
    "com.amazonaws.ec2#GetLaunchTemplateDataRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
      },
    },
    "com.amazonaws.ec2#GetLaunchTemplateDataResult": {
      type: "structure",
      members: {
        LaunchTemplateData: {
          target: "com.amazonaws.ec2#ResponseLaunchTemplateData",
          locationName: "launchTemplateData",
        },
      },
    },
    "com.amazonaws.ec2#GetManagedPrefixListAssociationsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#GetManagedPrefixListAssociationsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetManagedPrefixListAssociationsResult": {
      type: "structure",
      members: {
        PrefixListAssociations: {
          target: "com.amazonaws.ec2#PrefixListAssociationSet",
          locationName: "prefixListAssociationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetManagedPrefixListEntriesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        TargetVersion: {
          target: "com.amazonaws.ec2#Long",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#PrefixListMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetManagedPrefixListEntriesResult": {
      type: "structure",
      members: {
        Entries: {
          target: "com.amazonaws.ec2#PrefixListEntrySet",
          locationName: "entrySet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetNetworkInsightsAccessScopeAnalysisFindingsRequest": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#GetNetworkInsightsAccessScopeAnalysisFindingsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetNetworkInsightsAccessScopeAnalysisFindingsResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
          locationName: "networkInsightsAccessScopeAnalysisId",
        },
        AnalysisStatus: {
          target: "com.amazonaws.ec2#AnalysisStatus",
          locationName: "analysisStatus",
        },
        AnalysisFindings: {
          target: "com.amazonaws.ec2#AccessScopeAnalysisFindingList",
          locationName: "analysisFindingSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetNetworkInsightsAccessScopeContentRequest": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetNetworkInsightsAccessScopeContentResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeContent: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeContent",
          locationName: "networkInsightsAccessScopeContent",
        },
      },
    },
    "com.amazonaws.ec2#GetPasswordDataRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#GetPasswordDataResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "timestamp",
        },
        PasswordData: {
          target: "com.amazonaws.ec2#PasswordData",
          locationName: "passwordData",
        },
      },
    },
    "com.amazonaws.ec2#GetReservedInstancesExchangeQuoteRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ReservedInstanceIds: {
          target: "com.amazonaws.ec2#ReservedInstanceIdSet",
          locationName: "ReservedInstanceId",
        },
        TargetConfigurations: {
          target: "com.amazonaws.ec2#TargetConfigurationRequestSet",
          locationName: "TargetConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#GetReservedInstancesExchangeQuoteResult": {
      type: "structure",
      members: {
        CurrencyCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "currencyCode",
        },
        IsValidExchange: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isValidExchange",
        },
        OutputReservedInstancesWillExpireAt: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "outputReservedInstancesWillExpireAt",
        },
        PaymentDue: {
          target: "com.amazonaws.ec2#String",
          locationName: "paymentDue",
        },
        ReservedInstanceValueRollup: {
          target: "com.amazonaws.ec2#ReservationValue",
          locationName: "reservedInstanceValueRollup",
        },
        ReservedInstanceValueSet: {
          target: "com.amazonaws.ec2#ReservedInstanceReservationValueSet",
          locationName: "reservedInstanceValueSet",
        },
        TargetConfigurationValueRollup: {
          target: "com.amazonaws.ec2#ReservationValue",
          locationName: "targetConfigurationValueRollup",
        },
        TargetConfigurationValueSet: {
          target: "com.amazonaws.ec2#TargetReservationValueSet",
          locationName: "targetConfigurationValueSet",
        },
        ValidationFailureReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "validationFailureReason",
        },
      },
    },
    "com.amazonaws.ec2#GetRouteServerAssociationsRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetRouteServerAssociationsResult": {
      type: "structure",
      members: {
        RouteServerAssociations: {
          target: "com.amazonaws.ec2#RouteServerAssociationsList",
          locationName: "routeServerAssociationSet",
        },
      },
    },
    "com.amazonaws.ec2#GetRouteServerPropagationsRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetRouteServerPropagationsResult": {
      type: "structure",
      members: {
        RouteServerPropagations: {
          target: "com.amazonaws.ec2#RouteServerPropagationsList",
          locationName: "routeServerPropagationSet",
        },
      },
    },
    "com.amazonaws.ec2#GetRouteServerRoutingDatabaseRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#RouteServerMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
      },
    },
    "com.amazonaws.ec2#GetRouteServerRoutingDatabaseResult": {
      type: "structure",
      members: {
        AreRoutesPersisted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "areRoutesPersisted",
        },
        Routes: {
          target: "com.amazonaws.ec2#RouteServerRouteList",
          locationName: "routeSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetSecurityGroupsForVpcRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#GetSecurityGroupsForVpcRequestMaxResults",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetSecurityGroupsForVpcResult": {
      type: "structure",
      members: {
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
        SecurityGroupForVpcs: {
          target: "com.amazonaws.ec2#SecurityGroupForVpcList",
          locationName: "securityGroupForVpcSet",
        },
      },
    },
    "com.amazonaws.ec2#GetSerialConsoleAccessStatusRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetSerialConsoleAccessStatusResult": {
      type: "structure",
      members: {
        SerialConsoleAccessEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "serialConsoleAccessEnabled",
        },
        ManagedBy: {
          target: "com.amazonaws.ec2#ManagedBy",
          locationName: "managedBy",
        },
      },
    },
    "com.amazonaws.ec2#GetSnapshotBlockPublicAccessStateRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetSnapshotBlockPublicAccessStateResult": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SnapshotBlockPublicAccessState",
          locationName: "state",
        },
        ManagedBy: {
          target: "com.amazonaws.ec2#ManagedBy",
          locationName: "managedBy",
        },
      },
    },
    "com.amazonaws.ec2#GetSpotPlacementScoresRequest": {
      type: "structure",
      members: {
        InstanceTypes: {
          target: "com.amazonaws.ec2#InstanceTypes",
          locationName: "InstanceType",
        },
        TargetCapacity: {
          target: "com.amazonaws.ec2#SpotPlacementScoresTargetCapacity",
        },
        TargetCapacityUnitType: {
          target: "com.amazonaws.ec2#TargetCapacityUnitType",
        },
        SingleAvailabilityZone: {
          target: "com.amazonaws.ec2#Boolean",
        },
        RegionNames: {
          target: "com.amazonaws.ec2#RegionNames",
          locationName: "RegionName",
        },
        InstanceRequirementsWithMetadata: {
          target: "com.amazonaws.ec2#InstanceRequirementsWithMetadataRequest",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#SpotPlacementScoresMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#GetSpotPlacementScoresResult": {
      type: "structure",
      members: {
        SpotPlacementScores: {
          target: "com.amazonaws.ec2#SpotPlacementScores",
          locationName: "spotPlacementScoreSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetSubnetCidrReservationsRequest": {
      type: "structure",
      members: {
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#GetSubnetCidrReservationsMaxResults",
        },
      },
    },
    "com.amazonaws.ec2#GetSubnetCidrReservationsResult": {
      type: "structure",
      members: {
        SubnetIpv4CidrReservations: {
          target: "com.amazonaws.ec2#SubnetCidrReservationList",
          locationName: "subnetIpv4CidrReservationSet",
        },
        SubnetIpv6CidrReservations: {
          target: "com.amazonaws.ec2#SubnetCidrReservationList",
          locationName: "subnetIpv6CidrReservationSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayAttachmentPropagationsRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayAttachmentPropagationsResult": {
      type: "structure",
      members: {
        TransitGatewayAttachmentPropagations: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentPropagationList",
          locationName: "transitGatewayAttachmentPropagations",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayMulticastDomainAssociationsRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayMulticastDomainAssociationsResult": {
      type: "structure",
      members: {
        MulticastDomainAssociations: {
          target:
            "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociationList",
          locationName: "multicastDomainAssociations",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayPolicyTableAssociationsRequest": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayPolicyTableAssociationsResult": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableAssociationList",
          locationName: "associations",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayPolicyTableEntriesRequest": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayPolicyTableEntriesResult": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableEntries: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableEntryList",
          locationName: "transitGatewayPolicyTableEntries",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayPrefixListReferencesRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayPrefixListReferencesResult": {
      type: "structure",
      members: {
        TransitGatewayPrefixListReferences: {
          target: "com.amazonaws.ec2#TransitGatewayPrefixListReferenceSet",
          locationName: "transitGatewayPrefixListReferenceSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayRouteTableAssociationsRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayRouteTableAssociationsResult": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAssociationList",
          locationName: "associations",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayRouteTablePropagationsRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetTransitGatewayRouteTablePropagationsResult": {
      type: "structure",
      members: {
        TransitGatewayRouteTablePropagations: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTablePropagationList",
          locationName: "transitGatewayRouteTablePropagations",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessEndpointPolicyRequest": {
      type: "structure",
      members: {
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessEndpointPolicyResult": {
      type: "structure",
      members: {
        PolicyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "policyEnabled",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyDocument",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessEndpointTargetsRequest": {
      type: "structure",
      members: {
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
          locationName: "VerifiedAccessEndpointId",
        },
        MaxResults: {
          target:
            "com.amazonaws.ec2#GetVerifiedAccessEndpointTargetsMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessEndpointTargetsResult": {
      type: "structure",
      members: {
        VerifiedAccessEndpointTargets: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointTargetList",
          locationName: "verifiedAccessEndpointTargetSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessGroupPolicyRequest": {
      type: "structure",
      members: {
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessGroupPolicyResult": {
      type: "structure",
      members: {
        PolicyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "policyEnabled",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyDocument",
        },
      },
    },
    "com.amazonaws.ec2#GetVpnConnectionDeviceSampleConfigurationRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        VpnConnectionDeviceTypeId: {
          target: "com.amazonaws.ec2#VpnConnectionDeviceTypeId",
        },
        InternetKeyExchangeVersion: {
          target: "com.amazonaws.ec2#String",
        },
        SampleType: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetVpnConnectionDeviceSampleConfigurationResult": {
      type: "structure",
      members: {
        VpnConnectionDeviceSampleConfiguration: {
          target: "com.amazonaws.ec2#VpnConnectionDeviceSampleConfiguration",
          locationName: "vpnConnectionDeviceSampleConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#GetVpnConnectionDeviceTypesRequest": {
      type: "structure",
      members: {
        MaxResults: {
          target: "com.amazonaws.ec2#GVCDMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetVpnConnectionDeviceTypesResult": {
      type: "structure",
      members: {
        VpnConnectionDeviceTypes: {
          target: "com.amazonaws.ec2#VpnConnectionDeviceTypeList",
          locationName: "vpnConnectionDeviceTypeSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#NextToken",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#GetVpnTunnelReplacementStatusRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        VpnTunnelOutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#GetVpnTunnelReplacementStatusResult": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
          locationName: "vpnConnectionId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
          locationName: "transitGatewayId",
        },
        CustomerGatewayId: {
          target: "com.amazonaws.ec2#CustomerGatewayId",
          locationName: "customerGatewayId",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
          locationName: "vpnGatewayId",
        },
        VpnTunnelOutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpnTunnelOutsideIpAddress",
        },
        MaintenanceDetails: {
          target: "com.amazonaws.ec2#MaintenanceDetails",
          locationName: "maintenanceDetails",
        },
      },
    },
    "com.amazonaws.ec2#ImportClientVpnClientCertificateRevocationListRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        CertificateRevocationList: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ImportClientVpnClientCertificateRevocationListResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ImportImageRequest": {
      type: "structure",
      members: {
        Architecture: {
          target: "com.amazonaws.ec2#String",
        },
        ClientData: {
          target: "com.amazonaws.ec2#ClientData",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DiskContainers: {
          target: "com.amazonaws.ec2#ImageDiskContainerList",
          locationName: "DiskContainer",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Hypervisor: {
          target: "com.amazonaws.ec2#String",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
        },
        LicenseType: {
          target: "com.amazonaws.ec2#String",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
        },
        RoleName: {
          target: "com.amazonaws.ec2#String",
        },
        LicenseSpecifications: {
          target:
            "com.amazonaws.ec2#ImportImageLicenseSpecificationListRequest",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        UsageOperation: {
          target: "com.amazonaws.ec2#String",
        },
        BootMode: {
          target: "com.amazonaws.ec2#BootModeValues",
        },
      },
    },
    "com.amazonaws.ec2#ImportImageResult": {
      type: "structure",
      members: {
        Architecture: {
          target: "com.amazonaws.ec2#String",
          locationName: "architecture",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        Hypervisor: {
          target: "com.amazonaws.ec2#String",
          locationName: "hypervisor",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        ImportTaskId: {
          target: "com.amazonaws.ec2#ImportImageTaskId",
          locationName: "importTaskId",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
          locationName: "kmsKeyId",
        },
        LicenseType: {
          target: "com.amazonaws.ec2#String",
          locationName: "licenseType",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
          locationName: "platform",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        SnapshotDetails: {
          target: "com.amazonaws.ec2#SnapshotDetailList",
          locationName: "snapshotDetailSet",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        LicenseSpecifications: {
          target:
            "com.amazonaws.ec2#ImportImageLicenseSpecificationListResponse",
          locationName: "licenseSpecifications",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        UsageOperation: {
          target: "com.amazonaws.ec2#String",
          locationName: "usageOperation",
        },
      },
    },
    "com.amazonaws.ec2#ImportInstanceRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        LaunchSpecification: {
          target: "com.amazonaws.ec2#ImportInstanceLaunchSpecification",
          locationName: "launchSpecification",
        },
        DiskImages: {
          target: "com.amazonaws.ec2#DiskImageList",
          locationName: "diskImage",
        },
        Platform: {
          target: "com.amazonaws.ec2#PlatformValues",
          locationName: "platform",
        },
      },
    },
    "com.amazonaws.ec2#ImportInstanceResult": {
      type: "structure",
      members: {
        ConversionTask: {
          target: "com.amazonaws.ec2#ConversionTask",
          locationName: "conversionTask",
        },
      },
    },
    "com.amazonaws.ec2#ImportKeyPairRequest": {
      type: "structure",
      members: {
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        PublicKeyMaterial: {
          target: "com.amazonaws.ec2#Blob",
          locationName: "publicKeyMaterial",
        },
      },
    },
    "com.amazonaws.ec2#ImportKeyPairResult": {
      type: "structure",
      members: {
        KeyFingerprint: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyFingerprint",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        KeyPairId: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyPairId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ImportSnapshotRequest": {
      type: "structure",
      members: {
        ClientData: {
          target: "com.amazonaws.ec2#ClientData",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DiskContainer: {
          target: "com.amazonaws.ec2#SnapshotDiskContainer",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
        },
        RoleName: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#ImportSnapshotResult": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        ImportTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "importTaskId",
        },
        SnapshotTaskDetail: {
          target: "com.amazonaws.ec2#SnapshotTaskDetail",
          locationName: "snapshotTaskDetail",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ImportVolumeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Image: {
          target: "com.amazonaws.ec2#DiskImageDetail",
          locationName: "image",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Volume: {
          target: "com.amazonaws.ec2#VolumeDetail",
          locationName: "volume",
        },
      },
    },
    "com.amazonaws.ec2#ImportVolumeResult": {
      type: "structure",
      members: {
        ConversionTask: {
          target: "com.amazonaws.ec2#ConversionTask",
          locationName: "conversionTask",
        },
      },
    },
    "com.amazonaws.ec2#ListImagesInRecycleBinRequest": {
      type: "structure",
      members: {
        ImageIds: {
          target: "com.amazonaws.ec2#ImageIdStringList",
          locationName: "ImageId",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#ListImagesInRecycleBinMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ListImagesInRecycleBinResult": {
      type: "structure",
      members: {
        Images: {
          target: "com.amazonaws.ec2#ImageRecycleBinInfoList",
          locationName: "imageSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#ListSnapshotsInRecycleBinRequest": {
      type: "structure",
      members: {
        MaxResults: {
          target: "com.amazonaws.ec2#ListSnapshotsInRecycleBinMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        SnapshotIds: {
          target: "com.amazonaws.ec2#SnapshotIdStringList",
          locationName: "SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ListSnapshotsInRecycleBinResult": {
      type: "structure",
      members: {
        Snapshots: {
          target: "com.amazonaws.ec2#SnapshotRecycleBinInfoList",
          locationName: "snapshotSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#LockSnapshotRequest": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LockMode: {
          target: "com.amazonaws.ec2#LockMode",
        },
        CoolOffPeriod: {
          target: "com.amazonaws.ec2#CoolOffPeriodRequestHours",
        },
        LockDuration: {
          target: "com.amazonaws.ec2#RetentionPeriodRequestDays",
        },
        ExpirationDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
      },
    },
    "com.amazonaws.ec2#LockSnapshotResult": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        LockState: {
          target: "com.amazonaws.ec2#LockState",
          locationName: "lockState",
        },
        LockDuration: {
          target: "com.amazonaws.ec2#RetentionPeriodResponseDays",
          locationName: "lockDuration",
        },
        CoolOffPeriod: {
          target: "com.amazonaws.ec2#CoolOffPeriodResponseHours",
          locationName: "coolOffPeriod",
        },
        CoolOffPeriodExpiresOn: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "coolOffPeriodExpiresOn",
        },
        LockCreatedOn: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lockCreatedOn",
        },
        LockExpiresOn: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lockExpiresOn",
        },
        LockDurationStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lockDurationStartTime",
        },
      },
    },
    "com.amazonaws.ec2#ModifyAddressAttributeRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        DomainName: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyAddressAttributeResult": {
      type: "structure",
      members: {
        Address: {
          target: "com.amazonaws.ec2#AddressAttribute",
          locationName: "address",
        },
      },
    },
    "com.amazonaws.ec2#ModifyAvailabilityZoneGroupRequest": {
      type: "structure",
      members: {
        GroupName: {
          target: "com.amazonaws.ec2#String",
        },
        OptInStatus: {
          target: "com.amazonaws.ec2#ModifyAvailabilityZoneOptInStatus",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyAvailabilityZoneGroupResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyCapacityReservationRequest": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        EndDate: {
          target: "com.amazonaws.ec2#DateTime",
        },
        EndDateType: {
          target: "com.amazonaws.ec2#EndDateType",
        },
        Accept: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AdditionalInfo: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceMatchCriteria: {
          target: "com.amazonaws.ec2#InstanceMatchCriteria",
        },
      },
    },
    "com.amazonaws.ec2#ModifyCapacityReservationResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyCapacityReservationFleetRequest": {
      type: "structure",
      members: {
        CapacityReservationFleetId: {
          target: "com.amazonaws.ec2#CapacityReservationFleetId",
        },
        TotalTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        RemoveEndDate: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyCapacityReservationFleetResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyClientVpnEndpointRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        ServerCertificateArn: {
          target: "com.amazonaws.ec2#String",
        },
        ConnectionLogOptions: {
          target: "com.amazonaws.ec2#ConnectionLogOptions",
        },
        DnsServers: {
          target: "com.amazonaws.ec2#DnsServersOptionsModifyStructure",
        },
        VpnPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        SplitTunnel: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ClientVpnSecurityGroupIdSet",
          locationName: "SecurityGroupId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        SelfServicePortal: {
          target: "com.amazonaws.ec2#SelfServicePortal",
        },
        ClientConnectOptions: {
          target: "com.amazonaws.ec2#ClientConnectOptions",
        },
        SessionTimeoutHours: {
          target: "com.amazonaws.ec2#Integer",
        },
        ClientLoginBannerOptions: {
          target: "com.amazonaws.ec2#ClientLoginBannerOptions",
        },
        ClientRouteEnforcementOptions: {
          target: "com.amazonaws.ec2#ClientRouteEnforcementOptions",
        },
        DisconnectOnSessionTimeout: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyClientVpnEndpointResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyDefaultCreditSpecificationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#UnlimitedSupportedInstanceFamily",
        },
        CpuCredits: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyDefaultCreditSpecificationResult": {
      type: "structure",
      members: {
        InstanceFamilyCreditSpecification: {
          target: "com.amazonaws.ec2#InstanceFamilyCreditSpecification",
          locationName: "instanceFamilyCreditSpecification",
        },
      },
    },
    "com.amazonaws.ec2#ModifyEbsDefaultKmsKeyIdRequest": {
      type: "structure",
      members: {
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyEbsDefaultKmsKeyIdResult": {
      type: "structure",
      members: {
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
      },
    },
    "com.amazonaws.ec2#ModifyFleetRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ExcessCapacityTerminationPolicy: {
          target: "com.amazonaws.ec2#FleetExcessCapacityTerminationPolicy",
        },
        LaunchTemplateConfigs: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateConfigListRequest",
          locationName: "LaunchTemplateConfig",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
        },
        TargetCapacitySpecification: {
          target: "com.amazonaws.ec2#TargetCapacitySpecificationRequest",
        },
        Context: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyFleetResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyFpgaImageAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FpgaImageId: {
          target: "com.amazonaws.ec2#FpgaImageId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#FpgaImageAttributeName",
        },
        OperationType: {
          target: "com.amazonaws.ec2#OperationType",
        },
        UserIds: {
          target: "com.amazonaws.ec2#UserIdStringList",
          locationName: "UserId",
        },
        UserGroups: {
          target: "com.amazonaws.ec2#UserGroupStringList",
          locationName: "UserGroup",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeStringList",
          locationName: "ProductCode",
        },
        LoadPermission: {
          target: "com.amazonaws.ec2#LoadPermissionModifications",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyFpgaImageAttributeResult": {
      type: "structure",
      members: {
        FpgaImageAttribute: {
          target: "com.amazonaws.ec2#FpgaImageAttribute",
          locationName: "fpgaImageAttribute",
        },
      },
    },
    "com.amazonaws.ec2#ModifyHostsRequest": {
      type: "structure",
      members: {
        HostRecovery: {
          target: "com.amazonaws.ec2#HostRecovery",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
        },
        HostMaintenance: {
          target: "com.amazonaws.ec2#HostMaintenance",
        },
        HostIds: {
          target: "com.amazonaws.ec2#RequestHostIdList",
          locationName: "hostId",
        },
        AutoPlacement: {
          target: "com.amazonaws.ec2#AutoPlacement",
          locationName: "autoPlacement",
        },
      },
    },
    "com.amazonaws.ec2#ModifyHostsResult": {
      type: "structure",
      members: {
        Successful: {
          target: "com.amazonaws.ec2#ResponseHostIdList",
          locationName: "successful",
        },
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemList",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIdFormatRequest": {
      type: "structure",
      members: {
        Resource: {
          target: "com.amazonaws.ec2#String",
        },
        UseLongIds: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIdentityIdFormatRequest": {
      type: "structure",
      members: {
        Resource: {
          target: "com.amazonaws.ec2#String",
          locationName: "resource",
        },
        UseLongIds: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "useLongIds",
        },
        PrincipalArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "principalArn",
        },
      },
    },
    "com.amazonaws.ec2#ModifyImageAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#AttributeValue",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        LaunchPermission: {
          target: "com.amazonaws.ec2#LaunchPermissionModifications",
        },
        OperationType: {
          target: "com.amazonaws.ec2#OperationType",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeStringList",
          locationName: "ProductCode",
        },
        UserGroups: {
          target: "com.amazonaws.ec2#UserGroupStringList",
          locationName: "UserGroup",
        },
        UserIds: {
          target: "com.amazonaws.ec2#UserIdStringList",
          locationName: "UserId",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
        },
        OrganizationArns: {
          target: "com.amazonaws.ec2#OrganizationArnStringList",
          locationName: "OrganizationArn",
        },
        OrganizationalUnitArns: {
          target: "com.amazonaws.ec2#OrganizationalUnitArnStringList",
          locationName: "OrganizationalUnitArn",
        },
        ImdsSupport: {
          target: "com.amazonaws.ec2#AttributeValue",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceAttributeRequest": {
      type: "structure",
      members: {
        SourceDestCheck: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        DisableApiStop: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#InstanceAttributeName",
          locationName: "attribute",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
        BlockDeviceMappings: {
          target:
            "com.amazonaws.ec2#InstanceBlockDeviceMappingSpecificationList",
          locationName: "blockDeviceMapping",
        },
        DisableApiTermination: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "disableApiTermination",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "instanceType",
        },
        Kernel: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "kernel",
        },
        Ramdisk: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "ramdisk",
        },
        UserData: {
          target: "com.amazonaws.ec2#BlobAttributeValue",
          locationName: "userData",
        },
        InstanceInitiatedShutdownBehavior: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "instanceInitiatedShutdownBehavior",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdStringList",
          locationName: "GroupId",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "ebsOptimized",
        },
        SriovNetSupport: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "sriovNetSupport",
        },
        EnaSupport: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "enaSupport",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceCapacityReservationAttributesRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        CapacityReservationSpecification: {
          target: "com.amazonaws.ec2#CapacityReservationSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceCapacityReservationAttributesResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceCpuOptionsRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        CoreCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        ThreadsPerCore: {
          target: "com.amazonaws.ec2#Integer",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceCpuOptionsResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        CoreCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "coreCount",
        },
        ThreadsPerCore: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "threadsPerCore",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceCreditSpecificationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceCreditSpecifications: {
          target: "com.amazonaws.ec2#InstanceCreditSpecificationListRequest",
          locationName: "InstanceCreditSpecification",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceCreditSpecificationResult": {
      type: "structure",
      members: {
        SuccessfulInstanceCreditSpecifications: {
          target: "com.amazonaws.ec2#SuccessfulInstanceCreditSpecificationSet",
          locationName: "successfulInstanceCreditSpecificationSet",
        },
        UnsuccessfulInstanceCreditSpecifications: {
          target:
            "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationSet",
          locationName: "unsuccessfulInstanceCreditSpecificationSet",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceEventStartTimeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        InstanceEventId: {
          target: "com.amazonaws.ec2#String",
        },
        NotBefore: {
          target: "com.amazonaws.ec2#DateTime",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceEventStartTimeResult": {
      type: "structure",
      members: {
        Event: {
          target: "com.amazonaws.ec2#InstanceStatusEvent",
          locationName: "event",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceEventWindowRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        InstanceEventWindowId: {
          target: "com.amazonaws.ec2#InstanceEventWindowId",
        },
        TimeRanges: {
          target: "com.amazonaws.ec2#InstanceEventWindowTimeRangeRequestSet",
          locationName: "TimeRange",
        },
        CronExpression: {
          target: "com.amazonaws.ec2#InstanceEventWindowCronExpression",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceEventWindowResult": {
      type: "structure",
      members: {
        InstanceEventWindow: {
          target: "com.amazonaws.ec2#InstanceEventWindow",
          locationName: "instanceEventWindow",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceMaintenanceOptionsRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        AutoRecovery: {
          target: "com.amazonaws.ec2#InstanceAutoRecoveryState",
        },
        RebootMigration: {
          target: "com.amazonaws.ec2#InstanceRebootMigrationState",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceMaintenanceOptionsResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        AutoRecovery: {
          target: "com.amazonaws.ec2#InstanceAutoRecoveryState",
          locationName: "autoRecovery",
        },
        RebootMigration: {
          target: "com.amazonaws.ec2#InstanceRebootMigrationState",
          locationName: "rebootMigration",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceMetadataDefaultsRequest": {
      type: "structure",
      members: {
        HttpTokens: {
          target: "com.amazonaws.ec2#MetadataDefaultHttpTokensState",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#BoxedInteger",
        },
        HttpEndpoint: {
          target: "com.amazonaws.ec2#DefaultInstanceMetadataEndpointState",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#DefaultInstanceMetadataTagsState",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceMetadataDefaultsResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceMetadataOptionsRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        HttpTokens: {
          target: "com.amazonaws.ec2#HttpTokensState",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#Integer",
        },
        HttpEndpoint: {
          target: "com.amazonaws.ec2#InstanceMetadataEndpointState",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        HttpProtocolIpv6: {
          target: "com.amazonaws.ec2#InstanceMetadataProtocolState",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#InstanceMetadataTagsState",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceMetadataOptionsResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceMetadataOptions: {
          target: "com.amazonaws.ec2#InstanceMetadataOptionsResponse",
          locationName: "instanceMetadataOptions",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceNetworkPerformanceRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        BandwidthWeighting: {
          target: "com.amazonaws.ec2#InstanceBandwidthWeighting",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstanceNetworkPerformanceResult": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        BandwidthWeighting: {
          target: "com.amazonaws.ec2#InstanceBandwidthWeighting",
          locationName: "bandwidthWeighting",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstancePlacementRequest": {
      type: "structure",
      members: {
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
        },
        PartitionNumber: {
          target: "com.amazonaws.ec2#Integer",
        },
        HostResourceGroupArn: {
          target: "com.amazonaws.ec2#String",
        },
        GroupId: {
          target: "com.amazonaws.ec2#PlacementGroupId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#HostTenancy",
          locationName: "tenancy",
        },
        Affinity: {
          target: "com.amazonaws.ec2#Affinity",
          locationName: "affinity",
        },
        HostId: {
          target: "com.amazonaws.ec2#DedicatedHostId",
          locationName: "hostId",
        },
      },
    },
    "com.amazonaws.ec2#ModifyInstancePlacementResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        AddOperatingRegions: {
          target: "com.amazonaws.ec2#AddIpamOperatingRegionSet",
          locationName: "AddOperatingRegion",
        },
        RemoveOperatingRegions: {
          target: "com.amazonaws.ec2#RemoveIpamOperatingRegionSet",
          locationName: "RemoveOperatingRegion",
        },
        Tier: {
          target: "com.amazonaws.ec2#IpamTier",
        },
        EnablePrivateGua: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MeteredAccount: {
          target: "com.amazonaws.ec2#IpamMeteredAccount",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamResult": {
      type: "structure",
      members: {
        Ipam: {
          target: "com.amazonaws.ec2#Ipam",
          locationName: "ipam",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamPoolRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        AutoImport: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AllocationMinNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
        },
        AllocationMaxNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
        },
        AllocationDefaultNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
        },
        ClearAllocationDefaultNetmaskLength: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AddAllocationResourceTags: {
          target: "com.amazonaws.ec2#RequestIpamResourceTagList",
          locationName: "AddAllocationResourceTag",
        },
        RemoveAllocationResourceTags: {
          target: "com.amazonaws.ec2#RequestIpamResourceTagList",
          locationName: "RemoveAllocationResourceTag",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamPoolResult": {
      type: "structure",
      members: {
        IpamPool: {
          target: "com.amazonaws.ec2#IpamPool",
          locationName: "ipamPool",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamResourceCidrRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
        },
        ResourceCidr: {
          target: "com.amazonaws.ec2#String",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
        },
        CurrentIpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
        DestinationIpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
        Monitored: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamResourceCidrResult": {
      type: "structure",
      members: {
        IpamResourceCidr: {
          target: "com.amazonaws.ec2#IpamResourceCidr",
          locationName: "ipamResourceCidr",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamResourceDiscoveryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        AddOperatingRegions: {
          target: "com.amazonaws.ec2#AddIpamOperatingRegionSet",
          locationName: "AddOperatingRegion",
        },
        RemoveOperatingRegions: {
          target: "com.amazonaws.ec2#RemoveIpamOperatingRegionSet",
          locationName: "RemoveOperatingRegion",
        },
        AddOrganizationalUnitExclusions: {
          target: "com.amazonaws.ec2#AddIpamOrganizationalUnitExclusionSet",
          locationName: "AddOrganizationalUnitExclusion",
        },
        RemoveOrganizationalUnitExclusions: {
          target: "com.amazonaws.ec2#RemoveIpamOrganizationalUnitExclusionSet",
          locationName: "RemoveOrganizationalUnitExclusion",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamResourceDiscoveryResult": {
      type: "structure",
      members: {
        IpamResourceDiscovery: {
          target: "com.amazonaws.ec2#IpamResourceDiscovery",
          locationName: "ipamResourceDiscovery",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamScopeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyIpamScopeResult": {
      type: "structure",
      members: {
        IpamScope: {
          target: "com.amazonaws.ec2#IpamScope",
          locationName: "ipamScope",
        },
      },
    },
    "com.amazonaws.ec2#ModifyLaunchTemplateRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
        DefaultVersion: {
          target: "com.amazonaws.ec2#String",
          locationName: "SetDefaultVersion",
        },
      },
    },
    "com.amazonaws.ec2#ModifyLaunchTemplateResult": {
      type: "structure",
      members: {
        LaunchTemplate: {
          target: "com.amazonaws.ec2#LaunchTemplate",
          locationName: "launchTemplate",
        },
      },
    },
    "com.amazonaws.ec2#ModifyLocalGatewayRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
      },
    },
    "com.amazonaws.ec2#ModifyLocalGatewayRouteResult": {
      type: "structure",
      members: {
        Route: {
          target: "com.amazonaws.ec2#LocalGatewayRoute",
          locationName: "route",
        },
      },
    },
    "com.amazonaws.ec2#ModifyManagedPrefixListRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        CurrentVersion: {
          target: "com.amazonaws.ec2#Long",
        },
        PrefixListName: {
          target: "com.amazonaws.ec2#String",
        },
        AddEntries: {
          target: "com.amazonaws.ec2#AddPrefixListEntries",
          locationName: "AddEntry",
        },
        RemoveEntries: {
          target: "com.amazonaws.ec2#RemovePrefixListEntries",
          locationName: "RemoveEntry",
        },
        MaxEntries: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#ModifyManagedPrefixListResult": {
      type: "structure",
      members: {
        PrefixList: {
          target: "com.amazonaws.ec2#ManagedPrefixList",
          locationName: "prefixList",
        },
      },
    },
    "com.amazonaws.ec2#ModifyNetworkInterfaceAttributeRequest": {
      type: "structure",
      members: {
        EnaSrdSpecification: {
          target: "com.amazonaws.ec2#EnaSrdSpecification",
        },
        EnablePrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ConnectionTrackingSpecification: {
          target: "com.amazonaws.ec2#ConnectionTrackingSpecificationRequest",
        },
        AssociatePublicIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AssociatedSubnetIds: {
          target: "com.amazonaws.ec2#SubnetIdList",
          locationName: "AssociatedSubnetId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        Description: {
          target: "com.amazonaws.ec2#AttributeValue",
          locationName: "description",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
          locationName: "sourceDestCheck",
        },
        Groups: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringList",
          locationName: "SecurityGroupId",
        },
        Attachment: {
          target: "com.amazonaws.ec2#NetworkInterfaceAttachmentChanges",
          locationName: "attachment",
        },
      },
    },
    "com.amazonaws.ec2#ModifyPrivateDnsNameOptionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        PrivateDnsHostnameType: {
          target: "com.amazonaws.ec2#HostnameType",
        },
        EnableResourceNameDnsARecord: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnableResourceNameDnsAAAARecord: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyPrivateDnsNameOptionsResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyPublicIpDnsNameOptionsRequest": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        HostnameType: {
          target: "com.amazonaws.ec2#PublicIpDnsOption",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyPublicIpDnsNameOptionsResult": {
      type: "structure",
      members: {
        Successful: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "successful",
        },
      },
    },
    "com.amazonaws.ec2#ModifyReservedInstancesRequest": {
      type: "structure",
      members: {
        ReservedInstancesIds: {
          target: "com.amazonaws.ec2#ReservedInstancesIdStringList",
          locationName: "ReservedInstancesId",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        TargetConfigurations: {
          target: "com.amazonaws.ec2#ReservedInstancesConfigurationList",
          locationName: "ReservedInstancesConfigurationSetItemType",
        },
      },
    },
    "com.amazonaws.ec2#ModifyReservedInstancesResult": {
      type: "structure",
      members: {
        ReservedInstancesModificationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesModificationId",
        },
      },
    },
    "com.amazonaws.ec2#ModifyRouteServerRequest": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
        },
        PersistRoutes: {
          target: "com.amazonaws.ec2#RouteServerPersistRoutesAction",
        },
        PersistRoutesDuration: {
          target: "com.amazonaws.ec2#BoxedLong",
        },
        SnsNotificationsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyRouteServerResult": {
      type: "structure",
      members: {
        RouteServer: {
          target: "com.amazonaws.ec2#RouteServer",
          locationName: "routeServer",
        },
      },
    },
    "com.amazonaws.ec2#ModifySecurityGroupRulesRequest": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        SecurityGroupRules: {
          target: "com.amazonaws.ec2#SecurityGroupRuleUpdateList",
          locationName: "SecurityGroupRule",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifySecurityGroupRulesResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifySnapshotAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#SnapshotAttributeName",
        },
        CreateVolumePermission: {
          target: "com.amazonaws.ec2#CreateVolumePermissionModifications",
        },
        GroupNames: {
          target: "com.amazonaws.ec2#GroupNameStringList",
          locationName: "UserGroup",
        },
        OperationType: {
          target: "com.amazonaws.ec2#OperationType",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        UserIds: {
          target: "com.amazonaws.ec2#UserIdStringList",
          locationName: "UserId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ModifySnapshotTierRequest": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        StorageTier: {
          target: "com.amazonaws.ec2#TargetStorageTier",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifySnapshotTierResult": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        TieringStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "tieringStartTime",
        },
      },
    },
    "com.amazonaws.ec2#ModifySpotFleetRequestRequest": {
      type: "structure",
      members: {
        LaunchTemplateConfigs: {
          target: "com.amazonaws.ec2#LaunchTemplateConfigList",
          locationName: "LaunchTemplateConfig",
        },
        OnDemandTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        Context: {
          target: "com.amazonaws.ec2#String",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#SpotFleetRequestId",
          locationName: "spotFleetRequestId",
        },
        TargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "targetCapacity",
        },
        ExcessCapacityTerminationPolicy: {
          target: "com.amazonaws.ec2#ExcessCapacityTerminationPolicy",
          locationName: "excessCapacityTerminationPolicy",
        },
      },
    },
    "com.amazonaws.ec2#ModifySpotFleetRequestResponse": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifySubnetAttributeRequest": {
      type: "structure",
      members: {
        AssignIpv6AddressOnCreation: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        MapPublicIpOnLaunch: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        MapCustomerOwnedIpOnLaunch: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        CustomerOwnedIpv4Pool: {
          target: "com.amazonaws.ec2#CoipPoolId",
        },
        EnableDns64: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        PrivateDnsHostnameTypeOnLaunch: {
          target: "com.amazonaws.ec2#HostnameType",
        },
        EnableResourceNameDnsARecordOnLaunch: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        EnableResourceNameDnsAAAARecordOnLaunch: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        EnableLniAtDeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
        },
        DisableLniAtDeviceIndex: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTrafficMirrorFilterNetworkServicesRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        },
        AddNetworkServices: {
          target: "com.amazonaws.ec2#TrafficMirrorNetworkServiceList",
          locationName: "AddNetworkService",
        },
        RemoveNetworkServices: {
          target: "com.amazonaws.ec2#TrafficMirrorNetworkServiceList",
          locationName: "RemoveNetworkService",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTrafficMirrorFilterNetworkServicesResult": {
      type: "structure",
      members: {
        TrafficMirrorFilter: {
          target: "com.amazonaws.ec2#TrafficMirrorFilter",
          locationName: "trafficMirrorFilter",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTrafficMirrorFilterRuleRequest": {
      type: "structure",
      members: {
        TrafficMirrorFilterRuleId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleIdWithResolver",
        },
        TrafficDirection: {
          target: "com.amazonaws.ec2#TrafficDirection",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#TrafficMirrorRuleAction",
        },
        DestinationPortRange: {
          target: "com.amazonaws.ec2#TrafficMirrorPortRangeRequest",
        },
        SourcePortRange: {
          target: "com.amazonaws.ec2#TrafficMirrorPortRangeRequest",
        },
        Protocol: {
          target: "com.amazonaws.ec2#Integer",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        SourceCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        RemoveFields: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleFieldList",
          locationName: "RemoveField",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTrafficMirrorFilterRuleResult": {
      type: "structure",
      members: {
        TrafficMirrorFilterRule: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRule",
          locationName: "trafficMirrorFilterRule",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTrafficMirrorSessionRequest": {
      type: "structure",
      members: {
        TrafficMirrorSessionId: {
          target: "com.amazonaws.ec2#TrafficMirrorSessionId",
        },
        TrafficMirrorTargetId: {
          target: "com.amazonaws.ec2#TrafficMirrorTargetId",
        },
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        },
        PacketLength: {
          target: "com.amazonaws.ec2#Integer",
        },
        SessionNumber: {
          target: "com.amazonaws.ec2#Integer",
        },
        VirtualNetworkId: {
          target: "com.amazonaws.ec2#Integer",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        RemoveFields: {
          target: "com.amazonaws.ec2#TrafficMirrorSessionFieldList",
          locationName: "RemoveField",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTrafficMirrorSessionResult": {
      type: "structure",
      members: {
        TrafficMirrorSession: {
          target: "com.amazonaws.ec2#TrafficMirrorSession",
          locationName: "trafficMirrorSession",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayRequest": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Options: {
          target: "com.amazonaws.ec2#ModifyTransitGatewayOptions",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayResult": {
      type: "structure",
      members: {
        TransitGateway: {
          target: "com.amazonaws.ec2#TransitGateway",
          locationName: "transitGateway",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayPrefixListReferenceRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        Blackhole: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayPrefixListReferenceResult": {
      type: "structure",
      members: {
        TransitGatewayPrefixListReference: {
          target: "com.amazonaws.ec2#TransitGatewayPrefixListReference",
          locationName: "transitGatewayPrefixListReference",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayVpcAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        AddSubnetIds: {
          target: "com.amazonaws.ec2#TransitGatewaySubnetIdList",
        },
        RemoveSubnetIds: {
          target: "com.amazonaws.ec2#TransitGatewaySubnetIdList",
        },
        Options: {
          target:
            "com.amazonaws.ec2#ModifyTransitGatewayVpcAttachmentRequestOptions",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayVpcAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayVpcAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachment",
          locationName: "transitGatewayVpcAttachment",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointRequest": {
      type: "structure",
      members: {
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
        },
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        LoadBalancerOptions: {
          target:
            "com.amazonaws.ec2#ModifyVerifiedAccessEndpointLoadBalancerOptions",
        },
        NetworkInterfaceOptions: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointEniOptions",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        RdsOptions: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointRdsOptions",
        },
        CidrOptions: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointCidrOptions",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointResult": {
      type: "structure",
      members: {
        VerifiedAccessEndpoint: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpoint",
          locationName: "verifiedAccessEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPolicyRequest": {
      type: "structure",
      members: {
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
        },
        PolicyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPolicyResult": {
      type: "structure",
      members: {
        PolicyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "policyEnabled",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyDocument",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationResponse",
          locationName: "sseSpecification",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessGroupRequest": {
      type: "structure",
      members: {
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessGroupResult": {
      type: "structure",
      members: {
        VerifiedAccessGroup: {
          target: "com.amazonaws.ec2#VerifiedAccessGroup",
          locationName: "verifiedAccessGroup",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessGroupPolicyRequest": {
      type: "structure",
      members: {
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        },
        PolicyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessGroupPolicyResult": {
      type: "structure",
      members: {
        PolicyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "policyEnabled",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyDocument",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationResponse",
          locationName: "sseSpecification",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessInstanceRequest": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        CidrEndpointsCustomSubDomain: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessInstanceResult": {
      type: "structure",
      members: {
        VerifiedAccessInstance: {
          target: "com.amazonaws.ec2#VerifiedAccessInstance",
          locationName: "verifiedAccessInstance",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessInstanceLoggingConfigurationRequest":
      {
        type: "structure",
        members: {
          VerifiedAccessInstanceId: {
            target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
          },
          AccessLogs: {
            target: "com.amazonaws.ec2#VerifiedAccessLogOptions",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
          ClientToken: {
            target: "com.amazonaws.ec2#String",
          },
        },
      },
    "com.amazonaws.ec2#ModifyVerifiedAccessInstanceLoggingConfigurationResult":
      {
        type: "structure",
        members: {
          LoggingConfiguration: {
            target:
              "com.amazonaws.ec2#VerifiedAccessInstanceLoggingConfiguration",
            locationName: "loggingConfiguration",
          },
        },
      },
    "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderRequest": {
      type: "structure",
      members: {
        VerifiedAccessTrustProviderId: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderId",
        },
        OidcOptions: {
          target:
            "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderOidcOptions",
        },
        DeviceOptions: {
          target:
            "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderDeviceOptions",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest",
        },
        NativeApplicationOidcOptions: {
          target:
            "com.amazonaws.ec2#ModifyVerifiedAccessNativeApplicationOidcOptions",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderResult": {
      type: "structure",
      members: {
        VerifiedAccessTrustProvider: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProvider",
          locationName: "verifiedAccessTrustProvider",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVolumeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
        },
        Size: {
          target: "com.amazonaws.ec2#Integer",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
        },
        MultiAttachEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVolumeResult": {
      type: "structure",
      members: {
        VolumeModification: {
          target: "com.amazonaws.ec2#VolumeModification",
          locationName: "volumeModification",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVolumeAttributeRequest": {
      type: "structure",
      members: {
        AutoEnableIO: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcAttributeRequest": {
      type: "structure",
      members: {
        EnableDnsHostnames: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        EnableDnsSupport: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        EnableNetworkAddressUsageMetrics: {
          target: "com.amazonaws.ec2#AttributeBooleanValue",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcBlockPublicAccessExclusionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ExclusionId: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionId",
        },
        InternetGatewayExclusionMode: {
          target: "com.amazonaws.ec2#InternetGatewayExclusionMode",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcBlockPublicAccessExclusionResult": {
      type: "structure",
      members: {
        VpcBlockPublicAccessExclusion: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusion",
          locationName: "vpcBlockPublicAccessExclusion",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcBlockPublicAccessOptionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InternetGatewayBlockMode: {
          target: "com.amazonaws.ec2#InternetGatewayBlockMode",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcBlockPublicAccessOptionsResult": {
      type: "structure",
      members: {
        VpcBlockPublicAccessOptions: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessOptions",
          locationName: "vpcBlockPublicAccessOptions",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#VpcEndpointId",
        },
        ResetPolicy: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
        },
        AddRouteTableIds: {
          target: "com.amazonaws.ec2#VpcEndpointRouteTableIdList",
          locationName: "AddRouteTableId",
        },
        RemoveRouteTableIds: {
          target: "com.amazonaws.ec2#VpcEndpointRouteTableIdList",
          locationName: "RemoveRouteTableId",
        },
        AddSubnetIds: {
          target: "com.amazonaws.ec2#VpcEndpointSubnetIdList",
          locationName: "AddSubnetId",
        },
        RemoveSubnetIds: {
          target: "com.amazonaws.ec2#VpcEndpointSubnetIdList",
          locationName: "RemoveSubnetId",
        },
        AddSecurityGroupIds: {
          target: "com.amazonaws.ec2#VpcEndpointSecurityGroupIdList",
          locationName: "AddSecurityGroupId",
        },
        RemoveSecurityGroupIds: {
          target: "com.amazonaws.ec2#VpcEndpointSecurityGroupIdList",
          locationName: "RemoveSecurityGroupId",
        },
        IpAddressType: {
          target: "com.amazonaws.ec2#IpAddressType",
        },
        DnsOptions: {
          target: "com.amazonaws.ec2#DnsOptionsSpecification",
        },
        PrivateDnsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SubnetConfigurations: {
          target: "com.amazonaws.ec2#SubnetConfigurationsList",
          locationName: "SubnetConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointConnectionNotificationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ConnectionNotificationId: {
          target: "com.amazonaws.ec2#ConnectionNotificationId",
        },
        ConnectionNotificationArn: {
          target: "com.amazonaws.ec2#String",
        },
        ConnectionEvents: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointConnectionNotificationResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointServiceConfigurationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
        },
        RemovePrivateDnsName: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AcceptanceRequired: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AddNetworkLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "AddNetworkLoadBalancerArn",
        },
        RemoveNetworkLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "RemoveNetworkLoadBalancerArn",
        },
        AddGatewayLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "AddGatewayLoadBalancerArn",
        },
        RemoveGatewayLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "RemoveGatewayLoadBalancerArn",
        },
        AddSupportedIpAddressTypes: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "AddSupportedIpAddressType",
        },
        RemoveSupportedIpAddressTypes: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "RemoveSupportedIpAddressType",
        },
        AddSupportedRegions: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "AddSupportedRegion",
        },
        RemoveSupportedRegions: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "RemoveSupportedRegion",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointServiceConfigurationResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointServicePayerResponsibilityRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        PayerResponsibility: {
          target: "com.amazonaws.ec2#PayerResponsibility",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointServicePayerResponsibilityResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointServicePermissionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        AddAllowedPrincipals: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
        RemoveAllowedPrincipals: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcEndpointServicePermissionsResult": {
      type: "structure",
      members: {
        AddedPrincipals: {
          target: "com.amazonaws.ec2#AddedPrincipalSet",
          locationName: "addedPrincipalSet",
        },
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcPeeringConnectionOptionsRequest": {
      type: "structure",
      members: {
        AccepterPeeringConnectionOptions: {
          target: "com.amazonaws.ec2#PeeringConnectionOptionsRequest",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        RequesterPeeringConnectionOptions: {
          target: "com.amazonaws.ec2#PeeringConnectionOptionsRequest",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcPeeringConnectionOptionsResult": {
      type: "structure",
      members: {
        AccepterPeeringConnectionOptions: {
          target: "com.amazonaws.ec2#PeeringConnectionOptions",
          locationName: "accepterPeeringConnectionOptions",
        },
        RequesterPeeringConnectionOptions: {
          target: "com.amazonaws.ec2#PeeringConnectionOptions",
          locationName: "requesterPeeringConnectionOptions",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcTenancyRequest": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
        },
        InstanceTenancy: {
          target: "com.amazonaws.ec2#VpcTenancy",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpcTenancyResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnConnectionRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        CustomerGatewayId: {
          target: "com.amazonaws.ec2#CustomerGatewayId",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#VpnGatewayId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnConnectionResult": {
      type: "structure",
      members: {
        VpnConnection: {
          target: "com.amazonaws.ec2#VpnConnection",
          locationName: "vpnConnection",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnConnectionOptionsRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        LocalIpv4NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        RemoteIpv4NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        LocalIpv6NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        RemoteIpv6NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnConnectionOptionsResult": {
      type: "structure",
      members: {
        VpnConnection: {
          target: "com.amazonaws.ec2#VpnConnection",
          locationName: "vpnConnection",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnTunnelCertificateRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        VpnTunnelOutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnTunnelCertificateResult": {
      type: "structure",
      members: {
        VpnConnection: {
          target: "com.amazonaws.ec2#VpnConnection",
          locationName: "vpnConnection",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnTunnelOptionsRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        VpnTunnelOutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        TunnelOptions: {
          target: "com.amazonaws.ec2#ModifyVpnTunnelOptionsSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SkipTunnelReplacement: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PreSharedKeyStorage: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVpnTunnelOptionsResult": {
      type: "structure",
      members: {
        VpnConnection: {
          target: "com.amazonaws.ec2#VpnConnection",
          locationName: "vpnConnection",
        },
      },
    },
    "com.amazonaws.ec2#MonitorInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#MonitorInstancesResult": {
      type: "structure",
      members: {
        InstanceMonitorings: {
          target: "com.amazonaws.ec2#InstanceMonitoringList",
          locationName: "instancesSet",
        },
      },
    },
    "com.amazonaws.ec2#MoveAddressToVpcRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
      },
    },
    "com.amazonaws.ec2#MoveAddressToVpcResult": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        Status: {
          target: "com.amazonaws.ec2#Status",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#MoveByoipCidrToIpamRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        IpamPoolOwner: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#MoveByoipCidrToIpamResult": {
      type: "structure",
      members: {
        ByoipCidr: {
          target: "com.amazonaws.ec2#ByoipCidr",
          locationName: "byoipCidr",
        },
      },
    },
    "com.amazonaws.ec2#MoveCapacityReservationInstancesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        SourceCapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        DestinationCapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#MoveCapacityReservationInstancesResult": {
      type: "structure",
      members: {
        SourceCapacityReservation: {
          target: "com.amazonaws.ec2#CapacityReservation",
          locationName: "sourceCapacityReservation",
        },
        DestinationCapacityReservation: {
          target: "com.amazonaws.ec2#CapacityReservation",
          locationName: "destinationCapacityReservation",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionByoipCidrRequest": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        CidrAuthorizationContext: {
          target: "com.amazonaws.ec2#CidrAuthorizationContext",
        },
        PubliclyAdvertisable: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PoolTagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "PoolTagSpecification",
        },
        MultiRegion: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionByoipCidrResult": {
      type: "structure",
      members: {
        ByoipCidr: {
          target: "com.amazonaws.ec2#ByoipCidr",
          locationName: "byoipCidr",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionIpamByoasnRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
        },
        Asn: {
          target: "com.amazonaws.ec2#String",
        },
        AsnAuthorizationContext: {
          target: "com.amazonaws.ec2#AsnAuthorizationContext",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionIpamByoasnResult": {
      type: "structure",
      members: {
        Byoasn: {
          target: "com.amazonaws.ec2#Byoasn",
          locationName: "byoasn",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionIpamPoolCidrRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        CidrAuthorizationContext: {
          target: "com.amazonaws.ec2#IpamCidrAuthorizationContext",
        },
        NetmaskLength: {
          target: "com.amazonaws.ec2#Integer",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        VerificationMethod: {
          target: "com.amazonaws.ec2#VerificationMethod",
        },
        IpamExternalResourceVerificationTokenId: {
          target: "com.amazonaws.ec2#IpamExternalResourceVerificationTokenId",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionIpamPoolCidrResult": {
      type: "structure",
      members: {
        IpamPoolCidr: {
          target: "com.amazonaws.ec2#IpamPoolCidr",
          locationName: "ipamPoolCidr",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionPublicIpv4PoolCidrRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
        },
        NetmaskLength: {
          target: "com.amazonaws.ec2#Integer",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionPublicIpv4PoolCidrResult": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
          locationName: "poolId",
        },
        PoolAddressRange: {
          target: "com.amazonaws.ec2#PublicIpv4PoolRange",
          locationName: "poolAddressRange",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseCapacityBlockRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        CapacityBlockOfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
        },
        InstancePlatform: {
          target: "com.amazonaws.ec2#CapacityReservationInstancePlatform",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseCapacityBlockResult": {
      type: "structure",
      members: {
        CapacityReservation: {
          target: "com.amazonaws.ec2#CapacityReservation",
          locationName: "capacityReservation",
        },
        CapacityBlocks: {
          target: "com.amazonaws.ec2#CapacityBlockSet",
          locationName: "capacityBlockSet",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseCapacityBlockExtensionRequest": {
      type: "structure",
      members: {
        CapacityBlockExtensionOfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseCapacityBlockExtensionResult": {
      type: "structure",
      members: {
        CapacityBlockExtensions: {
          target: "com.amazonaws.ec2#CapacityBlockExtensionSet",
          locationName: "capacityBlockExtensionSet",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseHostReservationRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
        },
        HostIdSet: {
          target: "com.amazonaws.ec2#RequestHostIdSet",
        },
        LimitPrice: {
          target: "com.amazonaws.ec2#String",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseHostReservationResult": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        Purchase: {
          target: "com.amazonaws.ec2#PurchaseSet",
          locationName: "purchase",
        },
        TotalHourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "totalHourlyPrice",
        },
        TotalUpfrontPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "totalUpfrontPrice",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseReservedInstancesOfferingRequest": {
      type: "structure",
      members: {
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        ReservedInstancesOfferingId: {
          target: "com.amazonaws.ec2#ReservedInstancesOfferingId",
        },
        PurchaseTime: {
          target: "com.amazonaws.ec2#DateTime",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        LimitPrice: {
          target: "com.amazonaws.ec2#ReservedInstanceLimitPrice",
          locationName: "limitPrice",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseReservedInstancesOfferingResult": {
      type: "structure",
      members: {
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseScheduledInstancesRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PurchaseRequests: {
          target: "com.amazonaws.ec2#PurchaseRequestSet",
          locationName: "PurchaseRequest",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseScheduledInstancesResult": {
      type: "structure",
      members: {
        ScheduledInstanceSet: {
          target: "com.amazonaws.ec2#PurchasedScheduledInstanceSet",
          locationName: "scheduledInstanceSet",
        },
      },
    },
    "com.amazonaws.ec2#RebootInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#RegisterImageRequest": {
      type: "structure",
      members: {
        ImageLocation: {
          target: "com.amazonaws.ec2#String",
        },
        BillingProducts: {
          target: "com.amazonaws.ec2#BillingProductList",
          locationName: "BillingProduct",
        },
        BootMode: {
          target: "com.amazonaws.ec2#BootModeValues",
        },
        TpmSupport: {
          target: "com.amazonaws.ec2#TpmSupportValues",
        },
        UefiData: {
          target: "com.amazonaws.ec2#StringType",
        },
        ImdsSupport: {
          target: "com.amazonaws.ec2#ImdsSupportValues",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Architecture: {
          target: "com.amazonaws.ec2#ArchitectureValues",
          locationName: "architecture",
        },
        KernelId: {
          target: "com.amazonaws.ec2#KernelId",
          locationName: "kernelId",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#RamdiskId",
          locationName: "ramdiskId",
        },
        RootDeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "rootDeviceName",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingRequestList",
          locationName: "BlockDeviceMapping",
        },
        VirtualizationType: {
          target: "com.amazonaws.ec2#String",
          locationName: "virtualizationType",
        },
        SriovNetSupport: {
          target: "com.amazonaws.ec2#String",
          locationName: "sriovNetSupport",
        },
        EnaSupport: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSupport",
        },
      },
    },
    "com.amazonaws.ec2#RegisterImageResult": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
      },
    },
    "com.amazonaws.ec2#RegisterInstanceEventNotificationAttributesRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceTagAttribute: {
          target: "com.amazonaws.ec2#RegisterInstanceTagAttributeRequest",
        },
      },
    },
    "com.amazonaws.ec2#RegisterInstanceEventNotificationAttributesResult": {
      type: "structure",
      members: {
        InstanceTagAttribute: {
          target: "com.amazonaws.ec2#InstanceTagNotificationAttribute",
          locationName: "instanceTagAttribute",
        },
      },
    },
    "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupMembersRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#TransitGatewayNetworkInterfaceIdList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupMembersResult": {
      type: "structure",
      members: {
        RegisteredMulticastGroupMembers: {
          target:
            "com.amazonaws.ec2#TransitGatewayMulticastRegisteredGroupMembers",
          locationName: "registeredMulticastGroupMembers",
        },
      },
    },
    "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupSourcesRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#TransitGatewayNetworkInterfaceIdList",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RegisterTransitGatewayMulticastGroupSourcesResult": {
      type: "structure",
      members: {
        RegisteredMulticastGroupSources: {
          target:
            "com.amazonaws.ec2#TransitGatewayMulticastRegisteredGroupSources",
          locationName: "registeredMulticastGroupSources",
        },
      },
    },
    "com.amazonaws.ec2#RejectCapacityReservationBillingOwnershipRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
      },
    },
    "com.amazonaws.ec2#RejectCapacityReservationBillingOwnershipResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#RejectTransitGatewayMulticastDomainAssociationsRequest":
      {
        type: "structure",
        members: {
          TransitGatewayMulticastDomainId: {
            target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
          },
          TransitGatewayAttachmentId: {
            target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          },
          SubnetIds: {
            target: "com.amazonaws.ec2#ValueStringList",
          },
          DryRun: {
            target: "com.amazonaws.ec2#Boolean",
          },
        },
      },
    "com.amazonaws.ec2#RejectTransitGatewayMulticastDomainAssociationsResult": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociations",
          locationName: "associations",
        },
      },
    },
    "com.amazonaws.ec2#RejectTransitGatewayPeeringAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RejectTransitGatewayPeeringAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayPeeringAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayPeeringAttachment",
          locationName: "transitGatewayPeeringAttachment",
        },
      },
    },
    "com.amazonaws.ec2#RejectTransitGatewayVpcAttachmentRequest": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RejectTransitGatewayVpcAttachmentResult": {
      type: "structure",
      members: {
        TransitGatewayVpcAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachment",
          locationName: "transitGatewayVpcAttachment",
        },
      },
    },
    "com.amazonaws.ec2#RejectVpcEndpointConnectionsRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
        VpcEndpointIds: {
          target: "com.amazonaws.ec2#VpcEndpointIdList",
          locationName: "VpcEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#RejectVpcEndpointConnectionsResult": {
      type: "structure",
      members: {
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemSet",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#RejectVpcPeeringConnectionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionId",
          locationName: "vpcPeeringConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#RejectVpcPeeringConnectionResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ReleaseAddressRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ReleaseHostsRequest": {
      type: "structure",
      members: {
        HostIds: {
          target: "com.amazonaws.ec2#RequestHostIdList",
          locationName: "hostId",
        },
      },
    },
    "com.amazonaws.ec2#ReleaseHostsResult": {
      type: "structure",
      members: {
        Successful: {
          target: "com.amazonaws.ec2#ResponseHostIdList",
          locationName: "successful",
        },
        Unsuccessful: {
          target: "com.amazonaws.ec2#UnsuccessfulItemList",
          locationName: "unsuccessful",
        },
      },
    },
    "com.amazonaws.ec2#ReleaseIpamPoolAllocationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        IpamPoolAllocationId: {
          target: "com.amazonaws.ec2#IpamPoolAllocationId",
        },
      },
    },
    "com.amazonaws.ec2#ReleaseIpamPoolAllocationResult": {
      type: "structure",
      members: {
        Success: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "success",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceIamInstanceProfileAssociationRequest": {
      type: "structure",
      members: {
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfileSpecification",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociationId",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceIamInstanceProfileAssociationResult": {
      type: "structure",
      members: {
        IamInstanceProfileAssociation: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociation",
          locationName: "iamInstanceProfileAssociation",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceImageCriteriaInAllowedImagesSettingsRequest": {
      type: "structure",
      members: {
        ImageCriteria: {
          target: "com.amazonaws.ec2#ImageCriterionRequestList",
          locationName: "ImageCriterion",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceImageCriteriaInAllowedImagesSettingsResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceNetworkAclAssociationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#NetworkAclAssociationId",
          locationName: "associationId",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#NetworkAclId",
          locationName: "networkAclId",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceNetworkAclAssociationResult": {
      type: "structure",
      members: {
        NewAssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "newAssociationId",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceNetworkAclEntryRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#NetworkAclId",
          locationName: "networkAclId",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ruleNumber",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#RuleAction",
          locationName: "ruleAction",
        },
        Egress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "egress",
        },
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
        IcmpTypeCode: {
          target: "com.amazonaws.ec2#IcmpTypeCode",
          locationName: "Icmp",
        },
        PortRange: {
          target: "com.amazonaws.ec2#PortRange",
          locationName: "portRange",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceRouteRequest": {
      type: "structure",
      members: {
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#VpcEndpointId",
        },
        LocalTarget: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#LocalGatewayId",
        },
        CarrierGatewayId: {
          target: "com.amazonaws.ec2#CarrierGatewayId",
        },
        CoreNetworkArn: {
          target: "com.amazonaws.ec2#CoreNetworkArn",
        },
        OdbNetworkArn: {
          target: "com.amazonaws.ec2#OdbNetworkArn",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        GatewayId: {
          target: "com.amazonaws.ec2#RouteGatewayId",
          locationName: "gatewayId",
        },
        DestinationIpv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationIpv6CidrBlock",
        },
        EgressOnlyInternetGatewayId: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGatewayId",
          locationName: "egressOnlyInternetGatewayId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionId",
          locationName: "vpcPeeringConnectionId",
        },
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "natGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceRouteTableAssociationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#RouteTableAssociationId",
          locationName: "associationId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceRouteTableAssociationResult": {
      type: "structure",
      members: {
        NewAssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "newAssociationId",
        },
        AssociationState: {
          target: "com.amazonaws.ec2#RouteTableAssociationState",
          locationName: "associationState",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceTransitGatewayRouteRequest": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
        },
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        Blackhole: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceTransitGatewayRouteResult": {
      type: "structure",
      members: {
        Route: {
          target: "com.amazonaws.ec2#TransitGatewayRoute",
          locationName: "route",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceVpnTunnelRequest": {
      type: "structure",
      members: {
        VpnConnectionId: {
          target: "com.amazonaws.ec2#VpnConnectionId",
        },
        VpnTunnelOutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        ApplyPendingMaintenance: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceVpnTunnelResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ReportInstanceStatusRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Instances: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "instanceId",
        },
        Status: {
          target: "com.amazonaws.ec2#ReportStatusType",
          locationName: "status",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "endTime",
        },
        ReasonCodes: {
          target: "com.amazonaws.ec2#ReasonCodesList",
          locationName: "reasonCode",
        },
        Description: {
          target: "com.amazonaws.ec2#ReportInstanceStatusRequestDescription",
          locationName: "description",
        },
      },
    },
    "com.amazonaws.ec2#RequestSpotFleetRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotFleetRequestConfig: {
          target: "com.amazonaws.ec2#SpotFleetRequestConfigData",
          locationName: "spotFleetRequestConfig",
        },
      },
    },
    "com.amazonaws.ec2#RequestSpotFleetResponse": {
      type: "structure",
      members: {
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotFleetRequestId",
        },
      },
    },
    "com.amazonaws.ec2#RequestSpotInstancesRequest": {
      type: "structure",
      members: {
        LaunchSpecification: {
          target: "com.amazonaws.ec2#RequestSpotLaunchSpecification",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#InstanceInterruptionBehavior",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        SpotPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotPrice",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        Type: {
          target: "com.amazonaws.ec2#SpotInstanceType",
          locationName: "type",
        },
        ValidFrom: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validFrom",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validUntil",
        },
        LaunchGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchGroup",
        },
        AvailabilityZoneGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneGroup",
        },
        BlockDurationMinutes: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "blockDurationMinutes",
        },
      },
    },
    "com.amazonaws.ec2#RequestSpotInstancesResult": {
      type: "structure",
      members: {
        SpotInstanceRequests: {
          target: "com.amazonaws.ec2#SpotInstanceRequestList",
          locationName: "spotInstanceRequestSet",
        },
      },
    },
    "com.amazonaws.ec2#ResetAddressAttributeRequest": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#AddressAttributeName",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ResetAddressAttributeResult": {
      type: "structure",
      members: {
        Address: {
          target: "com.amazonaws.ec2#AddressAttribute",
          locationName: "address",
        },
      },
    },
    "com.amazonaws.ec2#ResetEbsDefaultKmsKeyIdRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ResetEbsDefaultKmsKeyIdResult": {
      type: "structure",
      members: {
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
      },
    },
    "com.amazonaws.ec2#ResetFpgaImageAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        FpgaImageId: {
          target: "com.amazonaws.ec2#FpgaImageId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#ResetFpgaImageAttributeName",
        },
      },
    },
    "com.amazonaws.ec2#ResetFpgaImageAttributeResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#ResetImageAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#ResetImageAttributeName",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#ResetInstanceAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        Attribute: {
          target: "com.amazonaws.ec2#InstanceAttributeName",
          locationName: "attribute",
        },
      },
    },
    "com.amazonaws.ec2#ResetNetworkInterfaceAttributeRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceDestCheck",
        },
      },
    },
    "com.amazonaws.ec2#ResetSnapshotAttributeRequest": {
      type: "structure",
      members: {
        Attribute: {
          target: "com.amazonaws.ec2#SnapshotAttributeName",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#RestoreAddressToClassicRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
      },
    },
    "com.amazonaws.ec2#RestoreAddressToClassicResult": {
      type: "structure",
      members: {
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
        Status: {
          target: "com.amazonaws.ec2#Status",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#RestoreImageFromRecycleBinRequest": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RestoreImageFromRecycleBinResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#RestoreManagedPrefixListVersionRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        PreviousVersion: {
          target: "com.amazonaws.ec2#Long",
        },
        CurrentVersion: {
          target: "com.amazonaws.ec2#Long",
        },
      },
    },
    "com.amazonaws.ec2#RestoreManagedPrefixListVersionResult": {
      type: "structure",
      members: {
        PrefixList: {
          target: "com.amazonaws.ec2#ManagedPrefixList",
          locationName: "prefixList",
        },
      },
    },
    "com.amazonaws.ec2#RestoreSnapshotFromRecycleBinRequest": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RestoreSnapshotFromRecycleBinResult": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startTime",
        },
        State: {
          target: "com.amazonaws.ec2#SnapshotState",
          locationName: "status",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeSize",
        },
        SseType: {
          target: "com.amazonaws.ec2#SSEType",
          locationName: "sseType",
        },
      },
    },
    "com.amazonaws.ec2#RestoreSnapshotTierRequest": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        TemporaryRestoreDays: {
          target:
            "com.amazonaws.ec2#RestoreSnapshotTierRequestTemporaryRestoreDays",
        },
        PermanentRestore: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RestoreSnapshotTierResult": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        RestoreStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "restoreStartTime",
        },
        RestoreDuration: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "restoreDuration",
        },
        IsPermanentRestore: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isPermanentRestore",
        },
      },
    },
    "com.amazonaws.ec2#RevokeClientVpnIngressRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        TargetNetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        AccessGroupId: {
          target: "com.amazonaws.ec2#String",
        },
        RevokeAllGroups: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#RevokeClientVpnIngressResult": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#ClientVpnAuthorizationRuleStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#RevokeSecurityGroupEgressRequest": {
      type: "structure",
      members: {
        SecurityGroupRuleIds: {
          target: "com.amazonaws.ec2#SecurityGroupRuleIdList",
          locationName: "SecurityGroupRuleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "groupId",
        },
        SourceSecurityGroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceSecurityGroupName",
        },
        SourceSecurityGroupOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceSecurityGroupOwnerId",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipProtocol",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
        CidrIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIp",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
          locationName: "ipPermissions",
        },
      },
    },
    "com.amazonaws.ec2#RevokeSecurityGroupEgressResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        UnknownIpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
          locationName: "unknownIpPermissionSet",
        },
        RevokedSecurityGroupRules: {
          target: "com.amazonaws.ec2#RevokedSecurityGroupRuleList",
          locationName: "revokedSecurityGroupRuleSet",
        },
      },
    },
    "com.amazonaws.ec2#RevokeSecurityGroupIngressRequest": {
      type: "structure",
      members: {
        CidrIp: {
          target: "com.amazonaws.ec2#String",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#SecurityGroupName",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
        },
        SourceSecurityGroupName: {
          target: "com.amazonaws.ec2#String",
        },
        SourceSecurityGroupOwnerId: {
          target: "com.amazonaws.ec2#String",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        SecurityGroupRuleIds: {
          target: "com.amazonaws.ec2#SecurityGroupRuleIdList",
          locationName: "SecurityGroupRuleId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#RevokeSecurityGroupIngressResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
        UnknownIpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
          locationName: "unknownIpPermissionSet",
        },
        RevokedSecurityGroupRules: {
          target: "com.amazonaws.ec2#RevokedSecurityGroupRuleList",
          locationName: "revokedSecurityGroupRuleSet",
        },
      },
    },
    "com.amazonaws.ec2#RunInstancesRequest": {
      type: "structure",
      members: {
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingRequestList",
          locationName: "BlockDeviceMapping",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
        },
        Ipv6AddressCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#InstanceIpv6AddressList",
          locationName: "Ipv6Address",
        },
        KernelId: {
          target: "com.amazonaws.ec2#KernelId",
        },
        KeyName: {
          target: "com.amazonaws.ec2#KeyPairName",
        },
        MaxCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        MinCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#RunInstancesMonitoringEnabled",
        },
        Placement: {
          target: "com.amazonaws.ec2#Placement",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#RamdiskId",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringList",
          locationName: "SecurityGroupId",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#SecurityGroupStringList",
          locationName: "SecurityGroup",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        UserData: {
          target: "com.amazonaws.ec2#RunInstancesUserData",
        },
        ElasticGpuSpecification: {
          target: "com.amazonaws.ec2#ElasticGpuSpecifications",
        },
        ElasticInferenceAccelerators: {
          target: "com.amazonaws.ec2#ElasticInferenceAccelerators",
          locationName: "ElasticInferenceAccelerator",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        LaunchTemplate: {
          target: "com.amazonaws.ec2#LaunchTemplateSpecification",
        },
        InstanceMarketOptions: {
          target: "com.amazonaws.ec2#InstanceMarketOptionsRequest",
        },
        CreditSpecification: {
          target: "com.amazonaws.ec2#CreditSpecificationRequest",
        },
        CpuOptions: {
          target: "com.amazonaws.ec2#CpuOptionsRequest",
        },
        CapacityReservationSpecification: {
          target: "com.amazonaws.ec2#CapacityReservationSpecification",
        },
        HibernationOptions: {
          target: "com.amazonaws.ec2#HibernationOptionsRequest",
        },
        LicenseSpecifications: {
          target: "com.amazonaws.ec2#LicenseSpecificationListRequest",
          locationName: "LicenseSpecification",
        },
        MetadataOptions: {
          target: "com.amazonaws.ec2#InstanceMetadataOptionsRequest",
        },
        EnclaveOptions: {
          target: "com.amazonaws.ec2#EnclaveOptionsRequest",
        },
        PrivateDnsNameOptions: {
          target: "com.amazonaws.ec2#PrivateDnsNameOptionsRequest",
        },
        MaintenanceOptions: {
          target: "com.amazonaws.ec2#InstanceMaintenanceOptionsRequest",
        },
        DisableApiStop: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnablePrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkPerformanceOptions: {
          target: "com.amazonaws.ec2#InstanceNetworkPerformanceOptionsRequest",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorRequest",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        DisableApiTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "disableApiTermination",
        },
        InstanceInitiatedShutdownBehavior: {
          target: "com.amazonaws.ec2#ShutdownBehavior",
          locationName: "instanceInitiatedShutdownBehavior",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        AdditionalInfo: {
          target: "com.amazonaws.ec2#String",
          locationName: "additionalInfo",
        },
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceSpecificationList",
          locationName: "networkInterface",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfileSpecification",
          locationName: "iamInstanceProfile",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
      },
    },
    "com.amazonaws.ec2#Reservation": {
      type: "structure",
      members: {
        ReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservationId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        RequesterId: {
          target: "com.amazonaws.ec2#String",
          locationName: "requesterId",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        Instances: {
          target: "com.amazonaws.ec2#InstanceList",
          locationName: "instancesSet",
        },
      },
    },
    "com.amazonaws.ec2#RunScheduledInstancesRequest": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        LaunchSpecification: {
          target: "com.amazonaws.ec2#ScheduledInstancesLaunchSpecification",
        },
        ScheduledInstanceId: {
          target: "com.amazonaws.ec2#ScheduledInstanceId",
        },
      },
    },
    "com.amazonaws.ec2#RunScheduledInstancesResult": {
      type: "structure",
      members: {
        InstanceIdSet: {
          target: "com.amazonaws.ec2#InstanceIdSet",
          locationName: "instanceIdSet",
        },
      },
    },
    "com.amazonaws.ec2#SearchLocalGatewayRoutesRequest": {
      type: "structure",
      members: {
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#MaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#SearchLocalGatewayRoutesResult": {
      type: "structure",
      members: {
        Routes: {
          target: "com.amazonaws.ec2#LocalGatewayRouteList",
          locationName: "routeSet",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#SearchTransitGatewayMulticastGroupsRequest": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#SearchTransitGatewayMulticastGroupsResult": {
      type: "structure",
      members: {
        MulticastGroups: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastGroupList",
          locationName: "multicastGroups",
        },
        NextToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextToken",
        },
      },
    },
    "com.amazonaws.ec2#SearchTransitGatewayRoutesRequest": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        Filters: {
          target: "com.amazonaws.ec2#FilterList",
          locationName: "Filter",
        },
        MaxResults: {
          target: "com.amazonaws.ec2#TransitGatewayMaxResults",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#SearchTransitGatewayRoutesResult": {
      type: "structure",
      members: {
        Routes: {
          target: "com.amazonaws.ec2#TransitGatewayRouteList",
          locationName: "routeSet",
        },
        AdditionalRoutesAvailable: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "additionalRoutesAvailable",
        },
      },
    },
    "com.amazonaws.ec2#SendDiagnosticInterruptRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#StartDeclarativePoliciesReportRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        S3Prefix: {
          target: "com.amazonaws.ec2#String",
        },
        TargetId: {
          target: "com.amazonaws.ec2#String",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#StartDeclarativePoliciesReportResult": {
      type: "structure",
      members: {
        ReportId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reportId",
        },
      },
    },
    "com.amazonaws.ec2#StartInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        AdditionalInfo: {
          target: "com.amazonaws.ec2#String",
          locationName: "additionalInfo",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#StartInstancesResult": {
      type: "structure",
      members: {
        StartingInstances: {
          target: "com.amazonaws.ec2#InstanceStateChangeList",
          locationName: "instancesSet",
        },
      },
    },
    "com.amazonaws.ec2#StartNetworkInsightsAccessScopeAnalysisRequest": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#StartNetworkInsightsAccessScopeAnalysisResult": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysis: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis",
          locationName: "networkInsightsAccessScopeAnalysis",
        },
      },
    },
    "com.amazonaws.ec2#StartNetworkInsightsAnalysisRequest": {
      type: "structure",
      members: {
        NetworkInsightsPathId: {
          target: "com.amazonaws.ec2#NetworkInsightsPathId",
        },
        AdditionalAccounts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "AdditionalAccount",
        },
        FilterInArns: {
          target: "com.amazonaws.ec2#ArnList",
          locationName: "FilterInArn",
        },
        FilterOutArns: {
          target: "com.amazonaws.ec2#ArnList",
          locationName: "FilterOutArn",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#StartNetworkInsightsAnalysisResult": {
      type: "structure",
      members: {
        NetworkInsightsAnalysis: {
          target: "com.amazonaws.ec2#NetworkInsightsAnalysis",
          locationName: "networkInsightsAnalysis",
        },
      },
    },
    "com.amazonaws.ec2#StartVpcEndpointServicePrivateDnsVerificationRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#VpcEndpointServiceId",
        },
      },
    },
    "com.amazonaws.ec2#StartVpcEndpointServicePrivateDnsVerificationResult": {
      type: "structure",
      members: {
        ReturnValue: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#StopInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        Hibernate: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SkipOsShutdown: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
        Force: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "force",
        },
      },
    },
    "com.amazonaws.ec2#StopInstancesResult": {
      type: "structure",
      members: {
        StoppingInstances: {
          target: "com.amazonaws.ec2#InstanceStateChangeList",
          locationName: "instancesSet",
        },
      },
    },
    "com.amazonaws.ec2#TerminateClientVpnConnectionsRequest": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#ClientVpnEndpointId",
        },
        ConnectionId: {
          target: "com.amazonaws.ec2#String",
        },
        Username: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#TerminateClientVpnConnectionsResult": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        Username: {
          target: "com.amazonaws.ec2#String",
          locationName: "username",
        },
        ConnectionStatuses: {
          target: "com.amazonaws.ec2#TerminateConnectionStatusSet",
          locationName: "connectionStatuses",
        },
      },
    },
    "com.amazonaws.ec2#TerminateInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        Force: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SkipOsShutdown: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#TerminateInstancesResult": {
      type: "structure",
      members: {
        TerminatingInstances: {
          target: "com.amazonaws.ec2#InstanceStateChangeList",
          locationName: "instancesSet",
        },
      },
    },
    "com.amazonaws.ec2#UnassignIpv6AddressesRequest": {
      type: "structure",
      members: {
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#IpPrefixList",
          locationName: "Ipv6Prefix",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#Ipv6AddressList",
          locationName: "ipv6Addresses",
        },
      },
    },
    "com.amazonaws.ec2#UnassignIpv6AddressesResult": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        UnassignedIpv6Addresses: {
          target: "com.amazonaws.ec2#Ipv6AddressList",
          locationName: "unassignedIpv6Addresses",
        },
        UnassignedIpv6Prefixes: {
          target: "com.amazonaws.ec2#IpPrefixList",
          locationName: "unassignedIpv6PrefixSet",
        },
      },
    },
    "com.amazonaws.ec2#UnassignPrivateIpAddressesRequest": {
      type: "structure",
      members: {
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#IpPrefixList",
          locationName: "Ipv4Prefix",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#PrivateIpAddressStringList",
          locationName: "privateIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#UnassignPrivateNatGatewayAddressRequest": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#IpList",
          locationName: "PrivateIpAddress",
        },
        MaxDrainDurationSeconds: {
          target: "com.amazonaws.ec2#DrainSeconds",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#UnassignPrivateNatGatewayAddressResult": {
      type: "structure",
      members: {
        NatGatewayId: {
          target: "com.amazonaws.ec2#NatGatewayId",
          locationName: "natGatewayId",
        },
        NatGatewayAddresses: {
          target: "com.amazonaws.ec2#NatGatewayAddressList",
          locationName: "natGatewayAddressSet",
        },
      },
    },
    "com.amazonaws.ec2#UnlockSnapshotRequest": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#UnlockSnapshotResult": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
      },
    },
    "com.amazonaws.ec2#UnmonitorInstancesRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdStringList",
          locationName: "InstanceId",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dryRun",
        },
      },
    },
    "com.amazonaws.ec2#UnmonitorInstancesResult": {
      type: "structure",
      members: {
        InstanceMonitorings: {
          target: "com.amazonaws.ec2#InstanceMonitoringList",
          locationName: "instancesSet",
        },
      },
    },
    "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsEgressRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#SecurityGroupName",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
        },
        SecurityGroupRuleDescriptions: {
          target: "com.amazonaws.ec2#SecurityGroupRuleDescriptionList",
          locationName: "SecurityGroupRuleDescription",
        },
      },
    },
    "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsEgressResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsIngressRequest": {
      type: "structure",
      members: {
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#SecurityGroupName",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
        },
        SecurityGroupRuleDescriptions: {
          target: "com.amazonaws.ec2#SecurityGroupRuleDescriptionList",
          locationName: "SecurityGroupRuleDescription",
        },
      },
    },
    "com.amazonaws.ec2#UpdateSecurityGroupRuleDescriptionsIngressResult": {
      type: "structure",
      members: {
        Return: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "return",
        },
      },
    },
    "com.amazonaws.ec2#WithdrawByoipCidrRequest": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        DryRun: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#WithdrawByoipCidrResult": {
      type: "structure",
      members: {
        ByoipCidr: {
          target: "com.amazonaws.ec2#ByoipCidr",
          locationName: "byoipCidr",
        },
      },
    },
    "com.amazonaws.ec2#String": {
      type: "string",
    },
    "com.amazonaws.ec2#TagSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TagSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TagSpecification": {
      type: "structure",
      members: {
        ResourceType: {
          target: "com.amazonaws.ec2#ResourceType",
          locationName: "resourceType",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "Tag",
        },
      },
    },
    "com.amazonaws.ec2#ResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TagList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Tag",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Tag": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "key",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#Boolean": {
      type: "boolean",
    },
    "com.amazonaws.ec2#AddressTransfer": {
      type: "structure",
      members: {
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        TransferAccountId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transferAccountId",
        },
        TransferOfferExpirationTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "transferOfferExpirationTimestamp",
        },
        TransferOfferAcceptedTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "transferOfferAcceptedTimestamp",
        },
        AddressTransferStatus: {
          target: "com.amazonaws.ec2#AddressTransferStatus",
          locationName: "addressTransferStatus",
        },
      },
    },
    "com.amazonaws.ec2#MillisecondDateTime": {
      type: "timestamp",
    },
    "com.amazonaws.ec2#AddressTransferStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReservedInstanceIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservationId",
        locationName: "ReservedInstanceId",
      },
    },
    "com.amazonaws.ec2#ReservationId": {
      type: "string",
    },
    "com.amazonaws.ec2#TargetConfigurationRequestSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TargetConfigurationRequest",
        locationName: "TargetConfigurationRequest",
      },
    },
    "com.amazonaws.ec2#TargetConfigurationRequest": {
      type: "structure",
      members: {
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#ReservedInstancesOfferingId",
        },
      },
    },
    "com.amazonaws.ec2#Integer": {
      type: "integer",
    },
    "com.amazonaws.ec2#ReservedInstancesOfferingId": {
      type: "string",
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainId": {
      type: "string",
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentId": {
      type: "string",
    },
    "com.amazonaws.ec2#ValueStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociations": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        Subnets: {
          target: "com.amazonaws.ec2#SubnetAssociationList",
          locationName: "subnets",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#SubnetAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SubnetAssociation": {
      type: "structure",
      members: {
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        State: {
          target:
            "com.amazonaws.ec2#TransitGatewayMulitcastDomainAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulitcastDomainAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayPeeringAttachment": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        AccepterTransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "accepterTransitGatewayAttachmentId",
        },
        RequesterTgwInfo: {
          target: "com.amazonaws.ec2#PeeringTgwInfo",
          locationName: "requesterTgwInfo",
        },
        AccepterTgwInfo: {
          target: "com.amazonaws.ec2#PeeringTgwInfo",
          locationName: "accepterTgwInfo",
        },
        Options: {
          target: "com.amazonaws.ec2#TransitGatewayPeeringAttachmentOptions",
          locationName: "options",
        },
        Status: {
          target: "com.amazonaws.ec2#PeeringAttachmentStatus",
          locationName: "status",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentState",
          locationName: "state",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#PeeringTgwInfo": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        CoreNetworkId: {
          target: "com.amazonaws.ec2#String",
          locationName: "coreNetworkId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Region: {
          target: "com.amazonaws.ec2#String",
          locationName: "region",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPeeringAttachmentOptions": {
      type: "structure",
      members: {
        DynamicRouting: {
          target: "com.amazonaws.ec2#DynamicRoutingValue",
          locationName: "dynamicRouting",
        },
      },
    },
    "com.amazonaws.ec2#DynamicRoutingValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#PeeringAttachmentStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentState": {
      type: "enum",
    },
    "com.amazonaws.ec2#DateTime": {
      type: "timestamp",
    },
    "com.amazonaws.ec2#TransitGatewayVpcAttachment": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        VpcOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcOwnerId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentState",
          locationName: "state",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "subnetIds",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Options: {
          target: "com.amazonaws.ec2#TransitGatewayVpcAttachmentOptions",
          locationName: "options",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayVpcAttachmentOptions": {
      type: "structure",
      members: {
        DnsSupport: {
          target: "com.amazonaws.ec2#DnsSupportValue",
          locationName: "dnsSupport",
        },
        SecurityGroupReferencingSupport: {
          target: "com.amazonaws.ec2#SecurityGroupReferencingSupportValue",
          locationName: "securityGroupReferencingSupport",
        },
        Ipv6Support: {
          target: "com.amazonaws.ec2#Ipv6SupportValue",
          locationName: "ipv6Support",
        },
        ApplianceModeSupport: {
          target: "com.amazonaws.ec2#ApplianceModeSupportValue",
          locationName: "applianceModeSupport",
        },
      },
    },
    "com.amazonaws.ec2#DnsSupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#SecurityGroupReferencingSupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#Ipv6SupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#ApplianceModeSupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcEndpointServiceId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcEndpointIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcEndpointId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEndpointId": {
      type: "string",
    },
    "com.amazonaws.ec2#UnsuccessfulItemSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#UnsuccessfulItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#UnsuccessfulItem": {
      type: "structure",
      members: {
        Error: {
          target: "com.amazonaws.ec2#UnsuccessfulItemError",
          locationName: "error",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
      },
    },
    "com.amazonaws.ec2#UnsuccessfulItemError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#VpcPeeringConnectionIdWithResolver": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcPeeringConnection": {
      type: "structure",
      members: {
        AccepterVpcInfo: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionVpcInfo",
          locationName: "accepterVpcInfo",
        },
        ExpirationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "expirationTime",
        },
        RequesterVpcInfo: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionVpcInfo",
          locationName: "requesterVpcInfo",
        },
        Status: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionStateReason",
          locationName: "status",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcPeeringConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#VpcPeeringConnectionVpcInfo": {
      type: "structure",
      members: {
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        Ipv6CidrBlockSet: {
          target: "com.amazonaws.ec2#Ipv6CidrBlockSet",
          locationName: "ipv6CidrBlockSet",
        },
        CidrBlockSet: {
          target: "com.amazonaws.ec2#CidrBlockSet",
          locationName: "cidrBlockSet",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        PeeringOptions: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionOptionsDescription",
          locationName: "peeringOptions",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        Region: {
          target: "com.amazonaws.ec2#String",
          locationName: "region",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6CidrBlockSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6CidrBlock",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6CidrBlock": {
      type: "structure",
      members: {
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#CidrBlockSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CidrBlock",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CidrBlock": {
      type: "structure",
      members: {
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#VpcPeeringConnectionOptionsDescription": {
      type: "structure",
      members: {
        AllowDnsResolutionFromRemoteVpc: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowDnsResolutionFromRemoteVpc",
        },
        AllowEgressFromLocalClassicLinkToRemoteVpc: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowEgressFromLocalClassicLinkToRemoteVpc",
        },
        AllowEgressFromLocalVpcToRemoteClassicLink: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowEgressFromLocalVpcToRemoteClassicLink",
        },
      },
    },
    "com.amazonaws.ec2#VpcPeeringConnectionStateReason": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#VpcPeeringConnectionStateReasonCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#VpcPeeringConnectionStateReasonCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#ByoipCidr": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        AsnAssociations: {
          target: "com.amazonaws.ec2#AsnAssociationSet",
          locationName: "asnAssociationSet",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        State: {
          target: "com.amazonaws.ec2#ByoipCidrState",
          locationName: "state",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
      },
    },
    "com.amazonaws.ec2#AsnAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AsnAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AsnAssociation": {
      type: "structure",
      members: {
        Asn: {
          target: "com.amazonaws.ec2#String",
          locationName: "asn",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        State: {
          target: "com.amazonaws.ec2#AsnAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#AsnAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ByoipCidrState": {
      type: "enum",
    },
    "com.amazonaws.ec2#DomainType": {
      type: "enum",
    },
    "com.amazonaws.ec2#PublicIpAddress": {
      type: "string",
    },
    "com.amazonaws.ec2#Ipv4PoolEc2Id": {
      type: "string",
    },
    "com.amazonaws.ec2#IpamPoolId": {
      type: "string",
    },
    "com.amazonaws.ec2#HostRecovery": {
      type: "enum",
    },
    "com.amazonaws.ec2#HostMaintenance": {
      type: "enum",
    },
    "com.amazonaws.ec2#AssetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AssetId",
      },
    },
    "com.amazonaws.ec2#AssetId": {
      type: "string",
    },
    "com.amazonaws.ec2#AvailabilityZoneId": {
      type: "string",
    },
    "com.amazonaws.ec2#AutoPlacement": {
      type: "enum",
    },
    "com.amazonaws.ec2#ResponseHostIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPoolAllocationAllowedCidrs": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPoolAllocationDisallowedCidrs": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPoolAllocation": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        IpamPoolAllocationId: {
          target: "com.amazonaws.ec2#IpamPoolAllocationId",
          locationName: "ipamPoolAllocationId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamPoolAllocationResourceType",
          locationName: "resourceType",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceRegion",
        },
        ResourceOwner: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwner",
        },
      },
    },
    "com.amazonaws.ec2#IpamPoolAllocationId": {
      type: "string",
    },
    "com.amazonaws.ec2#IpamPoolAllocationResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientVpnEndpointId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcId": {
      type: "string",
    },
    "com.amazonaws.ec2#ClientVpnSecurityGroupIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupId": {
      type: "string",
    },
    "com.amazonaws.ec2#IpPrefixList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceId": {
      type: "string",
    },
    "com.amazonaws.ec2#Ipv6AddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrivateIpAddressStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "PrivateIpAddress",
      },
    },
    "com.amazonaws.ec2#AssignedPrivateIpAddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AssignedPrivateIpAddress",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AssignedPrivateIpAddress": {
      type: "structure",
      members: {
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#Ipv4PrefixesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv4PrefixSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv4PrefixSpecification": {
      type: "structure",
      members: {
        Ipv4Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv4Prefix",
        },
      },
    },
    "com.amazonaws.ec2#NatGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#IpList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrivateIpAddressCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#NatGatewayAddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NatGatewayAddress",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NatGatewayAddress": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        PrivateIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIp",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        IsPrimary: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isPrimary",
        },
        FailureMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureMessage",
        },
        Status: {
          target: "com.amazonaws.ec2#NatGatewayAddressStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#NatGatewayAddressStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#AllocationId": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceId": {
      type: "string",
    },
    "com.amazonaws.ec2#EipAllocationPublicIp": {
      type: "string",
    },
    "com.amazonaws.ec2#AccountID": {
      type: "string",
    },
    "com.amazonaws.ec2#SubnetId": {
      type: "string",
    },
    "com.amazonaws.ec2#AssociationStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#AssociationStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#AssociationStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#DefaultingDhcpOptionsId": {
      type: "string",
    },
    "com.amazonaws.ec2#CertificateId": {
      type: "string",
    },
    "com.amazonaws.ec2#RoleId": {
      type: "string",
    },
    "com.amazonaws.ec2#IamInstanceProfileSpecification": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
          locationName: "arn",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
      },
    },
    "com.amazonaws.ec2#IamInstanceProfileAssociation": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfile",
          locationName: "iamInstanceProfile",
        },
        State: {
          target: "com.amazonaws.ec2#IamInstanceProfileAssociationState",
          locationName: "state",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "timestamp",
        },
      },
    },
    "com.amazonaws.ec2#IamInstanceProfile": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
          locationName: "arn",
        },
        Id: {
          target: "com.amazonaws.ec2#String",
          locationName: "id",
        },
      },
    },
    "com.amazonaws.ec2#IamInstanceProfileAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceEventWindowId": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceEventWindowAssociationRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdList",
          locationName: "InstanceId",
        },
        InstanceTags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "InstanceTag",
        },
        DedicatedHostIds: {
          target: "com.amazonaws.ec2#DedicatedHostIdList",
          locationName: "DedicatedHostId",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DedicatedHostIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DedicatedHostId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DedicatedHostId": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceEventWindow": {
      type: "structure",
      members: {
        InstanceEventWindowId: {
          target: "com.amazonaws.ec2#InstanceEventWindowId",
          locationName: "instanceEventWindowId",
        },
        TimeRanges: {
          target: "com.amazonaws.ec2#InstanceEventWindowTimeRangeList",
          locationName: "timeRangeSet",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        CronExpression: {
          target: "com.amazonaws.ec2#InstanceEventWindowCronExpression",
          locationName: "cronExpression",
        },
        AssociationTarget: {
          target: "com.amazonaws.ec2#InstanceEventWindowAssociationTarget",
          locationName: "associationTarget",
        },
        State: {
          target: "com.amazonaws.ec2#InstanceEventWindowState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#InstanceEventWindowTimeRangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceEventWindowTimeRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceEventWindowTimeRange": {
      type: "structure",
      members: {
        StartWeekDay: {
          target: "com.amazonaws.ec2#WeekDay",
          locationName: "startWeekDay",
        },
        StartHour: {
          target: "com.amazonaws.ec2#Hour",
          locationName: "startHour",
        },
        EndWeekDay: {
          target: "com.amazonaws.ec2#WeekDay",
          locationName: "endWeekDay",
        },
        EndHour: {
          target: "com.amazonaws.ec2#Hour",
          locationName: "endHour",
        },
      },
    },
    "com.amazonaws.ec2#WeekDay": {
      type: "enum",
    },
    "com.amazonaws.ec2#Hour": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceEventWindowCronExpression": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceEventWindowAssociationTarget": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdList",
          locationName: "instanceIdSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        DedicatedHostIds: {
          target: "com.amazonaws.ec2#DedicatedHostIdList",
          locationName: "dedicatedHostIdSet",
        },
      },
    },
    "com.amazonaws.ec2#InstanceEventWindowState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamId": {
      type: "string",
    },
    "com.amazonaws.ec2#IpamResourceDiscoveryId": {
      type: "string",
    },
    "com.amazonaws.ec2#IpamResourceDiscoveryAssociation": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        IpamResourceDiscoveryAssociationId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociationId",
          locationName: "ipamResourceDiscoveryAssociationId",
        },
        IpamResourceDiscoveryAssociationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamResourceDiscoveryAssociationArn",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
          locationName: "ipamResourceDiscoveryId",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
          locationName: "ipamId",
        },
        IpamArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamArn",
        },
        IpamRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamRegion",
        },
        IsDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isDefault",
        },
        ResourceDiscoveryStatus: {
          target: "com.amazonaws.ec2#IpamAssociatedResourceDiscoveryStatus",
          locationName: "resourceDiscoveryStatus",
        },
        State: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociationState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#IpamResourceDiscoveryAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#ResourceArn": {
      type: "string",
    },
    "com.amazonaws.ec2#IpamAssociatedResourceDiscoveryStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamResourceDiscoveryAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#AllocationIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AllocationId",
        locationName: "AllocationId",
      },
    },
    "com.amazonaws.ec2#RouteServerId": {
      type: "string",
    },
    "com.amazonaws.ec2#RouteServerAssociation": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
          locationName: "routeServerId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        State: {
          target: "com.amazonaws.ec2#RouteServerAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#RouteTableId": {
      type: "string",
    },
    "com.amazonaws.ec2#RouteTableAssociationState": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#RouteTableAssociationStateCode",
          locationName: "state",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
      },
    },
    "com.amazonaws.ec2#RouteTableAssociationStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#SecurityGroupVpcAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetmaskLength": {
      type: "integer",
    },
    "com.amazonaws.ec2#SubnetIpv6CidrBlockAssociation": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#SubnetCidrAssociationId",
          locationName: "associationId",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
        Ipv6CidrBlockState: {
          target: "com.amazonaws.ec2#SubnetCidrBlockState",
          locationName: "ipv6CidrBlockState",
        },
        Ipv6AddressAttribute: {
          target: "com.amazonaws.ec2#Ipv6AddressAttribute",
          locationName: "ipv6AddressAttribute",
        },
        IpSource: {
          target: "com.amazonaws.ec2#IpSource",
          locationName: "ipSource",
        },
      },
    },
    "com.amazonaws.ec2#SubnetCidrAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#SubnetCidrBlockState": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#SubnetCidrBlockStateCode",
          locationName: "state",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
      },
    },
    "com.amazonaws.ec2#SubnetCidrBlockStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#Ipv6AddressAttribute": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpSource": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewaySubnetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableId": {
      type: "string",
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableAssociation": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
          locationName: "transitGatewayPolicyTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableId": {
      type: "string",
    },
    "com.amazonaws.ec2#TransitGatewayAssociation": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
          locationName: "transitGatewayRouteTableId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TrunkInterfaceAssociation": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#TrunkInterfaceAssociationId",
          locationName: "associationId",
        },
        BranchInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "branchInterfaceId",
        },
        TrunkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trunkInterfaceId",
        },
        InterfaceProtocol: {
          target: "com.amazonaws.ec2#InterfaceProtocolType",
          locationName: "interfaceProtocol",
        },
        VlanId: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "vlanId",
        },
        GreKey: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "greKey",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TrunkInterfaceAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#InterfaceProtocolType": {
      type: "enum",
    },
    "com.amazonaws.ec2#Ipv6PoolEc2Id": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcIpv6CidrBlockAssociation": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
        Ipv6CidrBlockState: {
          target: "com.amazonaws.ec2#VpcCidrBlockState",
          locationName: "ipv6CidrBlockState",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
        Ipv6Pool: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Pool",
        },
        Ipv6AddressAttribute: {
          target: "com.amazonaws.ec2#Ipv6AddressAttribute",
          locationName: "ipv6AddressAttribute",
        },
        IpSource: {
          target: "com.amazonaws.ec2#IpSource",
          locationName: "ipSource",
        },
      },
    },
    "com.amazonaws.ec2#VpcCidrBlockState": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#VpcCidrBlockStateCode",
          locationName: "state",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
      },
    },
    "com.amazonaws.ec2#VpcCidrBlockStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcCidrBlockAssociation": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        CidrBlockState: {
          target: "com.amazonaws.ec2#VpcCidrBlockState",
          locationName: "cidrBlockState",
        },
      },
    },
    "com.amazonaws.ec2#GroupIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "groupId",
      },
    },
    "com.amazonaws.ec2#InternetGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#EnaSrdSpecification": {
      type: "structure",
      members: {
        EnaSrdEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnaSrdUdpSpecification: {
          target: "com.amazonaws.ec2#EnaSrdUdpSpecification",
        },
      },
    },
    "com.amazonaws.ec2#EnaSrdUdpSpecification": {
      type: "structure",
      members: {
        EnaSrdUdpEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceId": {
      type: "string",
    },
    "com.amazonaws.ec2#VerifiedAccessTrustProviderId": {
      type: "string",
    },
    "com.amazonaws.ec2#VerifiedAccessTrustProvider": {
      type: "structure",
      members: {
        VerifiedAccessTrustProviderId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessTrustProviderId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        TrustProviderType: {
          target: "com.amazonaws.ec2#TrustProviderType",
          locationName: "trustProviderType",
        },
        UserTrustProviderType: {
          target: "com.amazonaws.ec2#UserTrustProviderType",
          locationName: "userTrustProviderType",
        },
        DeviceTrustProviderType: {
          target: "com.amazonaws.ec2#DeviceTrustProviderType",
          locationName: "deviceTrustProviderType",
        },
        OidcOptions: {
          target: "com.amazonaws.ec2#OidcOptions",
          locationName: "oidcOptions",
        },
        DeviceOptions: {
          target: "com.amazonaws.ec2#DeviceOptions",
          locationName: "deviceOptions",
        },
        PolicyReferenceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyReferenceName",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationTime",
        },
        LastUpdatedTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastUpdatedTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationResponse",
          locationName: "sseSpecification",
        },
        NativeApplicationOidcOptions: {
          target: "com.amazonaws.ec2#NativeApplicationOidcOptions",
          locationName: "nativeApplicationOidcOptions",
        },
      },
    },
    "com.amazonaws.ec2#TrustProviderType": {
      type: "enum",
    },
    "com.amazonaws.ec2#UserTrustProviderType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DeviceTrustProviderType": {
      type: "enum",
    },
    "com.amazonaws.ec2#OidcOptions": {
      type: "structure",
      members: {
        Issuer: {
          target: "com.amazonaws.ec2#String",
          locationName: "issuer",
        },
        AuthorizationEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "authorizationEndpoint",
        },
        TokenEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "tokenEndpoint",
        },
        UserInfoEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "userInfoEndpoint",
        },
        ClientId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientId",
        },
        ClientSecret: {
          target: "com.amazonaws.ec2#ClientSecretType",
          locationName: "clientSecret",
        },
        Scope: {
          target: "com.amazonaws.ec2#String",
          locationName: "scope",
        },
      },
    },
    "com.amazonaws.ec2#ClientSecretType": {
      type: "string",
    },
    "com.amazonaws.ec2#DeviceOptions": {
      type: "structure",
      members: {
        TenantId: {
          target: "com.amazonaws.ec2#String",
          locationName: "tenantId",
        },
        PublicSigningKeyUrl: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicSigningKeyUrl",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessSseSpecificationResponse": {
      type: "structure",
      members: {
        CustomerManagedKeyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "customerManagedKeyEnabled",
        },
        KmsKeyArn: {
          target: "com.amazonaws.ec2#KmsKeyArn",
          locationName: "kmsKeyArn",
        },
      },
    },
    "com.amazonaws.ec2#KmsKeyArn": {
      type: "string",
    },
    "com.amazonaws.ec2#NativeApplicationOidcOptions": {
      type: "structure",
      members: {
        PublicSigningKeyEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicSigningKeyEndpoint",
        },
        Issuer: {
          target: "com.amazonaws.ec2#String",
          locationName: "issuer",
        },
        AuthorizationEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "authorizationEndpoint",
        },
        TokenEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "tokenEndpoint",
        },
        UserInfoEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "userInfoEndpoint",
        },
        ClientId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientId",
        },
        Scope: {
          target: "com.amazonaws.ec2#String",
          locationName: "scope",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstance": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessInstanceId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        VerifiedAccessTrustProviders: {
          target: "com.amazonaws.ec2#VerifiedAccessTrustProviderCondensedList",
          locationName: "verifiedAccessTrustProviderSet",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationTime",
        },
        LastUpdatedTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastUpdatedTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        FipsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "fipsEnabled",
        },
        CidrEndpointsCustomSubDomain: {
          target: "com.amazonaws.ec2#VerifiedAccessInstanceCustomSubDomain",
          locationName: "cidrEndpointsCustomSubDomain",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessTrustProviderCondensedList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessTrustProviderCondensed",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessTrustProviderCondensed": {
      type: "structure",
      members: {
        VerifiedAccessTrustProviderId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessTrustProviderId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        TrustProviderType: {
          target: "com.amazonaws.ec2#TrustProviderType",
          locationName: "trustProviderType",
        },
        UserTrustProviderType: {
          target: "com.amazonaws.ec2#UserTrustProviderType",
          locationName: "userTrustProviderType",
        },
        DeviceTrustProviderType: {
          target: "com.amazonaws.ec2#DeviceTrustProviderType",
          locationName: "deviceTrustProviderType",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceCustomSubDomain": {
      type: "structure",
      members: {
        SubDomain: {
          target: "com.amazonaws.ec2#String",
          locationName: "subDomain",
        },
        Nameservers: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "nameserverSet",
        },
      },
    },
    "com.amazonaws.ec2#VolumeId": {
      type: "string",
    },
    "com.amazonaws.ec2#VolumeAttachmentState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpnGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcAttachment": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        State: {
          target: "com.amazonaws.ec2#AttachmentStatus",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#AttachmentStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientVpnAuthorizationRuleStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#ClientVpnAuthorizationRuleStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnAuthorizationRuleStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpPermissionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpPermission",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpPermission": {
      type: "structure",
      members: {
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipProtocol",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
        UserIdGroupPairs: {
          target: "com.amazonaws.ec2#UserIdGroupPairList",
          locationName: "groups",
        },
        IpRanges: {
          target: "com.amazonaws.ec2#IpRangeList",
          locationName: "ipRanges",
        },
        Ipv6Ranges: {
          target: "com.amazonaws.ec2#Ipv6RangeList",
          locationName: "ipv6Ranges",
        },
        PrefixListIds: {
          target: "com.amazonaws.ec2#PrefixListIdList",
          locationName: "prefixListIds",
        },
      },
    },
    "com.amazonaws.ec2#UserIdGroupPairList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#UserIdGroupPair",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#UserIdGroupPair": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        UserId: {
          target: "com.amazonaws.ec2#String",
          locationName: "userId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcPeeringConnectionId",
        },
        PeeringStatus: {
          target: "com.amazonaws.ec2#String",
          locationName: "peeringStatus",
        },
      },
    },
    "com.amazonaws.ec2#IpRangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpRange": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        CidrIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIp",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6RangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6Range",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6Range": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        CidrIpv6: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIpv6",
        },
      },
    },
    "com.amazonaws.ec2#PrefixListIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrefixListId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListId": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListId",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupRule",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupRule": {
      type: "structure",
      members: {
        SecurityGroupRuleId: {
          target: "com.amazonaws.ec2#SecurityGroupRuleId",
          locationName: "securityGroupRuleId",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "groupId",
        },
        GroupOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupOwnerId",
        },
        IsEgress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isEgress",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipProtocol",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
        CidrIpv4: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIpv4",
        },
        CidrIpv6: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIpv6",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
          locationName: "prefixListId",
        },
        ReferencedGroupInfo: {
          target: "com.amazonaws.ec2#ReferencedSecurityGroup",
          locationName: "referencedGroupInfo",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SecurityGroupRuleArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "securityGroupRuleArn",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleId": {
      type: "string",
    },
    "com.amazonaws.ec2#PrefixListResourceId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReferencedSecurityGroup": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        PeeringStatus: {
          target: "com.amazonaws.ec2#String",
          locationName: "peeringStatus",
        },
        UserId: {
          target: "com.amazonaws.ec2#String",
          locationName: "userId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcPeeringConnectionId",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupName": {
      type: "string",
    },
    "com.amazonaws.ec2#Storage": {
      type: "structure",
      members: {
        S3: {
          target: "com.amazonaws.ec2#S3Storage",
          locationName: "S3",
        },
      },
    },
    "com.amazonaws.ec2#S3Storage": {
      type: "structure",
      members: {
        AWSAccessKeyId: {
          target: "com.amazonaws.ec2#String",
        },
        Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "bucket",
        },
        Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefix",
        },
        UploadPolicy: {
          target: "com.amazonaws.ec2#Blob",
          locationName: "uploadPolicy",
        },
        UploadPolicySignature: {
          target: "com.amazonaws.ec2#S3StorageUploadPolicySignature",
          locationName: "uploadPolicySignature",
        },
      },
    },
    "com.amazonaws.ec2#Blob": {
      type: "blob",
    },
    "com.amazonaws.ec2#S3StorageUploadPolicySignature": {
      type: "string",
    },
    "com.amazonaws.ec2#BundleTask": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        BundleId: {
          target: "com.amazonaws.ec2#String",
          locationName: "bundleId",
        },
        State: {
          target: "com.amazonaws.ec2#BundleTaskState",
          locationName: "state",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
        UpdateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "updateTime",
        },
        Storage: {
          target: "com.amazonaws.ec2#Storage",
          locationName: "storage",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        BundleTaskError: {
          target: "com.amazonaws.ec2#BundleTaskError",
          locationName: "error",
        },
      },
    },
    "com.amazonaws.ec2#BundleTaskState": {
      type: "enum",
    },
    "com.amazonaws.ec2#BundleTaskError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#BundleId": {
      type: "string",
    },
    "com.amazonaws.ec2#CapacityReservationFleetIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationFleetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationFleetId": {
      type: "string",
    },
    "com.amazonaws.ec2#CapacityReservationFleetCancellationStateSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationFleetCancellationState",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationFleetCancellationState": {
      type: "structure",
      members: {
        CurrentFleetState: {
          target: "com.amazonaws.ec2#CapacityReservationFleetState",
          locationName: "currentFleetState",
        },
        PreviousFleetState: {
          target: "com.amazonaws.ec2#CapacityReservationFleetState",
          locationName: "previousFleetState",
        },
        CapacityReservationFleetId: {
          target: "com.amazonaws.ec2#CapacityReservationFleetId",
          locationName: "capacityReservationFleetId",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationFleetState": {
      type: "enum",
    },
    "com.amazonaws.ec2#FailedCapacityReservationFleetCancellationResultSet": {
      type: "list",
      member: {
        target:
          "com.amazonaws.ec2#FailedCapacityReservationFleetCancellationResult",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FailedCapacityReservationFleetCancellationResult": {
      type: "structure",
      members: {
        CapacityReservationFleetId: {
          target: "com.amazonaws.ec2#CapacityReservationFleetId",
          locationName: "capacityReservationFleetId",
        },
        CancelCapacityReservationFleetError: {
          target: "com.amazonaws.ec2#CancelCapacityReservationFleetError",
          locationName: "cancelCapacityReservationFleetError",
        },
      },
    },
    "com.amazonaws.ec2#CancelCapacityReservationFleetError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#CancelCapacityReservationFleetErrorCode",
          locationName: "code",
        },
        Message: {
          target:
            "com.amazonaws.ec2#CancelCapacityReservationFleetErrorMessage",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#CancelCapacityReservationFleetErrorCode": {
      type: "string",
    },
    "com.amazonaws.ec2#CancelCapacityReservationFleetErrorMessage": {
      type: "string",
    },
    "com.amazonaws.ec2#ConversionTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#DeclarativePoliciesReportId": {
      type: "string",
    },
    "com.amazonaws.ec2#ExportVmTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ImageId": {
      type: "string",
    },
    "com.amazonaws.ec2#ImportTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReservedInstancesListingId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReservedInstancesListingList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesListing",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesListing": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        CreateDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createDate",
        },
        InstanceCounts: {
          target: "com.amazonaws.ec2#InstanceCountList",
          locationName: "instanceCounts",
        },
        PriceSchedules: {
          target: "com.amazonaws.ec2#PriceScheduleList",
          locationName: "priceSchedules",
        },
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
        ReservedInstancesListingId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesListingId",
        },
        Status: {
          target: "com.amazonaws.ec2#ListingStatus",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        UpdateDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "updateDate",
        },
      },
    },
    "com.amazonaws.ec2#InstanceCountList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceCount",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceCount": {
      type: "structure",
      members: {
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        State: {
          target: "com.amazonaws.ec2#ListingState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#ListingState": {
      type: "enum",
    },
    "com.amazonaws.ec2#PriceScheduleList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PriceSchedule",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PriceSchedule": {
      type: "structure",
      members: {
        Active: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "active",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        Price: {
          target: "com.amazonaws.ec2#Double",
          locationName: "price",
        },
        Term: {
          target: "com.amazonaws.ec2#Long",
          locationName: "term",
        },
      },
    },
    "com.amazonaws.ec2#CurrencyCodeValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#Double": {
      type: "double",
    },
    "com.amazonaws.ec2#Long": {
      type: "long",
    },
    "com.amazonaws.ec2#ListingStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpotFleetRequestIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotFleetRequestId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotFleetRequestId": {
      type: "string",
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsSuccessSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CancelSpotFleetRequestsSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsSuccessItem": {
      type: "structure",
      members: {
        CurrentSpotFleetRequestState: {
          target: "com.amazonaws.ec2#BatchState",
          locationName: "currentSpotFleetRequestState",
        },
        PreviousSpotFleetRequestState: {
          target: "com.amazonaws.ec2#BatchState",
          locationName: "previousSpotFleetRequestState",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotFleetRequestId",
        },
      },
    },
    "com.amazonaws.ec2#BatchState": {
      type: "enum",
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CancelSpotFleetRequestsErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsErrorItem": {
      type: "structure",
      members: {
        Error: {
          target: "com.amazonaws.ec2#CancelSpotFleetRequestsError",
          locationName: "error",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotFleetRequestId",
        },
      },
    },
    "com.amazonaws.ec2#CancelSpotFleetRequestsError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#CancelBatchErrorCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#CancelBatchErrorCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpotInstanceRequestIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotInstanceRequestId",
        locationName: "SpotInstanceRequestId",
      },
    },
    "com.amazonaws.ec2#SpotInstanceRequestId": {
      type: "string",
    },
    "com.amazonaws.ec2#CancelledSpotInstanceRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CancelledSpotInstanceRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CancelledSpotInstanceRequest": {
      type: "structure",
      members: {
        SpotInstanceRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotInstanceRequestId",
        },
        State: {
          target: "com.amazonaws.ec2#CancelSpotInstanceRequestState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#CancelSpotInstanceRequestState": {
      type: "enum",
    },
    "com.amazonaws.ec2#KmsKeyId": {
      type: "string",
    },
    "com.amazonaws.ec2#CopySnapshotRequestPSU": {
      type: "string",
    },
    "com.amazonaws.ec2#SnapshotCompletionDurationMinutesRequest": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityReservationInstancePlatform": {
      type: "enum",
    },
    "com.amazonaws.ec2#AvailabilityZoneName": {
      type: "string",
    },
    "com.amazonaws.ec2#CapacityReservationTenancy": {
      type: "enum",
    },
    "com.amazonaws.ec2#EndDateType": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceMatchCriteria": {
      type: "enum",
    },
    "com.amazonaws.ec2#OutpostArn": {
      type: "string",
    },
    "com.amazonaws.ec2#PlacementGroupArn": {
      type: "string",
    },
    "com.amazonaws.ec2#CapacityReservationCommitmentDuration": {
      type: "long",
    },
    "com.amazonaws.ec2#CapacityReservationDeliveryPreference": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservation": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        CapacityReservationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationArn",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        InstancePlatform: {
          target: "com.amazonaws.ec2#CapacityReservationInstancePlatform",
          locationName: "instancePlatform",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#CapacityReservationTenancy",
          locationName: "tenancy",
        },
        TotalInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalInstanceCount",
        },
        AvailableInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableInstanceCount",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        EphemeralStorage: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ephemeralStorage",
        },
        State: {
          target: "com.amazonaws.ec2#CapacityReservationState",
          locationName: "state",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        EndDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "endDate",
        },
        EndDateType: {
          target: "com.amazonaws.ec2#EndDateType",
          locationName: "endDateType",
        },
        InstanceMatchCriteria: {
          target: "com.amazonaws.ec2#InstanceMatchCriteria",
          locationName: "instanceMatchCriteria",
        },
        CreateDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createDate",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#OutpostArn",
          locationName: "outpostArn",
        },
        CapacityReservationFleetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationFleetId",
        },
        PlacementGroupArn: {
          target: "com.amazonaws.ec2#PlacementGroupArn",
          locationName: "placementGroupArn",
        },
        CapacityAllocations: {
          target: "com.amazonaws.ec2#CapacityAllocations",
          locationName: "capacityAllocationSet",
        },
        ReservationType: {
          target: "com.amazonaws.ec2#CapacityReservationType",
          locationName: "reservationType",
        },
        UnusedReservationBillingOwnerId: {
          target: "com.amazonaws.ec2#AccountID",
          locationName: "unusedReservationBillingOwnerId",
        },
        CommitmentInfo: {
          target: "com.amazonaws.ec2#CapacityReservationCommitmentInfo",
          locationName: "commitmentInfo",
        },
        DeliveryPreference: {
          target: "com.amazonaws.ec2#CapacityReservationDeliveryPreference",
          locationName: "deliveryPreference",
        },
        CapacityBlockId: {
          target: "com.amazonaws.ec2#CapacityBlockId",
          locationName: "capacityBlockId",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityAllocations": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityAllocation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityAllocation": {
      type: "structure",
      members: {
        AllocationType: {
          target: "com.amazonaws.ec2#AllocationType",
          locationName: "allocationType",
        },
        Count: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "count",
        },
      },
    },
    "com.amazonaws.ec2#AllocationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationCommitmentInfo": {
      type: "structure",
      members: {
        CommittedInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "committedInstanceCount",
        },
        CommitmentEndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "commitmentEndDate",
        },
      },
    },
    "com.amazonaws.ec2#CapacityBlockId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReservationFleetInstanceSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservationFleetInstanceSpecification",
      },
    },
    "com.amazonaws.ec2#ReservationFleetInstanceSpecification": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
        },
        InstancePlatform: {
          target: "com.amazonaws.ec2#CapacityReservationInstancePlatform",
        },
        Weight: {
          target: "com.amazonaws.ec2#DoubleWithConstraints",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Priority: {
          target: "com.amazonaws.ec2#IntegerWithConstraints",
        },
      },
    },
    "com.amazonaws.ec2#InstanceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DoubleWithConstraints": {
      type: "double",
    },
    "com.amazonaws.ec2#IntegerWithConstraints": {
      type: "integer",
    },
    "com.amazonaws.ec2#FleetCapacityReservationTenancy": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetInstanceMatchCriteria": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetCapacityReservationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetCapacityReservation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FleetCapacityReservation": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
          locationName: "capacityReservationId",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        InstancePlatform: {
          target: "com.amazonaws.ec2#CapacityReservationInstancePlatform",
          locationName: "instancePlatform",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        TotalInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalInstanceCount",
        },
        FulfilledCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "fulfilledCapacity",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        CreateDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createDate",
        },
        Weight: {
          target: "com.amazonaws.ec2#DoubleWithConstraints",
          locationName: "weight",
        },
        Priority: {
          target: "com.amazonaws.ec2#IntegerWithConstraints",
          locationName: "priority",
        },
      },
    },
    "com.amazonaws.ec2#CarrierGateway": {
      type: "structure",
      members: {
        CarrierGatewayId: {
          target: "com.amazonaws.ec2#CarrierGatewayId",
          locationName: "carrierGatewayId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        State: {
          target: "com.amazonaws.ec2#CarrierGatewayState",
          locationName: "state",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#CarrierGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#CarrierGatewayState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientVpnAuthenticationRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClientVpnAuthenticationRequest",
      },
    },
    "com.amazonaws.ec2#ClientVpnAuthenticationRequest": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#ClientVpnAuthenticationType",
        },
        ActiveDirectory: {
          target: "com.amazonaws.ec2#DirectoryServiceAuthenticationRequest",
        },
        MutualAuthentication: {
          target: "com.amazonaws.ec2#CertificateAuthenticationRequest",
        },
        FederatedAuthentication: {
          target: "com.amazonaws.ec2#FederatedAuthenticationRequest",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnAuthenticationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DirectoryServiceAuthenticationRequest": {
      type: "structure",
      members: {
        DirectoryId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CertificateAuthenticationRequest": {
      type: "structure",
      members: {
        ClientRootCertificateChainArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#FederatedAuthenticationRequest": {
      type: "structure",
      members: {
        SAMLProviderArn: {
          target: "com.amazonaws.ec2#String",
        },
        SelfServiceSAMLProviderArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionLogOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CloudwatchLogGroup: {
          target: "com.amazonaws.ec2#String",
        },
        CloudwatchLogStream: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#TransportProtocol": {
      type: "enum",
    },
    "com.amazonaws.ec2#SelfServicePortal": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientConnectOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LambdaFunctionArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ClientLoginBannerOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        BannerText: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ClientRouteEnforcementOptions": {
      type: "structure",
      members: {
        Enforced: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnEndpointStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#ClientVpnEndpointStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnEndpointStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientVpnRouteStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#ClientVpnRouteStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnRouteStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#Ipv4PoolCoipId": {
      type: "string",
    },
    "com.amazonaws.ec2#CoipCidr": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        CoipPoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolCoipId",
          locationName: "coipPoolId",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayRouteTableId",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayRoutetableId": {
      type: "string",
    },
    "com.amazonaws.ec2#CoipPool": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#Ipv4PoolCoipId",
          locationName: "poolId",
        },
        PoolCidrs: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "poolCidrSet",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
          locationName: "localGatewayRouteTableId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        PoolArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "poolArn",
        },
      },
    },
    "com.amazonaws.ec2#GatewayType": {
      type: "enum",
    },
    "com.amazonaws.ec2#CustomerGateway": {
      type: "structure",
      members: {
        CertificateArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateArn",
        },
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        BgpAsnExtended: {
          target: "com.amazonaws.ec2#String",
          locationName: "bgpAsnExtended",
        },
        CustomerGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerGatewayId",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        Type: {
          target: "com.amazonaws.ec2#String",
          locationName: "type",
        },
        IpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipAddress",
        },
        BgpAsn: {
          target: "com.amazonaws.ec2#String",
          locationName: "bgpAsn",
        },
      },
    },
    "com.amazonaws.ec2#Subnet": {
      type: "structure",
      members: {
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        EnableLniAtDeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "enableLniAtDeviceIndex",
        },
        MapCustomerOwnedIpOnLaunch: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "mapCustomerOwnedIpOnLaunch",
        },
        CustomerOwnedIpv4Pool: {
          target: "com.amazonaws.ec2#CoipPoolId",
          locationName: "customerOwnedIpv4Pool",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        AssignIpv6AddressOnCreation: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "assignIpv6AddressOnCreation",
        },
        Ipv6CidrBlockAssociationSet: {
          target: "com.amazonaws.ec2#SubnetIpv6CidrBlockAssociationSet",
          locationName: "ipv6CidrBlockAssociationSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SubnetArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetArn",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        EnableDns64: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableDns64",
        },
        Ipv6Native: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ipv6Native",
        },
        PrivateDnsNameOptionsOnLaunch: {
          target: "com.amazonaws.ec2#PrivateDnsNameOptionsOnLaunch",
          locationName: "privateDnsNameOptionsOnLaunch",
        },
        BlockPublicAccessStates: {
          target: "com.amazonaws.ec2#BlockPublicAccessStates",
          locationName: "blockPublicAccessStates",
        },
        Type: {
          target: "com.amazonaws.ec2#String",
          locationName: "type",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        State: {
          target: "com.amazonaws.ec2#SubnetState",
          locationName: "state",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        AvailableIpAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableIpAddressCount",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        DefaultForAz: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "defaultForAz",
        },
        MapPublicIpOnLaunch: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "mapPublicIpOnLaunch",
        },
      },
    },
    "com.amazonaws.ec2#CoipPoolId": {
      type: "string",
    },
    "com.amazonaws.ec2#SubnetIpv6CidrBlockAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetIpv6CidrBlockAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrivateDnsNameOptionsOnLaunch": {
      type: "structure",
      members: {
        HostnameType: {
          target: "com.amazonaws.ec2#HostnameType",
          locationName: "hostnameType",
        },
        EnableResourceNameDnsARecord: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableResourceNameDnsARecord",
        },
        EnableResourceNameDnsAAAARecord: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableResourceNameDnsAAAARecord",
        },
      },
    },
    "com.amazonaws.ec2#HostnameType": {
      type: "enum",
    },
    "com.amazonaws.ec2#BlockPublicAccessStates": {
      type: "structure",
      members: {
        InternetGatewayBlockMode: {
          target: "com.amazonaws.ec2#BlockPublicAccessMode",
          locationName: "internetGatewayBlockMode",
        },
      },
    },
    "com.amazonaws.ec2#BlockPublicAccessMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#SubnetState": {
      type: "enum",
    },
    "com.amazonaws.ec2#Vpc": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        InstanceTenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "instanceTenancy",
        },
        Ipv6CidrBlockAssociationSet: {
          target: "com.amazonaws.ec2#VpcIpv6CidrBlockAssociationSet",
          locationName: "ipv6CidrBlockAssociationSet",
        },
        CidrBlockAssociationSet: {
          target: "com.amazonaws.ec2#VpcCidrBlockAssociationSet",
          locationName: "cidrBlockAssociationSet",
        },
        IsDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isDefault",
        },
        EncryptionControl: {
          target: "com.amazonaws.ec2#VpcEncryptionControl",
          locationName: "encryptionControl",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        BlockPublicAccessStates: {
          target: "com.amazonaws.ec2#BlockPublicAccessStates",
          locationName: "blockPublicAccessStates",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        State: {
          target: "com.amazonaws.ec2#VpcState",
          locationName: "state",
        },
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        DhcpOptionsId: {
          target: "com.amazonaws.ec2#String",
          locationName: "dhcpOptionsId",
        },
      },
    },
    "com.amazonaws.ec2#Tenancy": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcIpv6CidrBlockAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcIpv6CidrBlockAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcCidrBlockAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcCidrBlockAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEncryptionControl": {
      type: "structure",
      members: {
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        VpcEncryptionControlId: {
          target: "com.amazonaws.ec2#VpcEncryptionControlId",
          locationName: "vpcEncryptionControlId",
        },
        Mode: {
          target: "com.amazonaws.ec2#VpcEncryptionControlMode",
          locationName: "mode",
        },
        State: {
          target: "com.amazonaws.ec2#VpcEncryptionControlState",
          locationName: "state",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateMessage",
        },
        ResourceExclusions: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusions",
          locationName: "resourceExclusions",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#VpcEncryptionControlId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcEncryptionControlMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcEncryptionControlState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcEncryptionControlExclusions": {
      type: "structure",
      members: {
        InternetGateway: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusion",
          locationName: "internetGateway",
        },
        EgressOnlyInternetGateway: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusion",
          locationName: "egressOnlyInternetGateway",
        },
        NatGateway: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusion",
          locationName: "natGateway",
        },
        VirtualPrivateGateway: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusion",
          locationName: "virtualPrivateGateway",
        },
        VpcPeering: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusion",
          locationName: "vpcPeering",
        },
      },
    },
    "com.amazonaws.ec2#VpcEncryptionControlExclusion": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#VpcEncryptionControlExclusionState",
          locationName: "state",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateMessage",
        },
      },
    },
    "com.amazonaws.ec2#VpcEncryptionControlExclusionState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcState": {
      type: "enum",
    },
    "com.amazonaws.ec2#SensitiveMacCredentials": {
      type: "string",
    },
    "com.amazonaws.ec2#MacModificationTask": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        MacModificationTaskId: {
          target: "com.amazonaws.ec2#MacModificationTaskId",
          locationName: "macModificationTaskId",
        },
        MacSystemIntegrityProtectionConfig: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration",
          locationName: "macSystemIntegrityProtectionConfig",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        TaskState: {
          target: "com.amazonaws.ec2#MacModificationTaskState",
          locationName: "taskState",
        },
        TaskType: {
          target: "com.amazonaws.ec2#MacModificationTaskType",
          locationName: "taskType",
        },
      },
    },
    "com.amazonaws.ec2#MacModificationTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#MacSystemIntegrityProtectionConfiguration": {
      type: "structure",
      members: {
        AppleInternal: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "appleInternal",
        },
        BaseSystem: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "baseSystem",
        },
        DebuggingRestrictions: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "debuggingRestrictions",
        },
        DTraceRestrictions: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "dTraceRestrictions",
        },
        FilesystemProtections: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "filesystemProtections",
        },
        KextSigning: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "kextSigning",
        },
        NvramProtections: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "nvramProtections",
        },
        Status: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#MacModificationTaskState": {
      type: "enum",
    },
    "com.amazonaws.ec2#MacModificationTaskType": {
      type: "enum",
    },
    "com.amazonaws.ec2#NewDhcpConfigurationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NewDhcpConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NewDhcpConfiguration": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "key",
        },
        Values: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "Value",
        },
      },
    },
    "com.amazonaws.ec2#DhcpOptions": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        DhcpOptionsId: {
          target: "com.amazonaws.ec2#String",
          locationName: "dhcpOptionsId",
        },
        DhcpConfigurations: {
          target: "com.amazonaws.ec2#DhcpConfigurationList",
          locationName: "dhcpConfigurationSet",
        },
      },
    },
    "com.amazonaws.ec2#DhcpConfigurationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DhcpConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DhcpConfiguration": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "key",
        },
        Values: {
          target: "com.amazonaws.ec2#DhcpConfigurationValueList",
          locationName: "valueSet",
        },
      },
    },
    "com.amazonaws.ec2#DhcpConfigurationValueList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AttributeValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AttributeValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#EgressOnlyInternetGateway": {
      type: "structure",
      members: {
        Attachments: {
          target: "com.amazonaws.ec2#InternetGatewayAttachmentList",
          locationName: "attachmentSet",
        },
        EgressOnlyInternetGatewayId: {
          target: "com.amazonaws.ec2#EgressOnlyInternetGatewayId",
          locationName: "egressOnlyInternetGatewayId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#InternetGatewayAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InternetGatewayAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InternetGatewayAttachment": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#AttachmentStatus",
          locationName: "state",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#EgressOnlyInternetGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#SpotOptionsRequest": {
      type: "structure",
      members: {
        AllocationStrategy: {
          target: "com.amazonaws.ec2#SpotAllocationStrategy",
        },
        MaintenanceStrategies: {
          target: "com.amazonaws.ec2#FleetSpotMaintenanceStrategiesRequest",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#SpotInstanceInterruptionBehavior",
        },
        InstancePoolsToUseCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        SingleInstanceType: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SingleAvailabilityZone: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MinTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        MaxTotalPrice: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#SpotAllocationStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetSpotMaintenanceStrategiesRequest": {
      type: "structure",
      members: {
        CapacityRebalance: {
          target: "com.amazonaws.ec2#FleetSpotCapacityRebalanceRequest",
        },
      },
    },
    "com.amazonaws.ec2#FleetSpotCapacityRebalanceRequest": {
      type: "structure",
      members: {
        ReplacementStrategy: {
          target: "com.amazonaws.ec2#FleetReplacementStrategy",
        },
        TerminationDelay: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#FleetReplacementStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpotInstanceInterruptionBehavior": {
      type: "enum",
    },
    "com.amazonaws.ec2#OnDemandOptionsRequest": {
      type: "structure",
      members: {
        AllocationStrategy: {
          target: "com.amazonaws.ec2#FleetOnDemandAllocationStrategy",
        },
        CapacityReservationOptions: {
          target: "com.amazonaws.ec2#CapacityReservationOptionsRequest",
        },
        SingleInstanceType: {
          target: "com.amazonaws.ec2#Boolean",
        },
        SingleAvailabilityZone: {
          target: "com.amazonaws.ec2#Boolean",
        },
        MinTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        MaxTotalPrice: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#FleetOnDemandAllocationStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationOptionsRequest": {
      type: "structure",
      members: {
        UsageStrategy: {
          target: "com.amazonaws.ec2#FleetCapacityReservationUsageStrategy",
        },
      },
    },
    "com.amazonaws.ec2#FleetCapacityReservationUsageStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetExcessCapacityTerminationPolicy": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetLaunchTemplateConfigListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetLaunchTemplateConfigRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateConfigRequest": {
      type: "structure",
      members: {
        LaunchTemplateSpecification: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateSpecificationRequest",
        },
        Overrides: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateOverridesListRequest",
        },
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateSpecificationRequest": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
        },
        Version: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateId": {
      type: "string",
    },
    "com.amazonaws.ec2#LaunchTemplateName": {
      type: "string",
    },
    "com.amazonaws.ec2#FleetLaunchTemplateOverridesListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetLaunchTemplateOverridesRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateOverridesRequest": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
        },
        MaxPrice: {
          target: "com.amazonaws.ec2#String",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
        },
        WeightedCapacity: {
          target: "com.amazonaws.ec2#Double",
        },
        Priority: {
          target: "com.amazonaws.ec2#Double",
        },
        Placement: {
          target: "com.amazonaws.ec2#Placement",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#FleetBlockDeviceMappingRequestList",
          locationName: "BlockDeviceMapping",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirementsRequest",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#Placement": {
      type: "structure",
      members: {
        Affinity: {
          target: "com.amazonaws.ec2#String",
          locationName: "affinity",
        },
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
          locationName: "groupName",
        },
        PartitionNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "partitionNumber",
        },
        HostId: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostId",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "tenancy",
        },
        SpreadDomain: {
          target: "com.amazonaws.ec2#String",
          locationName: "spreadDomain",
        },
        HostResourceGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostResourceGroupArn",
        },
        GroupId: {
          target: "com.amazonaws.ec2#PlacementGroupId",
          locationName: "groupId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
      },
    },
    "com.amazonaws.ec2#PlacementGroupName": {
      type: "string",
    },
    "com.amazonaws.ec2#PlacementGroupId": {
      type: "string",
    },
    "com.amazonaws.ec2#FleetBlockDeviceMappingRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetBlockDeviceMappingRequest",
        locationName: "BlockDeviceMapping",
      },
    },
    "com.amazonaws.ec2#FleetBlockDeviceMappingRequest": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
        },
        Ebs: {
          target: "com.amazonaws.ec2#FleetEbsBlockDeviceRequest",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#FleetEbsBlockDeviceRequest": {
      type: "structure",
      members: {
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
        },
      },
    },
    "com.amazonaws.ec2#SnapshotId": {
      type: "string",
    },
    "com.amazonaws.ec2#VolumeType": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceRequirementsRequest": {
      type: "structure",
      members: {
        VCpuCount: {
          target: "com.amazonaws.ec2#VCpuCountRangeRequest",
        },
        MemoryMiB: {
          target: "com.amazonaws.ec2#MemoryMiBRequest",
        },
        CpuManufacturers: {
          target: "com.amazonaws.ec2#CpuManufacturerSet",
          locationName: "CpuManufacturer",
        },
        MemoryGiBPerVCpu: {
          target: "com.amazonaws.ec2#MemoryGiBPerVCpuRequest",
        },
        ExcludedInstanceTypes: {
          target: "com.amazonaws.ec2#ExcludedInstanceTypeSet",
          locationName: "ExcludedInstanceType",
        },
        InstanceGenerations: {
          target: "com.amazonaws.ec2#InstanceGenerationSet",
          locationName: "InstanceGeneration",
        },
        SpotMaxPricePercentageOverLowestPrice: {
          target: "com.amazonaws.ec2#Integer",
        },
        OnDemandMaxPricePercentageOverLowestPrice: {
          target: "com.amazonaws.ec2#Integer",
        },
        BareMetal: {
          target: "com.amazonaws.ec2#BareMetal",
        },
        BurstablePerformance: {
          target: "com.amazonaws.ec2#BurstablePerformance",
        },
        RequireHibernateSupport: {
          target: "com.amazonaws.ec2#Boolean",
        },
        NetworkInterfaceCount: {
          target: "com.amazonaws.ec2#NetworkInterfaceCountRequest",
        },
        LocalStorage: {
          target: "com.amazonaws.ec2#LocalStorage",
        },
        LocalStorageTypes: {
          target: "com.amazonaws.ec2#LocalStorageTypeSet",
          locationName: "LocalStorageType",
        },
        TotalLocalStorageGB: {
          target: "com.amazonaws.ec2#TotalLocalStorageGBRequest",
        },
        BaselineEbsBandwidthMbps: {
          target: "com.amazonaws.ec2#BaselineEbsBandwidthMbpsRequest",
        },
        AcceleratorTypes: {
          target: "com.amazonaws.ec2#AcceleratorTypeSet",
          locationName: "AcceleratorType",
        },
        AcceleratorCount: {
          target: "com.amazonaws.ec2#AcceleratorCountRequest",
        },
        AcceleratorManufacturers: {
          target: "com.amazonaws.ec2#AcceleratorManufacturerSet",
          locationName: "AcceleratorManufacturer",
        },
        AcceleratorNames: {
          target: "com.amazonaws.ec2#AcceleratorNameSet",
          locationName: "AcceleratorName",
        },
        AcceleratorTotalMemoryMiB: {
          target: "com.amazonaws.ec2#AcceleratorTotalMemoryMiBRequest",
        },
        NetworkBandwidthGbps: {
          target: "com.amazonaws.ec2#NetworkBandwidthGbpsRequest",
        },
        AllowedInstanceTypes: {
          target: "com.amazonaws.ec2#AllowedInstanceTypeSet",
          locationName: "AllowedInstanceType",
        },
        MaxSpotPriceAsPercentageOfOptimalOnDemandPrice: {
          target: "com.amazonaws.ec2#Integer",
        },
        BaselinePerformanceFactors: {
          target: "com.amazonaws.ec2#BaselinePerformanceFactorsRequest",
        },
      },
    },
    "com.amazonaws.ec2#VCpuCountRangeRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#MemoryMiBRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#CpuManufacturerSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CpuManufacturer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CpuManufacturer": {
      type: "enum",
    },
    "com.amazonaws.ec2#MemoryGiBPerVCpuRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Double",
        },
        Max: {
          target: "com.amazonaws.ec2#Double",
        },
      },
    },
    "com.amazonaws.ec2#ExcludedInstanceTypeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ExcludedInstanceType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ExcludedInstanceType": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceGenerationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceGeneration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceGeneration": {
      type: "enum",
    },
    "com.amazonaws.ec2#BareMetal": {
      type: "enum",
    },
    "com.amazonaws.ec2#BurstablePerformance": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInterfaceCountRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#LocalStorage": {
      type: "enum",
    },
    "com.amazonaws.ec2#LocalStorageTypeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalStorageType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalStorageType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TotalLocalStorageGBRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Double",
        },
        Max: {
          target: "com.amazonaws.ec2#Double",
        },
      },
    },
    "com.amazonaws.ec2#BaselineEbsBandwidthMbpsRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#AcceleratorTypeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AcceleratorType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AcceleratorType": {
      type: "enum",
    },
    "com.amazonaws.ec2#AcceleratorCountRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#AcceleratorManufacturerSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AcceleratorManufacturer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AcceleratorManufacturer": {
      type: "enum",
    },
    "com.amazonaws.ec2#AcceleratorNameSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AcceleratorName",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AcceleratorName": {
      type: "enum",
    },
    "com.amazonaws.ec2#AcceleratorTotalMemoryMiBRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#NetworkBandwidthGbpsRequest": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Double",
        },
        Max: {
          target: "com.amazonaws.ec2#Double",
        },
      },
    },
    "com.amazonaws.ec2#AllowedInstanceTypeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AllowedInstanceType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AllowedInstanceType": {
      type: "string",
    },
    "com.amazonaws.ec2#BaselinePerformanceFactorsRequest": {
      type: "structure",
      members: {
        Cpu: {
          target: "com.amazonaws.ec2#CpuPerformanceFactorRequest",
        },
      },
    },
    "com.amazonaws.ec2#CpuPerformanceFactorRequest": {
      type: "structure",
      members: {
        References: {
          target: "com.amazonaws.ec2#PerformanceFactorReferenceSetRequest",
          locationName: "Reference",
        },
      },
    },
    "com.amazonaws.ec2#PerformanceFactorReferenceSetRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PerformanceFactorReferenceRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PerformanceFactorReferenceRequest": {
      type: "structure",
      members: {
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#TargetCapacitySpecificationRequest": {
      type: "structure",
      members: {
        TotalTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        OnDemandTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        SpotTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
        },
        DefaultTargetCapacityType: {
          target: "com.amazonaws.ec2#DefaultTargetCapacityType",
        },
        TargetCapacityUnitType: {
          target: "com.amazonaws.ec2#TargetCapacityUnitType",
        },
      },
    },
    "com.amazonaws.ec2#DefaultTargetCapacityType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TargetCapacityUnitType": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetType": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetId": {
      type: "string",
    },
    "com.amazonaws.ec2#CreateFleetErrorsSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CreateFleetError",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CreateFleetError": {
      type: "structure",
      members: {
        LaunchTemplateAndOverrides: {
          target: "com.amazonaws.ec2#LaunchTemplateAndOverridesResponse",
          locationName: "launchTemplateAndOverrides",
        },
        Lifecycle: {
          target: "com.amazonaws.ec2#InstanceLifecycle",
          locationName: "lifecycle",
        },
        ErrorCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "errorCode",
        },
        ErrorMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "errorMessage",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateAndOverridesResponse": {
      type: "structure",
      members: {
        LaunchTemplateSpecification: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateSpecification",
          locationName: "launchTemplateSpecification",
        },
        Overrides: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateOverrides",
          locationName: "overrides",
        },
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateSpecification": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
          locationName: "launchTemplateName",
        },
        Version: {
          target: "com.amazonaws.ec2#String",
          locationName: "version",
        },
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateOverrides": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        MaxPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "maxPrice",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
          locationName: "availabilityZone",
        },
        WeightedCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "weightedCapacity",
        },
        Priority: {
          target: "com.amazonaws.ec2#Double",
          locationName: "priority",
        },
        Placement: {
          target: "com.amazonaws.ec2#PlacementResponse",
          locationName: "placement",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirements",
          locationName: "instanceRequirements",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingResponseList",
          locationName: "blockDeviceMappingSet",
        },
      },
    },
    "com.amazonaws.ec2#PlacementResponse": {
      type: "structure",
      members: {
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
          locationName: "groupName",
        },
      },
    },
    "com.amazonaws.ec2#InstanceRequirements": {
      type: "structure",
      members: {
        VCpuCount: {
          target: "com.amazonaws.ec2#VCpuCountRange",
          locationName: "vCpuCount",
        },
        MemoryMiB: {
          target: "com.amazonaws.ec2#MemoryMiB",
          locationName: "memoryMiB",
        },
        CpuManufacturers: {
          target: "com.amazonaws.ec2#CpuManufacturerSet",
          locationName: "cpuManufacturerSet",
        },
        MemoryGiBPerVCpu: {
          target: "com.amazonaws.ec2#MemoryGiBPerVCpu",
          locationName: "memoryGiBPerVCpu",
        },
        ExcludedInstanceTypes: {
          target: "com.amazonaws.ec2#ExcludedInstanceTypeSet",
          locationName: "excludedInstanceTypeSet",
        },
        InstanceGenerations: {
          target: "com.amazonaws.ec2#InstanceGenerationSet",
          locationName: "instanceGenerationSet",
        },
        SpotMaxPricePercentageOverLowestPrice: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "spotMaxPricePercentageOverLowestPrice",
        },
        OnDemandMaxPricePercentageOverLowestPrice: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "onDemandMaxPricePercentageOverLowestPrice",
        },
        BareMetal: {
          target: "com.amazonaws.ec2#BareMetal",
          locationName: "bareMetal",
        },
        BurstablePerformance: {
          target: "com.amazonaws.ec2#BurstablePerformance",
          locationName: "burstablePerformance",
        },
        RequireHibernateSupport: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "requireHibernateSupport",
        },
        NetworkInterfaceCount: {
          target: "com.amazonaws.ec2#NetworkInterfaceCount",
          locationName: "networkInterfaceCount",
        },
        LocalStorage: {
          target: "com.amazonaws.ec2#LocalStorage",
          locationName: "localStorage",
        },
        LocalStorageTypes: {
          target: "com.amazonaws.ec2#LocalStorageTypeSet",
          locationName: "localStorageTypeSet",
        },
        TotalLocalStorageGB: {
          target: "com.amazonaws.ec2#TotalLocalStorageGB",
          locationName: "totalLocalStorageGB",
        },
        BaselineEbsBandwidthMbps: {
          target: "com.amazonaws.ec2#BaselineEbsBandwidthMbps",
          locationName: "baselineEbsBandwidthMbps",
        },
        AcceleratorTypes: {
          target: "com.amazonaws.ec2#AcceleratorTypeSet",
          locationName: "acceleratorTypeSet",
        },
        AcceleratorCount: {
          target: "com.amazonaws.ec2#AcceleratorCount",
          locationName: "acceleratorCount",
        },
        AcceleratorManufacturers: {
          target: "com.amazonaws.ec2#AcceleratorManufacturerSet",
          locationName: "acceleratorManufacturerSet",
        },
        AcceleratorNames: {
          target: "com.amazonaws.ec2#AcceleratorNameSet",
          locationName: "acceleratorNameSet",
        },
        AcceleratorTotalMemoryMiB: {
          target: "com.amazonaws.ec2#AcceleratorTotalMemoryMiB",
          locationName: "acceleratorTotalMemoryMiB",
        },
        NetworkBandwidthGbps: {
          target: "com.amazonaws.ec2#NetworkBandwidthGbps",
          locationName: "networkBandwidthGbps",
        },
        AllowedInstanceTypes: {
          target: "com.amazonaws.ec2#AllowedInstanceTypeSet",
          locationName: "allowedInstanceTypeSet",
        },
        MaxSpotPriceAsPercentageOfOptimalOnDemandPrice: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxSpotPriceAsPercentageOfOptimalOnDemandPrice",
        },
        BaselinePerformanceFactors: {
          target: "com.amazonaws.ec2#BaselinePerformanceFactors",
          locationName: "baselinePerformanceFactors",
        },
      },
    },
    "com.amazonaws.ec2#VCpuCountRange": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#MemoryMiB": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#MemoryGiBPerVCpu": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Double",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Double",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceCount": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#TotalLocalStorageGB": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Double",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Double",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#BaselineEbsBandwidthMbps": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#AcceleratorCount": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#AcceleratorTotalMemoryMiB": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#NetworkBandwidthGbps": {
      type: "structure",
      members: {
        Min: {
          target: "com.amazonaws.ec2#Double",
          locationName: "min",
        },
        Max: {
          target: "com.amazonaws.ec2#Double",
          locationName: "max",
        },
      },
    },
    "com.amazonaws.ec2#BaselinePerformanceFactors": {
      type: "structure",
      members: {
        Cpu: {
          target: "com.amazonaws.ec2#CpuPerformanceFactor",
          locationName: "cpu",
        },
      },
    },
    "com.amazonaws.ec2#CpuPerformanceFactor": {
      type: "structure",
      members: {
        References: {
          target: "com.amazonaws.ec2#PerformanceFactorReferenceSet",
          locationName: "referenceSet",
        },
      },
    },
    "com.amazonaws.ec2#PerformanceFactorReferenceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PerformanceFactorReference",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PerformanceFactorReference": {
      type: "structure",
      members: {
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceFamily",
        },
      },
    },
    "com.amazonaws.ec2#BlockDeviceMappingResponseList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BlockDeviceMappingResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#BlockDeviceMappingResponse": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
          locationName: "virtualName",
        },
        Ebs: {
          target: "com.amazonaws.ec2#EbsBlockDeviceResponse",
          locationName: "ebs",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
          locationName: "noDevice",
        },
      },
    },
    "com.amazonaws.ec2#EbsBlockDeviceResponse": {
      type: "structure",
      members: {
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "iops",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "throughput",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
          locationName: "kmsKeyId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
          locationName: "snapshotId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeSize",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
          locationName: "volumeType",
        },
      },
    },
    "com.amazonaws.ec2#InstanceLifecycle": {
      type: "enum",
    },
    "com.amazonaws.ec2#CreateFleetInstancesSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CreateFleetInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CreateFleetInstance": {
      type: "structure",
      members: {
        LaunchTemplateAndOverrides: {
          target: "com.amazonaws.ec2#LaunchTemplateAndOverridesResponse",
          locationName: "launchTemplateAndOverrides",
        },
        Lifecycle: {
          target: "com.amazonaws.ec2#InstanceLifecycle",
          locationName: "lifecycle",
        },
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdsSet",
          locationName: "instanceIds",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        Platform: {
          target: "com.amazonaws.ec2#PlatformValues",
          locationName: "platform",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIdsSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PlatformValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#FlowLogResourceIds": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FlowLogResourceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FlowLogResourceId": {
      type: "string",
    },
    "com.amazonaws.ec2#FlowLogsResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficType": {
      type: "enum",
    },
    "com.amazonaws.ec2#LogDestinationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DestinationOptionsRequest": {
      type: "structure",
      members: {
        FileFormat: {
          target: "com.amazonaws.ec2#DestinationFileFormat",
        },
        HiveCompatiblePartitions: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PerHourPartition: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DestinationFileFormat": {
      type: "enum",
    },
    "com.amazonaws.ec2#StorageLocation": {
      type: "structure",
      members: {
        Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        Key: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#SnapshotLocationEnum": {
      type: "enum",
    },
    "com.amazonaws.ec2#BlockDeviceMappingRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BlockDeviceMapping",
        locationName: "BlockDeviceMapping",
      },
    },
    "com.amazonaws.ec2#BlockDeviceMapping": {
      type: "structure",
      members: {
        Ebs: {
          target: "com.amazonaws.ec2#EbsBlockDevice",
          locationName: "ebs",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
          locationName: "noDevice",
        },
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
          locationName: "virtualName",
        },
      },
    },
    "com.amazonaws.ec2#EbsBlockDevice": {
      type: "structure",
      members: {
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "iops",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
          locationName: "snapshotId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeSize",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
          locationName: "volumeType",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "throughput",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        VolumeInitializationRate: {
          target: "com.amazonaws.ec2#Integer",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupIdStringListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "SecurityGroupId",
      },
    },
    "com.amazonaws.ec2#IpAddressType": {
      type: "enum",
    },
    "com.amazonaws.ec2#Ec2InstanceConnectEndpoint": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        InstanceConnectEndpointId: {
          target: "com.amazonaws.ec2#InstanceConnectEndpointId",
          locationName: "instanceConnectEndpointId",
        },
        InstanceConnectEndpointArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "instanceConnectEndpointArn",
        },
        State: {
          target: "com.amazonaws.ec2#Ec2InstanceConnectEndpointState",
          locationName: "state",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateMessage",
        },
        DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "dnsName",
        },
        FipsDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "fipsDnsName",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#NetworkInterfaceIdSet",
          locationName: "networkInterfaceIdSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        CreatedAt: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createdAt",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        PreserveClientIp: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "preserveClientIp",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdSet",
          locationName: "securityGroupIdSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        IpAddressType: {
          target: "com.amazonaws.ec2#IpAddressType",
          locationName: "ipAddressType",
        },
      },
    },
    "com.amazonaws.ec2#InstanceConnectEndpointId": {
      type: "string",
    },
    "com.amazonaws.ec2#Ec2InstanceConnectEndpointState": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInterfaceIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceEventWindowTimeRangeRequestSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceEventWindowTimeRangeRequest",
      },
    },
    "com.amazonaws.ec2#InstanceEventWindowTimeRangeRequest": {
      type: "structure",
      members: {
        StartWeekDay: {
          target: "com.amazonaws.ec2#WeekDay",
        },
        StartHour: {
          target: "com.amazonaws.ec2#Hour",
        },
        EndWeekDay: {
          target: "com.amazonaws.ec2#WeekDay",
        },
        EndHour: {
          target: "com.amazonaws.ec2#Hour",
        },
      },
    },
    "com.amazonaws.ec2#ExportEnvironment": {
      type: "enum",
    },
    "com.amazonaws.ec2#ExportToS3TaskSpecification": {
      type: "structure",
      members: {
        DiskImageFormat: {
          target: "com.amazonaws.ec2#DiskImageFormat",
          locationName: "diskImageFormat",
        },
        ContainerFormat: {
          target: "com.amazonaws.ec2#ContainerFormat",
          locationName: "containerFormat",
        },
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Bucket",
        },
        S3Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Prefix",
        },
      },
    },
    "com.amazonaws.ec2#DiskImageFormat": {
      type: "enum",
    },
    "com.amazonaws.ec2#ContainerFormat": {
      type: "enum",
    },
    "com.amazonaws.ec2#ExportTask": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        ExportTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "exportTaskId",
        },
        ExportToS3Task: {
          target: "com.amazonaws.ec2#ExportToS3Task",
          locationName: "exportToS3",
        },
        InstanceExportDetails: {
          target: "com.amazonaws.ec2#InstanceExportDetails",
          locationName: "instanceExport",
        },
        State: {
          target: "com.amazonaws.ec2#ExportTaskState",
          locationName: "state",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ExportToS3Task": {
      type: "structure",
      members: {
        ContainerFormat: {
          target: "com.amazonaws.ec2#ContainerFormat",
          locationName: "containerFormat",
        },
        DiskImageFormat: {
          target: "com.amazonaws.ec2#DiskImageFormat",
          locationName: "diskImageFormat",
        },
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Bucket",
        },
        S3Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Key",
        },
      },
    },
    "com.amazonaws.ec2#InstanceExportDetails": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        TargetEnvironment: {
          target: "com.amazonaws.ec2#ExportEnvironment",
          locationName: "targetEnvironment",
        },
      },
    },
    "com.amazonaws.ec2#ExportTaskState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InternetGateway": {
      type: "structure",
      members: {
        Attachments: {
          target: "com.amazonaws.ec2#InternetGatewayAttachmentList",
          locationName: "attachmentSet",
        },
        InternetGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "internetGatewayId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#AddIpamOperatingRegionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AddIpamOperatingRegion",
      },
    },
    "com.amazonaws.ec2#AddIpamOperatingRegion": {
      type: "structure",
      members: {
        RegionName: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#IpamTier": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamMeteredAccount": {
      type: "enum",
    },
    "com.amazonaws.ec2#Ipam": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
          locationName: "ipamId",
        },
        IpamArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamArn",
        },
        IpamRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamRegion",
        },
        PublicDefaultScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
          locationName: "publicDefaultScopeId",
        },
        PrivateDefaultScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
          locationName: "privateDefaultScopeId",
        },
        ScopeCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "scopeCount",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        OperatingRegions: {
          target: "com.amazonaws.ec2#IpamOperatingRegionSet",
          locationName: "operatingRegionSet",
        },
        State: {
          target: "com.amazonaws.ec2#IpamState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        DefaultResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
          locationName: "defaultResourceDiscoveryId",
        },
        DefaultResourceDiscoveryAssociationId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociationId",
          locationName: "defaultResourceDiscoveryAssociationId",
        },
        ResourceDiscoveryAssociationCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "resourceDiscoveryAssociationCount",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateMessage",
        },
        Tier: {
          target: "com.amazonaws.ec2#IpamTier",
          locationName: "tier",
        },
        EnablePrivateGua: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enablePrivateGua",
        },
        MeteredAccount: {
          target: "com.amazonaws.ec2#IpamMeteredAccount",
          locationName: "meteredAccount",
        },
      },
    },
    "com.amazonaws.ec2#IpamScopeId": {
      type: "string",
    },
    "com.amazonaws.ec2#IpamOperatingRegionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamOperatingRegion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamOperatingRegion": {
      type: "structure",
      members: {
        RegionName: {
          target: "com.amazonaws.ec2#String",
          locationName: "regionName",
        },
      },
    },
    "com.amazonaws.ec2#IpamState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamExternalResourceVerificationToken": {
      type: "structure",
      members: {
        IpamExternalResourceVerificationTokenId: {
          target: "com.amazonaws.ec2#IpamExternalResourceVerificationTokenId",
          locationName: "ipamExternalResourceVerificationTokenId",
        },
        IpamExternalResourceVerificationTokenArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamExternalResourceVerificationTokenArn",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
          locationName: "ipamId",
        },
        IpamArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamArn",
        },
        IpamRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamRegion",
        },
        TokenValue: {
          target: "com.amazonaws.ec2#String",
          locationName: "tokenValue",
        },
        TokenName: {
          target: "com.amazonaws.ec2#String",
          locationName: "tokenName",
        },
        NotAfter: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "notAfter",
        },
        Status: {
          target: "com.amazonaws.ec2#TokenState",
          locationName: "status",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        State: {
          target:
            "com.amazonaws.ec2#IpamExternalResourceVerificationTokenState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#IpamExternalResourceVerificationTokenId": {
      type: "string",
    },
    "com.amazonaws.ec2#TokenState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamExternalResourceVerificationTokenState": {
      type: "enum",
    },
    "com.amazonaws.ec2#AddressFamily": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamNetmaskLength": {
      type: "integer",
    },
    "com.amazonaws.ec2#RequestIpamResourceTagList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RequestIpamResourceTag",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RequestIpamResourceTag": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#IpamPoolAwsService": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPoolPublicIpSource": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPoolSourceResourceRequest": {
      type: "structure",
      members: {
        ResourceId: {
          target: "com.amazonaws.ec2#String",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamPoolSourceResourceType",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
        },
        ResourceOwner: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#IpamPoolSourceResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPool": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
          locationName: "ipamPoolId",
        },
        SourceIpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
          locationName: "sourceIpamPoolId",
        },
        IpamPoolArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamPoolArn",
        },
        IpamScopeArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamScopeArn",
        },
        IpamScopeType: {
          target: "com.amazonaws.ec2#IpamScopeType",
          locationName: "ipamScopeType",
        },
        IpamArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamArn",
        },
        IpamRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamRegion",
        },
        Locale: {
          target: "com.amazonaws.ec2#String",
          locationName: "locale",
        },
        PoolDepth: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "poolDepth",
        },
        State: {
          target: "com.amazonaws.ec2#IpamPoolState",
          locationName: "state",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateMessage",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        AutoImport: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "autoImport",
        },
        PubliclyAdvertisable: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "publiclyAdvertisable",
        },
        AddressFamily: {
          target: "com.amazonaws.ec2#AddressFamily",
          locationName: "addressFamily",
        },
        AllocationMinNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
          locationName: "allocationMinNetmaskLength",
        },
        AllocationMaxNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
          locationName: "allocationMaxNetmaskLength",
        },
        AllocationDefaultNetmaskLength: {
          target: "com.amazonaws.ec2#IpamNetmaskLength",
          locationName: "allocationDefaultNetmaskLength",
        },
        AllocationResourceTags: {
          target: "com.amazonaws.ec2#IpamResourceTagList",
          locationName: "allocationResourceTagSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        AwsService: {
          target: "com.amazonaws.ec2#IpamPoolAwsService",
          locationName: "awsService",
        },
        PublicIpSource: {
          target: "com.amazonaws.ec2#IpamPoolPublicIpSource",
          locationName: "publicIpSource",
        },
        SourceResource: {
          target: "com.amazonaws.ec2#IpamPoolSourceResource",
          locationName: "sourceResource",
        },
      },
    },
    "com.amazonaws.ec2#IpamScopeType": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPoolState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamResourceTagList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamResourceTag",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamResourceTag": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "key",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#IpamPoolSourceResource": {
      type: "structure",
      members: {
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamPoolSourceResourceType",
          locationName: "resourceType",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceRegion",
        },
        ResourceOwner: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwner",
        },
      },
    },
    "com.amazonaws.ec2#IpamResourceDiscovery": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
          locationName: "ipamResourceDiscoveryId",
        },
        IpamResourceDiscoveryArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamResourceDiscoveryArn",
        },
        IpamResourceDiscoveryRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamResourceDiscoveryRegion",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        OperatingRegions: {
          target: "com.amazonaws.ec2#IpamOperatingRegionSet",
          locationName: "operatingRegionSet",
        },
        IsDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isDefault",
        },
        State: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        OrganizationalUnitExclusions: {
          target: "com.amazonaws.ec2#IpamOrganizationalUnitExclusionSet",
          locationName: "organizationalUnitExclusionSet",
        },
      },
    },
    "com.amazonaws.ec2#IpamResourceDiscoveryState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamOrganizationalUnitExclusionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamOrganizationalUnitExclusion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamOrganizationalUnitExclusion": {
      type: "structure",
      members: {
        OrganizationsEntityPath: {
          target: "com.amazonaws.ec2#String",
          locationName: "organizationsEntityPath",
        },
      },
    },
    "com.amazonaws.ec2#IpamScope": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
          locationName: "ipamScopeId",
        },
        IpamScopeArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamScopeArn",
        },
        IpamArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ipamArn",
        },
        IpamRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipamRegion",
        },
        IpamScopeType: {
          target: "com.amazonaws.ec2#IpamScopeType",
          locationName: "ipamScopeType",
        },
        IsDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isDefault",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        PoolCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "poolCount",
        },
        State: {
          target: "com.amazonaws.ec2#IpamScopeState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#IpamScopeState": {
      type: "enum",
    },
    "com.amazonaws.ec2#KeyType": {
      type: "enum",
    },
    "com.amazonaws.ec2#KeyFormat": {
      type: "enum",
    },
    "com.amazonaws.ec2#SensitiveUserData": {
      type: "string",
    },
    "com.amazonaws.ec2#VersionDescription": {
      type: "string",
    },
    "com.amazonaws.ec2#RequestLaunchTemplateData": {
      type: "structure",
      members: {
        KernelId: {
          target: "com.amazonaws.ec2#KernelId",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IamInstanceProfile: {
          target:
            "com.amazonaws.ec2#LaunchTemplateIamInstanceProfileSpecificationRequest",
        },
        BlockDeviceMappings: {
          target:
            "com.amazonaws.ec2#LaunchTemplateBlockDeviceMappingRequestList",
          locationName: "BlockDeviceMapping",
        },
        NetworkInterfaces: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList",
          locationName: "NetworkInterface",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
        },
        KeyName: {
          target: "com.amazonaws.ec2#KeyPairName",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#LaunchTemplatesMonitoringRequest",
        },
        Placement: {
          target: "com.amazonaws.ec2#LaunchTemplatePlacementRequest",
        },
        RamDiskId: {
          target: "com.amazonaws.ec2#RamdiskId",
        },
        DisableApiTermination: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceInitiatedShutdownBehavior: {
          target: "com.amazonaws.ec2#ShutdownBehavior",
        },
        UserData: {
          target: "com.amazonaws.ec2#SensitiveUserData",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#LaunchTemplateTagSpecificationRequestList",
          locationName: "TagSpecification",
        },
        ElasticGpuSpecifications: {
          target: "com.amazonaws.ec2#ElasticGpuSpecificationList",
          locationName: "ElasticGpuSpecification",
        },
        ElasticInferenceAccelerators: {
          target:
            "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorList",
          locationName: "ElasticInferenceAccelerator",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringList",
          locationName: "SecurityGroupId",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#SecurityGroupStringList",
          locationName: "SecurityGroup",
        },
        InstanceMarketOptions: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMarketOptionsRequest",
        },
        CreditSpecification: {
          target: "com.amazonaws.ec2#CreditSpecificationRequest",
        },
        CpuOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateCpuOptionsRequest",
        },
        CapacityReservationSpecification: {
          target:
            "com.amazonaws.ec2#LaunchTemplateCapacityReservationSpecificationRequest",
        },
        LicenseSpecifications: {
          target:
            "com.amazonaws.ec2#LaunchTemplateLicenseSpecificationListRequest",
          locationName: "LicenseSpecification",
        },
        HibernationOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateHibernationOptionsRequest",
        },
        MetadataOptions: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMetadataOptionsRequest",
        },
        EnclaveOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateEnclaveOptionsRequest",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirementsRequest",
        },
        PrivateDnsNameOptions: {
          target:
            "com.amazonaws.ec2#LaunchTemplatePrivateDnsNameOptionsRequest",
        },
        MaintenanceOptions: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMaintenanceOptionsRequest",
        },
        DisableApiStop: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorRequest",
        },
        NetworkPerformanceOptions: {
          target:
            "com.amazonaws.ec2#LaunchTemplateNetworkPerformanceOptionsRequest",
        },
      },
    },
    "com.amazonaws.ec2#KernelId": {
      type: "string",
    },
    "com.amazonaws.ec2#LaunchTemplateIamInstanceProfileSpecificationRequest": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateBlockDeviceMappingRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateBlockDeviceMappingRequest",
        locationName: "BlockDeviceMapping",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateBlockDeviceMappingRequest": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
        },
        Ebs: {
          target: "com.amazonaws.ec2#LaunchTemplateEbsBlockDeviceRequest",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateEbsBlockDeviceRequest": {
      type: "structure",
      members: {
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
        },
        VolumeInitializationRate: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList":
      {
        type: "list",
        member: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecificationRequest",
          locationName: "InstanceNetworkInterfaceSpecification",
        },
      },
    "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecificationRequest":
      {
        type: "structure",
        members: {
          AssociateCarrierIpAddress: {
            target: "com.amazonaws.ec2#Boolean",
          },
          AssociatePublicIpAddress: {
            target: "com.amazonaws.ec2#Boolean",
          },
          DeleteOnTermination: {
            target: "com.amazonaws.ec2#Boolean",
          },
          Description: {
            target: "com.amazonaws.ec2#String",
          },
          DeviceIndex: {
            target: "com.amazonaws.ec2#Integer",
          },
          Groups: {
            target: "com.amazonaws.ec2#SecurityGroupIdStringList",
            locationName: "SecurityGroupId",
          },
          InterfaceType: {
            target: "com.amazonaws.ec2#String",
          },
          Ipv6AddressCount: {
            target: "com.amazonaws.ec2#Integer",
          },
          Ipv6Addresses: {
            target: "com.amazonaws.ec2#InstanceIpv6AddressListRequest",
          },
          NetworkInterfaceId: {
            target: "com.amazonaws.ec2#NetworkInterfaceId",
          },
          PrivateIpAddress: {
            target: "com.amazonaws.ec2#String",
          },
          PrivateIpAddresses: {
            target: "com.amazonaws.ec2#PrivateIpAddressSpecificationList",
          },
          SecondaryPrivateIpAddressCount: {
            target: "com.amazonaws.ec2#Integer",
          },
          SubnetId: {
            target: "com.amazonaws.ec2#SubnetId",
          },
          NetworkCardIndex: {
            target: "com.amazonaws.ec2#Integer",
          },
          Ipv4Prefixes: {
            target: "com.amazonaws.ec2#Ipv4PrefixList",
            locationName: "Ipv4Prefix",
          },
          Ipv4PrefixCount: {
            target: "com.amazonaws.ec2#Integer",
          },
          Ipv6Prefixes: {
            target: "com.amazonaws.ec2#Ipv6PrefixList",
            locationName: "Ipv6Prefix",
          },
          Ipv6PrefixCount: {
            target: "com.amazonaws.ec2#Integer",
          },
          PrimaryIpv6: {
            target: "com.amazonaws.ec2#Boolean",
          },
          EnaSrdSpecification: {
            target: "com.amazonaws.ec2#EnaSrdSpecificationRequest",
          },
          ConnectionTrackingSpecification: {
            target: "com.amazonaws.ec2#ConnectionTrackingSpecificationRequest",
          },
          EnaQueueCount: {
            target: "com.amazonaws.ec2#Integer",
          },
        },
      },
    "com.amazonaws.ec2#SecurityGroupIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "SecurityGroupId",
      },
    },
    "com.amazonaws.ec2#InstanceIpv6AddressListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceIpv6AddressRequest",
        locationName: "InstanceIpv6Address",
      },
    },
    "com.amazonaws.ec2#InstanceIpv6AddressRequest": {
      type: "structure",
      members: {
        Ipv6Address: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#PrivateIpAddressSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrivateIpAddressSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrivateIpAddressSpecification": {
      type: "structure",
      members: {
        Primary: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "primary",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#Ipv4PrefixList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv4PrefixSpecificationRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv4PrefixSpecificationRequest": {
      type: "structure",
      members: {
        Ipv4Prefix: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6PrefixList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6PrefixSpecificationRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6PrefixSpecificationRequest": {
      type: "structure",
      members: {
        Ipv6Prefix: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#EnaSrdSpecificationRequest": {
      type: "structure",
      members: {
        EnaSrdEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnaSrdUdpSpecification: {
          target: "com.amazonaws.ec2#EnaSrdUdpSpecificationRequest",
        },
      },
    },
    "com.amazonaws.ec2#EnaSrdUdpSpecificationRequest": {
      type: "structure",
      members: {
        EnaSrdUdpEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionTrackingSpecificationRequest": {
      type: "structure",
      members: {
        TcpEstablishedTimeout: {
          target: "com.amazonaws.ec2#Integer",
        },
        UdpStreamTimeout: {
          target: "com.amazonaws.ec2#Integer",
        },
        UdpTimeout: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#KeyPairName": {
      type: "string",
    },
    "com.amazonaws.ec2#LaunchTemplatesMonitoringRequest": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplatePlacementRequest": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
        },
        Affinity: {
          target: "com.amazonaws.ec2#String",
        },
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
        },
        HostId: {
          target: "com.amazonaws.ec2#DedicatedHostId",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#Tenancy",
        },
        SpreadDomain: {
          target: "com.amazonaws.ec2#String",
        },
        HostResourceGroupArn: {
          target: "com.amazonaws.ec2#String",
        },
        PartitionNumber: {
          target: "com.amazonaws.ec2#Integer",
        },
        GroupId: {
          target: "com.amazonaws.ec2#PlacementGroupId",
        },
      },
    },
    "com.amazonaws.ec2#RamdiskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ShutdownBehavior": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateTagSpecificationRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateTagSpecificationRequest",
        locationName: "LaunchTemplateTagSpecificationRequest",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateTagSpecificationRequest": {
      type: "structure",
      members: {
        ResourceType: {
          target: "com.amazonaws.ec2#ResourceType",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "Tag",
        },
      },
    },
    "com.amazonaws.ec2#ElasticGpuSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticGpuSpecification",
        locationName: "ElasticGpuSpecification",
      },
    },
    "com.amazonaws.ec2#ElasticGpuSpecification": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateElasticInferenceAccelerator",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateElasticInferenceAccelerator": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#String",
        },
        Count: {
          target:
            "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorCount",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#SecurityGroupStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupName",
        locationName: "SecurityGroup",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMarketOptionsRequest": {
      type: "structure",
      members: {
        MarketType: {
          target: "com.amazonaws.ec2#MarketType",
        },
        SpotOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateSpotMarketOptionsRequest",
        },
      },
    },
    "com.amazonaws.ec2#MarketType": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateSpotMarketOptionsRequest": {
      type: "structure",
      members: {
        MaxPrice: {
          target: "com.amazonaws.ec2#String",
        },
        SpotInstanceType: {
          target: "com.amazonaws.ec2#SpotInstanceType",
        },
        BlockDurationMinutes: {
          target: "com.amazonaws.ec2#Integer",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#InstanceInterruptionBehavior",
        },
      },
    },
    "com.amazonaws.ec2#SpotInstanceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceInterruptionBehavior": {
      type: "enum",
    },
    "com.amazonaws.ec2#CreditSpecificationRequest": {
      type: "structure",
      members: {
        CpuCredits: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateCpuOptionsRequest": {
      type: "structure",
      members: {
        CoreCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        ThreadsPerCore: {
          target: "com.amazonaws.ec2#Integer",
        },
        AmdSevSnp: {
          target: "com.amazonaws.ec2#AmdSevSnpSpecification",
        },
      },
    },
    "com.amazonaws.ec2#AmdSevSnpSpecification": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateCapacityReservationSpecificationRequest": {
      type: "structure",
      members: {
        CapacityReservationPreference: {
          target: "com.amazonaws.ec2#CapacityReservationPreference",
        },
        CapacityReservationTarget: {
          target: "com.amazonaws.ec2#CapacityReservationTarget",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationPreference": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationTarget": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
        },
        CapacityReservationResourceGroupArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateLicenseSpecificationListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateLicenseConfigurationRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateLicenseConfigurationRequest": {
      type: "structure",
      members: {
        LicenseConfigurationArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateHibernationOptionsRequest": {
      type: "structure",
      members: {
        Configured: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMetadataOptionsRequest": {
      type: "structure",
      members: {
        HttpTokens: {
          target: "com.amazonaws.ec2#LaunchTemplateHttpTokensState",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#Integer",
        },
        HttpEndpoint: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMetadataEndpointState",
        },
        HttpProtocolIpv6: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMetadataProtocolIpv6",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#LaunchTemplateInstanceMetadataTagsState",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateHttpTokensState": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMetadataEndpointState": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMetadataProtocolIpv6": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMetadataTagsState": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateEnclaveOptionsRequest": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplatePrivateDnsNameOptionsRequest": {
      type: "structure",
      members: {
        HostnameType: {
          target: "com.amazonaws.ec2#HostnameType",
        },
        EnableResourceNameDnsARecord: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnableResourceNameDnsAAAARecord: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMaintenanceOptionsRequest": {
      type: "structure",
      members: {
        AutoRecovery: {
          target: "com.amazonaws.ec2#LaunchTemplateAutoRecoveryState",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateAutoRecoveryState": {
      type: "enum",
    },
    "com.amazonaws.ec2#OperatorRequest": {
      type: "structure",
      members: {
        Principal: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateNetworkPerformanceOptionsRequest": {
      type: "structure",
      members: {
        BandwidthWeighting: {
          target: "com.amazonaws.ec2#InstanceBandwidthWeighting",
        },
      },
    },
    "com.amazonaws.ec2#InstanceBandwidthWeighting": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplate": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
          locationName: "launchTemplateName",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        CreatedBy: {
          target: "com.amazonaws.ec2#String",
          locationName: "createdBy",
        },
        DefaultVersionNumber: {
          target: "com.amazonaws.ec2#Long",
          locationName: "defaultVersionNumber",
        },
        LatestVersionNumber: {
          target: "com.amazonaws.ec2#Long",
          locationName: "latestVersionNumber",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
      },
    },
    "com.amazonaws.ec2#OperatorResponse": {
      type: "structure",
      members: {
        Managed: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "managed",
        },
        Principal: {
          target: "com.amazonaws.ec2#String",
          locationName: "principal",
        },
      },
    },
    "com.amazonaws.ec2#ValidationWarning": {
      type: "structure",
      members: {
        Errors: {
          target: "com.amazonaws.ec2#ErrorSet",
          locationName: "errorSet",
        },
      },
    },
    "com.amazonaws.ec2#ErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ValidationError",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ValidationError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateVersion": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#LaunchTemplateName",
          locationName: "launchTemplateName",
        },
        VersionNumber: {
          target: "com.amazonaws.ec2#Long",
          locationName: "versionNumber",
        },
        VersionDescription: {
          target: "com.amazonaws.ec2#VersionDescription",
          locationName: "versionDescription",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        CreatedBy: {
          target: "com.amazonaws.ec2#String",
          locationName: "createdBy",
        },
        DefaultVersion: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "defaultVersion",
        },
        LaunchTemplateData: {
          target: "com.amazonaws.ec2#ResponseLaunchTemplateData",
          locationName: "launchTemplateData",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
      },
    },
    "com.amazonaws.ec2#ResponseLaunchTemplateData": {
      type: "structure",
      members: {
        KernelId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kernelId",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        IamInstanceProfile: {
          target:
            "com.amazonaws.ec2#LaunchTemplateIamInstanceProfileSpecification",
          locationName: "iamInstanceProfile",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#LaunchTemplateBlockDeviceMappingList",
          locationName: "blockDeviceMappingSet",
        },
        NetworkInterfaces: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecificationList",
          locationName: "networkInterfaceSet",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#LaunchTemplatesMonitoring",
          locationName: "monitoring",
        },
        Placement: {
          target: "com.amazonaws.ec2#LaunchTemplatePlacement",
          locationName: "placement",
        },
        RamDiskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ramDiskId",
        },
        DisableApiTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "disableApiTermination",
        },
        InstanceInitiatedShutdownBehavior: {
          target: "com.amazonaws.ec2#ShutdownBehavior",
          locationName: "instanceInitiatedShutdownBehavior",
        },
        UserData: {
          target: "com.amazonaws.ec2#SensitiveUserData",
          locationName: "userData",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#LaunchTemplateTagSpecificationList",
          locationName: "tagSpecificationSet",
        },
        ElasticGpuSpecifications: {
          target: "com.amazonaws.ec2#ElasticGpuSpecificationResponseList",
          locationName: "elasticGpuSpecificationSet",
        },
        ElasticInferenceAccelerators: {
          target:
            "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorResponseList",
          locationName: "elasticInferenceAcceleratorSet",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "securityGroupIdSet",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "securityGroupSet",
        },
        InstanceMarketOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateInstanceMarketOptions",
          locationName: "instanceMarketOptions",
        },
        CreditSpecification: {
          target: "com.amazonaws.ec2#CreditSpecification",
          locationName: "creditSpecification",
        },
        CpuOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateCpuOptions",
          locationName: "cpuOptions",
        },
        CapacityReservationSpecification: {
          target:
            "com.amazonaws.ec2#LaunchTemplateCapacityReservationSpecificationResponse",
          locationName: "capacityReservationSpecification",
        },
        LicenseSpecifications: {
          target: "com.amazonaws.ec2#LaunchTemplateLicenseList",
          locationName: "licenseSet",
        },
        HibernationOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateHibernationOptions",
          locationName: "hibernationOptions",
        },
        MetadataOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateInstanceMetadataOptions",
          locationName: "metadataOptions",
        },
        EnclaveOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateEnclaveOptions",
          locationName: "enclaveOptions",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirements",
          locationName: "instanceRequirements",
        },
        PrivateDnsNameOptions: {
          target: "com.amazonaws.ec2#LaunchTemplatePrivateDnsNameOptions",
          locationName: "privateDnsNameOptions",
        },
        MaintenanceOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateInstanceMaintenanceOptions",
          locationName: "maintenanceOptions",
        },
        DisableApiStop: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "disableApiStop",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
        NetworkPerformanceOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateNetworkPerformanceOptions",
          locationName: "networkPerformanceOptions",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateIamInstanceProfileSpecification": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
          locationName: "arn",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateBlockDeviceMappingList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateBlockDeviceMapping",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateBlockDeviceMapping": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
          locationName: "virtualName",
        },
        Ebs: {
          target: "com.amazonaws.ec2#LaunchTemplateEbsBlockDevice",
          locationName: "ebs",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
          locationName: "noDevice",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateEbsBlockDevice": {
      type: "structure",
      members: {
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "iops",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#KmsKeyId",
          locationName: "kmsKeyId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
          locationName: "snapshotId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeSize",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
          locationName: "volumeType",
        },
        Throughput: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "throughput",
        },
        VolumeInitializationRate: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeInitializationRate",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecificationList":
      {
        type: "list",
        member: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecification",
          locationName: "item",
        },
      },
    "com.amazonaws.ec2#LaunchTemplateInstanceNetworkInterfaceSpecification": {
      type: "structure",
      members: {
        AssociateCarrierIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "associateCarrierIpAddress",
        },
        AssociatePublicIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "associatePublicIpAddress",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        DeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "deviceIndex",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdStringList",
          locationName: "groupSet",
        },
        InterfaceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "interfaceType",
        },
        Ipv6AddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ipv6AddressCount",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#InstanceIpv6AddressList",
          locationName: "ipv6AddressesSet",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#PrivateIpAddressSpecificationList",
          locationName: "privateIpAddressesSet",
        },
        SecondaryPrivateIpAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "secondaryPrivateIpAddressCount",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "networkCardIndex",
        },
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#Ipv4PrefixListResponse",
          locationName: "ipv4PrefixSet",
        },
        Ipv4PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ipv4PrefixCount",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#Ipv6PrefixListResponse",
          locationName: "ipv6PrefixSet",
        },
        Ipv6PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ipv6PrefixCount",
        },
        PrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "primaryIpv6",
        },
        EnaSrdSpecification: {
          target: "com.amazonaws.ec2#LaunchTemplateEnaSrdSpecification",
          locationName: "enaSrdSpecification",
        },
        ConnectionTrackingSpecification: {
          target: "com.amazonaws.ec2#ConnectionTrackingSpecification",
          locationName: "connectionTrackingSpecification",
        },
        EnaQueueCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "enaQueueCount",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIpv6AddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceIpv6Address",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceIpv6Address": {
      type: "structure",
      members: {
        Ipv6Address: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Address",
        },
        IsPrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isPrimaryIpv6",
        },
      },
    },
    "com.amazonaws.ec2#Ipv4PrefixListResponse": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv4PrefixSpecificationResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv4PrefixSpecificationResponse": {
      type: "structure",
      members: {
        Ipv4Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv4Prefix",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6PrefixListResponse": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6PrefixSpecificationResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6PrefixSpecificationResponse": {
      type: "structure",
      members: {
        Ipv6Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Prefix",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateEnaSrdSpecification": {
      type: "structure",
      members: {
        EnaSrdEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSrdEnabled",
        },
        EnaSrdUdpSpecification: {
          target: "com.amazonaws.ec2#LaunchTemplateEnaSrdUdpSpecification",
          locationName: "enaSrdUdpSpecification",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateEnaSrdUdpSpecification": {
      type: "structure",
      members: {
        EnaSrdUdpEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSrdUdpEnabled",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionTrackingSpecification": {
      type: "structure",
      members: {
        TcpEstablishedTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "tcpEstablishedTimeout",
        },
        UdpTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "udpTimeout",
        },
        UdpStreamTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "udpStreamTimeout",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplatesMonitoring": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplatePlacement": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Affinity: {
          target: "com.amazonaws.ec2#String",
          locationName: "affinity",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        HostId: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostId",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "tenancy",
        },
        SpreadDomain: {
          target: "com.amazonaws.ec2#String",
          locationName: "spreadDomain",
        },
        HostResourceGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostResourceGroupArn",
        },
        PartitionNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "partitionNumber",
        },
        GroupId: {
          target: "com.amazonaws.ec2#PlacementGroupId",
          locationName: "groupId",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateTagSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateTagSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateTagSpecification": {
      type: "structure",
      members: {
        ResourceType: {
          target: "com.amazonaws.ec2#ResourceType",
          locationName: "resourceType",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ElasticGpuSpecificationResponseList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticGpuSpecificationResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticGpuSpecificationResponse": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#String",
          locationName: "type",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorResponseList": {
      type: "list",
      member: {
        target:
          "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateElasticInferenceAcceleratorResponse": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#String",
          locationName: "type",
        },
        Count: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "count",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMarketOptions": {
      type: "structure",
      members: {
        MarketType: {
          target: "com.amazonaws.ec2#MarketType",
          locationName: "marketType",
        },
        SpotOptions: {
          target: "com.amazonaws.ec2#LaunchTemplateSpotMarketOptions",
          locationName: "spotOptions",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateSpotMarketOptions": {
      type: "structure",
      members: {
        MaxPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "maxPrice",
        },
        SpotInstanceType: {
          target: "com.amazonaws.ec2#SpotInstanceType",
          locationName: "spotInstanceType",
        },
        BlockDurationMinutes: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "blockDurationMinutes",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validUntil",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#InstanceInterruptionBehavior",
          locationName: "instanceInterruptionBehavior",
        },
      },
    },
    "com.amazonaws.ec2#CreditSpecification": {
      type: "structure",
      members: {
        CpuCredits: {
          target: "com.amazonaws.ec2#String",
          locationName: "cpuCredits",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateCpuOptions": {
      type: "structure",
      members: {
        CoreCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "coreCount",
        },
        ThreadsPerCore: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "threadsPerCore",
        },
        AmdSevSnp: {
          target: "com.amazonaws.ec2#AmdSevSnpSpecification",
          locationName: "amdSevSnp",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateCapacityReservationSpecificationResponse":
      {
        type: "structure",
        members: {
          CapacityReservationPreference: {
            target: "com.amazonaws.ec2#CapacityReservationPreference",
            locationName: "capacityReservationPreference",
          },
          CapacityReservationTarget: {
            target: "com.amazonaws.ec2#CapacityReservationTargetResponse",
            locationName: "capacityReservationTarget",
          },
        },
      },
    "com.amazonaws.ec2#CapacityReservationTargetResponse": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationId",
        },
        CapacityReservationResourceGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationResourceGroupArn",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateLicenseList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateLicenseConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateLicenseConfiguration": {
      type: "structure",
      members: {
        LicenseConfigurationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "licenseConfigurationArn",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateHibernationOptions": {
      type: "structure",
      members: {
        Configured: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "configured",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMetadataOptions": {
      type: "structure",
      members: {
        State: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMetadataOptionsState",
          locationName: "state",
        },
        HttpTokens: {
          target: "com.amazonaws.ec2#LaunchTemplateHttpTokensState",
          locationName: "httpTokens",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "httpPutResponseHopLimit",
        },
        HttpEndpoint: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMetadataEndpointState",
          locationName: "httpEndpoint",
        },
        HttpProtocolIpv6: {
          target:
            "com.amazonaws.ec2#LaunchTemplateInstanceMetadataProtocolIpv6",
          locationName: "httpProtocolIpv6",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#LaunchTemplateInstanceMetadataTagsState",
          locationName: "instanceMetadataTags",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMetadataOptionsState": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchTemplateEnclaveOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplatePrivateDnsNameOptions": {
      type: "structure",
      members: {
        HostnameType: {
          target: "com.amazonaws.ec2#HostnameType",
          locationName: "hostnameType",
        },
        EnableResourceNameDnsARecord: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableResourceNameDnsARecord",
        },
        EnableResourceNameDnsAAAARecord: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableResourceNameDnsAAAARecord",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateInstanceMaintenanceOptions": {
      type: "structure",
      members: {
        AutoRecovery: {
          target: "com.amazonaws.ec2#LaunchTemplateAutoRecoveryState",
          locationName: "autoRecovery",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateNetworkPerformanceOptions": {
      type: "structure",
      members: {
        BandwidthWeighting: {
          target: "com.amazonaws.ec2#InstanceBandwidthWeighting",
          locationName: "bandwidthWeighting",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId": {
      type: "string",
    },
    "com.amazonaws.ec2#LocalGatewayRoute": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
          locationName: "localGatewayVirtualInterfaceGroupId",
        },
        Type: {
          target: "com.amazonaws.ec2#LocalGatewayRouteType",
          locationName: "type",
        },
        State: {
          target: "com.amazonaws.ec2#LocalGatewayRouteState",
          locationName: "state",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
          locationName: "localGatewayRouteTableId",
        },
        LocalGatewayRouteTableArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "localGatewayRouteTableArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        CoipPoolId: {
          target: "com.amazonaws.ec2#CoipPoolId",
          locationName: "coipPoolId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
          locationName: "destinationPrefixListId",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteType": {
      type: "enum",
    },
    "com.amazonaws.ec2#LocalGatewayRouteState": {
      type: "enum",
    },
    "com.amazonaws.ec2#LocalGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#LocalGatewayRouteTable": {
      type: "structure",
      members: {
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayRouteTableId",
        },
        LocalGatewayRouteTableArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "localGatewayRouteTableArn",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#LocalGatewayId",
          locationName: "localGatewayId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        Mode: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableMode",
          locationName: "mode",
        },
        StateReason: {
          target: "com.amazonaws.ec2#StateReason",
          locationName: "stateReason",
        },
      },
    },
    "com.amazonaws.ec2#StateReason": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociation":
      {
        type: "structure",
        members: {
          LocalGatewayRouteTableVirtualInterfaceGroupAssociationId: {
            target:
              "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
            locationName:
              "localGatewayRouteTableVirtualInterfaceGroupAssociationId",
          },
          LocalGatewayVirtualInterfaceGroupId: {
            target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
            locationName: "localGatewayVirtualInterfaceGroupId",
          },
          LocalGatewayId: {
            target: "com.amazonaws.ec2#String",
            locationName: "localGatewayId",
          },
          LocalGatewayRouteTableId: {
            target: "com.amazonaws.ec2#LocalGatewayId",
            locationName: "localGatewayRouteTableId",
          },
          LocalGatewayRouteTableArn: {
            target: "com.amazonaws.ec2#ResourceArn",
            locationName: "localGatewayRouteTableArn",
          },
          OwnerId: {
            target: "com.amazonaws.ec2#String",
            locationName: "ownerId",
          },
          State: {
            target: "com.amazonaws.ec2#String",
            locationName: "state",
          },
          Tags: {
            target: "com.amazonaws.ec2#TagList",
            locationName: "tagSet",
          },
        },
      },
    "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationId":
      {
        type: "string",
      },
    "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociation": {
      type: "structure",
      members: {
        LocalGatewayRouteTableVpcAssociationId: {
          target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationId",
          locationName: "localGatewayRouteTableVpcAssociationId",
        },
        LocalGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayRouteTableId",
        },
        LocalGatewayRouteTableArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "localGatewayRouteTableArn",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#OutpostLagId": {
      type: "string",
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterface": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceId",
          locationName: "localGatewayVirtualInterfaceId",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayId",
        },
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
          locationName: "localGatewayVirtualInterfaceGroupId",
        },
        LocalGatewayVirtualInterfaceArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "localGatewayVirtualInterfaceArn",
        },
        OutpostLagId: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostLagId",
        },
        Vlan: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "vlan",
        },
        LocalAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "localAddress",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerAddress",
        },
        LocalBgpAsn: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "localBgpAsn",
        },
        PeerBgpAsn: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "peerBgpAsn",
        },
        PeerBgpAsnExtended: {
          target: "com.amazonaws.ec2#Long",
          locationName: "peerBgpAsnExtended",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ConfigurationState: {
          target:
            "com.amazonaws.ec2#LocalGatewayVirtualInterfaceConfigurationState",
          locationName: "configurationState",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceId": {
      type: "string",
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceConfigurationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroup": {
      type: "structure",
      members: {
        LocalGatewayVirtualInterfaceGroupId: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
          locationName: "localGatewayVirtualInterfaceGroupId",
        },
        LocalGatewayVirtualInterfaceIds: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceIdSet",
          locationName: "localGatewayVirtualInterfaceIdSet",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        LocalBgpAsn: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "localBgpAsn",
        },
        LocalBgpAsnExtended: {
          target: "com.amazonaws.ec2#Long",
          locationName: "localBgpAsnExtended",
        },
        LocalGatewayVirtualInterfaceGroupArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "localGatewayVirtualInterfaceGroupArn",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ConfigurationState: {
          target:
            "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupConfigurationState",
          locationName: "configurationState",
        },
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupConfigurationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#MacSystemIntegrityProtectionConfigurationRequest": {
      type: "structure",
      members: {
        AppleInternal: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
        BaseSystem: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
        DebuggingRestrictions: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
        DTraceRestrictions: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
        FilesystemProtections: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
        KextSigning: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
        NvramProtections: {
          target: "com.amazonaws.ec2#MacSystemIntegrityProtectionSettingStatus",
        },
      },
    },
    "com.amazonaws.ec2#AddPrefixListEntries": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AddPrefixListEntry",
      },
    },
    "com.amazonaws.ec2#AddPrefixListEntry": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ManagedPrefixList": {
      type: "structure",
      members: {
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
          locationName: "prefixListId",
        },
        AddressFamily: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressFamily",
        },
        State: {
          target: "com.amazonaws.ec2#PrefixListState",
          locationName: "state",
        },
        StateMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateMessage",
        },
        PrefixListArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "prefixListArn",
        },
        PrefixListName: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListName",
        },
        MaxEntries: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxEntries",
        },
        Version: {
          target: "com.amazonaws.ec2#Long",
          locationName: "version",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
      },
    },
    "com.amazonaws.ec2#PrefixListState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ConnectivityType": {
      type: "enum",
    },
    "com.amazonaws.ec2#NatGateway": {
      type: "structure",
      members: {
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        DeleteTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "deleteTime",
        },
        FailureCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureCode",
        },
        FailureMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureMessage",
        },
        NatGatewayAddresses: {
          target: "com.amazonaws.ec2#NatGatewayAddressList",
          locationName: "natGatewayAddressSet",
        },
        NatGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "natGatewayId",
        },
        ProvisionedBandwidth: {
          target: "com.amazonaws.ec2#ProvisionedBandwidth",
          locationName: "provisionedBandwidth",
        },
        State: {
          target: "com.amazonaws.ec2#NatGatewayState",
          locationName: "state",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ConnectivityType: {
          target: "com.amazonaws.ec2#ConnectivityType",
          locationName: "connectivityType",
        },
      },
    },
    "com.amazonaws.ec2#ProvisionedBandwidth": {
      type: "structure",
      members: {
        ProvisionTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "provisionTime",
        },
        Provisioned: {
          target: "com.amazonaws.ec2#String",
          locationName: "provisioned",
        },
        RequestTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "requestTime",
        },
        Requested: {
          target: "com.amazonaws.ec2#String",
          locationName: "requested",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#NatGatewayState": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkAcl": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#NetworkAclAssociationList",
          locationName: "associationSet",
        },
        Entries: {
          target: "com.amazonaws.ec2#NetworkAclEntryList",
          locationName: "entrySet",
        },
        IsDefault: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "default",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkAclId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
      },
    },
    "com.amazonaws.ec2#NetworkAclAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkAclAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkAclAssociation": {
      type: "structure",
      members: {
        NetworkAclAssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkAclAssociationId",
        },
        NetworkAclId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkAclId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
      },
    },
    "com.amazonaws.ec2#NetworkAclEntryList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkAclEntry",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkAclEntry": {
      type: "structure",
      members: {
        CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrBlock",
        },
        Egress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "egress",
        },
        IcmpTypeCode: {
          target: "com.amazonaws.ec2#IcmpTypeCode",
          locationName: "icmpTypeCode",
        },
        Ipv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6CidrBlock",
        },
        PortRange: {
          target: "com.amazonaws.ec2#PortRange",
          locationName: "portRange",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#RuleAction",
          locationName: "ruleAction",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ruleNumber",
        },
      },
    },
    "com.amazonaws.ec2#IcmpTypeCode": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "code",
        },
        Type: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "type",
        },
      },
    },
    "com.amazonaws.ec2#PortRange": {
      type: "structure",
      members: {
        From: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "from",
        },
        To: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "to",
        },
      },
    },
    "com.amazonaws.ec2#RuleAction": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkAclId": {
      type: "string",
    },
    "com.amazonaws.ec2#AccessScopePathListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AccessScopePathRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AccessScopePathRequest": {
      type: "structure",
      members: {
        Source: {
          target: "com.amazonaws.ec2#PathStatementRequest",
        },
        Destination: {
          target: "com.amazonaws.ec2#PathStatementRequest",
        },
        ThroughResources: {
          target: "com.amazonaws.ec2#ThroughResourcesStatementRequestList",
          locationName: "ThroughResource",
        },
      },
    },
    "com.amazonaws.ec2#PathStatementRequest": {
      type: "structure",
      members: {
        PacketHeaderStatement: {
          target: "com.amazonaws.ec2#PacketHeaderStatementRequest",
        },
        ResourceStatement: {
          target: "com.amazonaws.ec2#ResourceStatementRequest",
        },
      },
    },
    "com.amazonaws.ec2#PacketHeaderStatementRequest": {
      type: "structure",
      members: {
        SourceAddresses: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "SourceAddress",
        },
        DestinationAddresses: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "DestinationAddress",
        },
        SourcePorts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "SourcePort",
        },
        DestinationPorts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "DestinationPort",
        },
        SourcePrefixLists: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "SourcePrefixList",
        },
        DestinationPrefixLists: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "DestinationPrefixList",
        },
        Protocols: {
          target: "com.amazonaws.ec2#ProtocolList",
          locationName: "Protocol",
        },
      },
    },
    "com.amazonaws.ec2#ProtocolList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Protocol",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Protocol": {
      type: "enum",
    },
    "com.amazonaws.ec2#ResourceStatementRequest": {
      type: "structure",
      members: {
        Resources: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "Resource",
        },
        ResourceTypes: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "ResourceType",
        },
      },
    },
    "com.amazonaws.ec2#ThroughResourcesStatementRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ThroughResourcesStatementRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ThroughResourcesStatementRequest": {
      type: "structure",
      members: {
        ResourceStatement: {
          target: "com.amazonaws.ec2#ResourceStatementRequest",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScope": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
          locationName: "networkInsightsAccessScopeId",
        },
        NetworkInsightsAccessScopeArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "networkInsightsAccessScopeArn",
        },
        CreatedDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createdDate",
        },
        UpdatedDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "updatedDate",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeId": {
      type: "string",
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeContent": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
          locationName: "networkInsightsAccessScopeId",
        },
        MatchPaths: {
          target: "com.amazonaws.ec2#AccessScopePathList",
          locationName: "matchPathSet",
        },
        ExcludePaths: {
          target: "com.amazonaws.ec2#AccessScopePathList",
          locationName: "excludePathSet",
        },
      },
    },
    "com.amazonaws.ec2#AccessScopePathList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AccessScopePath",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AccessScopePath": {
      type: "structure",
      members: {
        Source: {
          target: "com.amazonaws.ec2#PathStatement",
          locationName: "source",
        },
        Destination: {
          target: "com.amazonaws.ec2#PathStatement",
          locationName: "destination",
        },
        ThroughResources: {
          target: "com.amazonaws.ec2#ThroughResourcesStatementList",
          locationName: "throughResourceSet",
        },
      },
    },
    "com.amazonaws.ec2#PathStatement": {
      type: "structure",
      members: {
        PacketHeaderStatement: {
          target: "com.amazonaws.ec2#PacketHeaderStatement",
          locationName: "packetHeaderStatement",
        },
        ResourceStatement: {
          target: "com.amazonaws.ec2#ResourceStatement",
          locationName: "resourceStatement",
        },
      },
    },
    "com.amazonaws.ec2#PacketHeaderStatement": {
      type: "structure",
      members: {
        SourceAddresses: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "sourceAddressSet",
        },
        DestinationAddresses: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "destinationAddressSet",
        },
        SourcePorts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "sourcePortSet",
        },
        DestinationPorts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "destinationPortSet",
        },
        SourcePrefixLists: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "sourcePrefixListSet",
        },
        DestinationPrefixLists: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "destinationPrefixListSet",
        },
        Protocols: {
          target: "com.amazonaws.ec2#ProtocolList",
          locationName: "protocolSet",
        },
      },
    },
    "com.amazonaws.ec2#ResourceStatement": {
      type: "structure",
      members: {
        Resources: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "resourceSet",
        },
        ResourceTypes: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "resourceTypeSet",
        },
      },
    },
    "com.amazonaws.ec2#ThroughResourcesStatementList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ThroughResourcesStatement",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ThroughResourcesStatement": {
      type: "structure",
      members: {
        ResourceStatement: {
          target: "com.amazonaws.ec2#ResourceStatement",
          locationName: "resourceStatement",
        },
      },
    },
    "com.amazonaws.ec2#IpAddress": {
      type: "string",
    },
    "com.amazonaws.ec2#NetworkInsightsResourceId": {
      type: "string",
    },
    "com.amazonaws.ec2#Port": {
      type: "integer",
    },
    "com.amazonaws.ec2#PathRequestFilter": {
      type: "structure",
      members: {
        SourceAddress: {
          target: "com.amazonaws.ec2#IpAddress",
        },
        SourcePortRange: {
          target: "com.amazonaws.ec2#RequestFilterPortRange",
        },
        DestinationAddress: {
          target: "com.amazonaws.ec2#IpAddress",
        },
        DestinationPortRange: {
          target: "com.amazonaws.ec2#RequestFilterPortRange",
        },
      },
    },
    "com.amazonaws.ec2#RequestFilterPortRange": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#Port",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Port",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInsightsPath": {
      type: "structure",
      members: {
        NetworkInsightsPathId: {
          target: "com.amazonaws.ec2#NetworkInsightsPathId",
          locationName: "networkInsightsPathId",
        },
        NetworkInsightsPathArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "networkInsightsPathArn",
        },
        CreatedDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createdDate",
        },
        Source: {
          target: "com.amazonaws.ec2#String",
          locationName: "source",
        },
        Destination: {
          target: "com.amazonaws.ec2#String",
          locationName: "destination",
        },
        SourceArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "sourceArn",
        },
        DestinationArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "destinationArn",
        },
        SourceIp: {
          target: "com.amazonaws.ec2#IpAddress",
          locationName: "sourceIp",
        },
        DestinationIp: {
          target: "com.amazonaws.ec2#IpAddress",
          locationName: "destinationIp",
        },
        Protocol: {
          target: "com.amazonaws.ec2#Protocol",
          locationName: "protocol",
        },
        DestinationPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "destinationPort",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        FilterAtSource: {
          target: "com.amazonaws.ec2#PathFilter",
          locationName: "filterAtSource",
        },
        FilterAtDestination: {
          target: "com.amazonaws.ec2#PathFilter",
          locationName: "filterAtDestination",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInsightsPathId": {
      type: "string",
    },
    "com.amazonaws.ec2#PathFilter": {
      type: "structure",
      members: {
        SourceAddress: {
          target: "com.amazonaws.ec2#IpAddress",
          locationName: "sourceAddress",
        },
        SourcePortRange: {
          target: "com.amazonaws.ec2#FilterPortRange",
          locationName: "sourcePortRange",
        },
        DestinationAddress: {
          target: "com.amazonaws.ec2#IpAddress",
          locationName: "destinationAddress",
        },
        DestinationPortRange: {
          target: "com.amazonaws.ec2#FilterPortRange",
          locationName: "destinationPortRange",
        },
      },
    },
    "com.amazonaws.ec2#FilterPortRange": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#Port",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Port",
          locationName: "toPort",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceCreationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInterface": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#NetworkInterfaceAssociation",
          locationName: "association",
        },
        Attachment: {
          target: "com.amazonaws.ec2#NetworkInterfaceAttachment",
          locationName: "attachment",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        ConnectionTrackingConfiguration: {
          target: "com.amazonaws.ec2#ConnectionTrackingConfiguration",
          locationName: "connectionTrackingConfiguration",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        InterfaceType: {
          target: "com.amazonaws.ec2#NetworkInterfaceType",
          locationName: "interfaceType",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#NetworkInterfaceIpv6AddressesList",
          locationName: "ipv6AddressesSet",
        },
        MacAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "macAddress",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PublicDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicDnsName",
        },
        PublicIpDnsNameOptions: {
          target: "com.amazonaws.ec2#PublicIpDnsNameOptions",
          locationName: "publicIpDnsNameOptions",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#NetworkInterfacePrivateIpAddressList",
          locationName: "privateIpAddressesSet",
        },
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#Ipv4PrefixesList",
          locationName: "ipv4PrefixSet",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#Ipv6PrefixesList",
          locationName: "ipv6PrefixSet",
        },
        RequesterId: {
          target: "com.amazonaws.ec2#String",
          locationName: "requesterId",
        },
        RequesterManaged: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "requesterManaged",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "sourceDestCheck",
        },
        Status: {
          target: "com.amazonaws.ec2#NetworkInterfaceStatus",
          locationName: "status",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        TagSet: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        DenyAllIgwTraffic: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "denyAllIgwTraffic",
        },
        Ipv6Native: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ipv6Native",
        },
        Ipv6Address: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Address",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
        AssociatedSubnets: {
          target: "com.amazonaws.ec2#AssociatedSubnetList",
          locationName: "associatedSubnetSet",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceAssociation": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        IpOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipOwnerId",
        },
        PublicDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicDnsName",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
        CustomerOwnedIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerOwnedIp",
        },
        CarrierIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "carrierIp",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceAttachment": {
      type: "structure",
      members: {
        AttachTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "attachTime",
        },
        AttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "attachmentId",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        DeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "deviceIndex",
        },
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "networkCardIndex",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceOwnerId",
        },
        Status: {
          target: "com.amazonaws.ec2#AttachmentStatus",
          locationName: "status",
        },
        EnaSrdSpecification: {
          target: "com.amazonaws.ec2#AttachmentEnaSrdSpecification",
          locationName: "enaSrdSpecification",
        },
        EnaQueueCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "enaQueueCount",
        },
      },
    },
    "com.amazonaws.ec2#AttachmentEnaSrdSpecification": {
      type: "structure",
      members: {
        EnaSrdEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSrdEnabled",
        },
        EnaSrdUdpSpecification: {
          target: "com.amazonaws.ec2#AttachmentEnaSrdUdpSpecification",
          locationName: "enaSrdUdpSpecification",
        },
      },
    },
    "com.amazonaws.ec2#AttachmentEnaSrdUdpSpecification": {
      type: "structure",
      members: {
        EnaSrdUdpEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSrdUdpEnabled",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionTrackingConfiguration": {
      type: "structure",
      members: {
        TcpEstablishedTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "tcpEstablishedTimeout",
        },
        UdpStreamTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "udpStreamTimeout",
        },
        UdpTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "udpTimeout",
        },
      },
    },
    "com.amazonaws.ec2#GroupIdentifierList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#GroupIdentifier",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#GroupIdentifier": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInterfaceIpv6AddressesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterfaceIpv6Address",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceIpv6Address": {
      type: "structure",
      members: {
        Ipv6Address: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Address",
        },
        PublicIpv6DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIpv6DnsName",
        },
        IsPrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isPrimaryIpv6",
        },
      },
    },
    "com.amazonaws.ec2#PublicIpDnsNameOptions": {
      type: "structure",
      members: {
        DnsHostnameType: {
          target: "com.amazonaws.ec2#String",
          locationName: "dnsHostnameType",
        },
        PublicIpv4DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIpv4DnsName",
        },
        PublicIpv6DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIpv6DnsName",
        },
        PublicDualStackDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicDualStackDnsName",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfacePrivateIpAddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterfacePrivateIpAddress",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInterfacePrivateIpAddress": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#NetworkInterfaceAssociation",
          locationName: "association",
        },
        Primary: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "primary",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6PrefixesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6PrefixSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6PrefixSpecification": {
      type: "structure",
      members: {
        Ipv6Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Prefix",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#AssociatedSubnetList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InterfacePermissionType": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInterfacePermission": {
      type: "structure",
      members: {
        NetworkInterfacePermissionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfacePermissionId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        AwsAccountId: {
          target: "com.amazonaws.ec2#String",
          locationName: "awsAccountId",
        },
        AwsService: {
          target: "com.amazonaws.ec2#String",
          locationName: "awsService",
        },
        Permission: {
          target: "com.amazonaws.ec2#InterfacePermissionType",
          locationName: "permission",
        },
        PermissionState: {
          target: "com.amazonaws.ec2#NetworkInterfacePermissionState",
          locationName: "permissionState",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfacePermissionState": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#NetworkInterfacePermissionStateCode",
          locationName: "state",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInterfacePermissionStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpreadLevel": {
      type: "enum",
    },
    "com.amazonaws.ec2#PlacementStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#PlacementGroup": {
      type: "structure",
      members: {
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        State: {
          target: "com.amazonaws.ec2#PlacementGroupState",
          locationName: "state",
        },
        Strategy: {
          target: "com.amazonaws.ec2#PlacementStrategy",
          locationName: "strategy",
        },
        PartitionCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "partitionCount",
        },
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        GroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupArn",
        },
        SpreadLevel: {
          target: "com.amazonaws.ec2#SpreadLevel",
          locationName: "spreadLevel",
        },
      },
    },
    "com.amazonaws.ec2#PlacementGroupState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReplaceRootVolumeTask": {
      type: "structure",
      members: {
        ReplaceRootVolumeTaskId: {
          target: "com.amazonaws.ec2#ReplaceRootVolumeTaskId",
          locationName: "replaceRootVolumeTaskId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        TaskState: {
          target: "com.amazonaws.ec2#ReplaceRootVolumeTaskState",
          locationName: "taskState",
        },
        StartTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "startTime",
        },
        CompleteTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "completeTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
          locationName: "snapshotId",
        },
        DeleteReplacedRootVolume: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteReplacedRootVolume",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceRootVolumeTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReplaceRootVolumeTaskState": {
      type: "enum",
    },
    "com.amazonaws.ec2#PriceScheduleSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PriceScheduleSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PriceScheduleSpecification": {
      type: "structure",
      members: {
        Term: {
          target: "com.amazonaws.ec2#Long",
          locationName: "term",
        },
        Price: {
          target: "com.amazonaws.ec2#Double",
          locationName: "price",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#CoreNetworkArn": {
      type: "string",
    },
    "com.amazonaws.ec2#OdbNetworkArn": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcPeeringConnectionId": {
      type: "string",
    },
    "com.amazonaws.ec2#RouteServerPersistRoutesAction": {
      type: "enum",
    },
    "com.amazonaws.ec2#BoxedLong": {
      type: "long",
    },
    "com.amazonaws.ec2#RouteServer": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
          locationName: "routeServerId",
        },
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "amazonSideAsn",
        },
        State: {
          target: "com.amazonaws.ec2#RouteServerState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        PersistRoutesState: {
          target: "com.amazonaws.ec2#RouteServerPersistRoutesState",
          locationName: "persistRoutesState",
        },
        PersistRoutesDuration: {
          target: "com.amazonaws.ec2#BoxedLong",
          locationName: "persistRoutesDuration",
        },
        SnsNotificationsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "snsNotificationsEnabled",
        },
        SnsTopicArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "snsTopicArn",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerPersistRoutesState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerEndpoint": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
          locationName: "routeServerId",
        },
        RouteServerEndpointId: {
          target: "com.amazonaws.ec2#RouteServerEndpointId",
          locationName: "routeServerEndpointId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        EniId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "eniId",
        },
        EniAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "eniAddress",
        },
        State: {
          target: "com.amazonaws.ec2#RouteServerEndpointState",
          locationName: "state",
        },
        FailureReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureReason",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerEndpointId": {
      type: "string",
    },
    "com.amazonaws.ec2#RouteServerEndpointState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerBgpOptionsRequest": {
      type: "structure",
      members: {
        PeerAsn: {
          target: "com.amazonaws.ec2#Long",
        },
        PeerLivenessDetection: {
          target: "com.amazonaws.ec2#RouteServerPeerLivenessMode",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerPeerLivenessMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerPeer": {
      type: "structure",
      members: {
        RouteServerPeerId: {
          target: "com.amazonaws.ec2#RouteServerPeerId",
          locationName: "routeServerPeerId",
        },
        RouteServerEndpointId: {
          target: "com.amazonaws.ec2#RouteServerEndpointId",
          locationName: "routeServerEndpointId",
        },
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
          locationName: "routeServerId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        State: {
          target: "com.amazonaws.ec2#RouteServerPeerState",
          locationName: "state",
        },
        FailureReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureReason",
        },
        EndpointEniId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "endpointEniId",
        },
        EndpointEniAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "endpointEniAddress",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerAddress",
        },
        BgpOptions: {
          target: "com.amazonaws.ec2#RouteServerBgpOptions",
          locationName: "bgpOptions",
        },
        BgpStatus: {
          target: "com.amazonaws.ec2#RouteServerBgpStatus",
          locationName: "bgpStatus",
        },
        BfdStatus: {
          target: "com.amazonaws.ec2#RouteServerBfdStatus",
          locationName: "bfdStatus",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerPeerId": {
      type: "string",
    },
    "com.amazonaws.ec2#RouteServerPeerState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerBgpOptions": {
      type: "structure",
      members: {
        PeerAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "peerAsn",
        },
        PeerLivenessDetection: {
          target: "com.amazonaws.ec2#RouteServerPeerLivenessMode",
          locationName: "peerLivenessDetection",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerBgpStatus": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#RouteServerBgpState",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerBgpState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerBfdStatus": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#RouteServerBfdState",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerBfdState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteTable": {
      type: "structure",
      members: {
        Associations: {
          target: "com.amazonaws.ec2#RouteTableAssociationList",
          locationName: "associationSet",
        },
        PropagatingVgws: {
          target: "com.amazonaws.ec2#PropagatingVgwList",
          locationName: "propagatingVgwSet",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "routeTableId",
        },
        Routes: {
          target: "com.amazonaws.ec2#RouteList",
          locationName: "routeSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
      },
    },
    "com.amazonaws.ec2#RouteTableAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteTableAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteTableAssociation": {
      type: "structure",
      members: {
        Main: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "main",
        },
        RouteTableAssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "routeTableAssociationId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "routeTableId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        GatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "gatewayId",
        },
        AssociationState: {
          target: "com.amazonaws.ec2#RouteTableAssociationState",
          locationName: "associationState",
        },
      },
    },
    "com.amazonaws.ec2#PropagatingVgwList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PropagatingVgw",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PropagatingVgw": {
      type: "structure",
      members: {
        GatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "gatewayId",
        },
      },
    },
    "com.amazonaws.ec2#RouteList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Route",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Route": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        DestinationIpv6CidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationIpv6CidrBlock",
        },
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationPrefixListId",
        },
        EgressOnlyInternetGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "egressOnlyInternetGatewayId",
        },
        GatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "gatewayId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceOwnerId",
        },
        NatGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "natGatewayId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayId",
        },
        CarrierGatewayId: {
          target: "com.amazonaws.ec2#CarrierGatewayId",
          locationName: "carrierGatewayId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        Origin: {
          target: "com.amazonaws.ec2#RouteOrigin",
          locationName: "origin",
        },
        State: {
          target: "com.amazonaws.ec2#RouteState",
          locationName: "state",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcPeeringConnectionId",
        },
        CoreNetworkArn: {
          target: "com.amazonaws.ec2#CoreNetworkArn",
          locationName: "coreNetworkArn",
        },
        OdbNetworkArn: {
          target: "com.amazonaws.ec2#OdbNetworkArn",
          locationName: "odbNetworkArn",
        },
        IpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipAddress",
        },
      },
    },
    "com.amazonaws.ec2#RouteOrigin": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteState": {
      type: "enum",
    },
    "com.amazonaws.ec2#StorageTier": {
      type: "enum",
    },
    "com.amazonaws.ec2#SSEType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransferType": {
      type: "enum",
    },
    "com.amazonaws.ec2#SnapshotCompletionDurationMinutesResponse": {
      type: "integer",
    },
    "com.amazonaws.ec2#SnapshotState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceSpecification": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceIdWithVolumeResolver",
        },
        ExcludeBootVolume: {
          target: "com.amazonaws.ec2#Boolean",
        },
        ExcludeDataVolumeIds: {
          target: "com.amazonaws.ec2#VolumeIdStringList",
          locationName: "ExcludeDataVolumeId",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIdWithVolumeResolver": {
      type: "string",
    },
    "com.amazonaws.ec2#VolumeIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeId",
        locationName: "VolumeId",
      },
    },
    "com.amazonaws.ec2#CopyTagsFromSource": {
      type: "enum",
    },
    "com.amazonaws.ec2#SnapshotSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SnapshotInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SnapshotInfo": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        State: {
          target: "com.amazonaws.ec2#SnapshotState",
          locationName: "state",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "volumeSize",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startTime",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        SseType: {
          target: "com.amazonaws.ec2#SSEType",
          locationName: "sseType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
      },
    },
    "com.amazonaws.ec2#SpotDatafeedSubscription": {
      type: "structure",
      members: {
        Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "bucket",
        },
        Fault: {
          target: "com.amazonaws.ec2#SpotInstanceStateFault",
          locationName: "fault",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefix",
        },
        State: {
          target: "com.amazonaws.ec2#DatafeedSubscriptionState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#SpotInstanceStateFault": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#DatafeedSubscriptionState": {
      type: "enum",
    },
    "com.amazonaws.ec2#S3ObjectTagList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#S3ObjectTag",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#S3ObjectTag": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#SubnetCidrReservationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#SubnetCidrReservation": {
      type: "structure",
      members: {
        SubnetCidrReservationId: {
          target: "com.amazonaws.ec2#SubnetCidrReservationId",
          locationName: "subnetCidrReservationId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        ReservationType: {
          target: "com.amazonaws.ec2#SubnetCidrReservationType",
          locationName: "reservationType",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#SubnetCidrReservationId": {
      type: "string",
    },
    "com.amazonaws.ec2#ResourceIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TaggableResourceId",
      },
    },
    "com.amazonaws.ec2#TaggableResourceId": {
      type: "string",
    },
    "com.amazonaws.ec2#TrafficMirrorFilter": {
      type: "structure",
      members: {
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorFilterId",
        },
        IngressFilterRules: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleList",
          locationName: "ingressFilterRuleSet",
        },
        EgressFilterRules: {
          target: "com.amazonaws.ec2#TrafficMirrorFilterRuleList",
          locationName: "egressFilterRuleSet",
        },
        NetworkServices: {
          target: "com.amazonaws.ec2#TrafficMirrorNetworkServiceList",
          locationName: "networkServiceSet",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRuleList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorFilterRule",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRule": {
      type: "structure",
      members: {
        TrafficMirrorFilterRuleId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorFilterRuleId",
        },
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorFilterId",
        },
        TrafficDirection: {
          target: "com.amazonaws.ec2#TrafficDirection",
          locationName: "trafficDirection",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ruleNumber",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#TrafficMirrorRuleAction",
          locationName: "ruleAction",
        },
        Protocol: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "protocol",
        },
        DestinationPortRange: {
          target: "com.amazonaws.ec2#TrafficMirrorPortRange",
          locationName: "destinationPortRange",
        },
        SourcePortRange: {
          target: "com.amazonaws.ec2#TrafficMirrorPortRange",
          locationName: "sourcePortRange",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        SourceCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceCidrBlock",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TrafficDirection": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficMirrorRuleAction": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficMirrorPortRange": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
      },
    },
    "com.amazonaws.ec2#TrafficMirrorNetworkServiceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorNetworkService",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorNetworkService": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficMirrorFilterId": {
      type: "string",
    },
    "com.amazonaws.ec2#TrafficMirrorPortRangeRequest": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#TrafficMirrorTargetId": {
      type: "string",
    },
    "com.amazonaws.ec2#TrafficMirrorSession": {
      type: "structure",
      members: {
        TrafficMirrorSessionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorSessionId",
        },
        TrafficMirrorTargetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorTargetId",
        },
        TrafficMirrorFilterId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorFilterId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        PacketLength: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "packetLength",
        },
        SessionNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "sessionNumber",
        },
        VirtualNetworkId: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "virtualNetworkId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TrafficMirrorTarget": {
      type: "structure",
      members: {
        TrafficMirrorTargetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "trafficMirrorTargetId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        NetworkLoadBalancerArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkLoadBalancerArn",
        },
        Type: {
          target: "com.amazonaws.ec2#TrafficMirrorTargetType",
          locationName: "type",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        GatewayLoadBalancerEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "gatewayLoadBalancerEndpointId",
        },
      },
    },
    "com.amazonaws.ec2#TrafficMirrorTargetType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRequestOptions": {
      type: "structure",
      members: {
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
        },
        AutoAcceptSharedAttachments: {
          target: "com.amazonaws.ec2#AutoAcceptSharedAttachmentsValue",
        },
        DefaultRouteTableAssociation: {
          target: "com.amazonaws.ec2#DefaultRouteTableAssociationValue",
        },
        DefaultRouteTablePropagation: {
          target: "com.amazonaws.ec2#DefaultRouteTablePropagationValue",
        },
        VpnEcmpSupport: {
          target: "com.amazonaws.ec2#VpnEcmpSupportValue",
        },
        DnsSupport: {
          target: "com.amazonaws.ec2#DnsSupportValue",
        },
        SecurityGroupReferencingSupport: {
          target: "com.amazonaws.ec2#SecurityGroupReferencingSupportValue",
        },
        MulticastSupport: {
          target: "com.amazonaws.ec2#MulticastSupportValue",
        },
        TransitGatewayCidrBlocks: {
          target: "com.amazonaws.ec2#TransitGatewayCidrBlockStringList",
        },
      },
    },
    "com.amazonaws.ec2#AutoAcceptSharedAttachmentsValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#DefaultRouteTableAssociationValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#DefaultRouteTablePropagationValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpnEcmpSupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#MulticastSupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayCidrBlockStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGateway": {
      type: "structure",
      members: {
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        TransitGatewayArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayArn",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayState",
          locationName: "state",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Options: {
          target: "com.amazonaws.ec2#TransitGatewayOptions",
          locationName: "options",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayOptions": {
      type: "structure",
      members: {
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "amazonSideAsn",
        },
        TransitGatewayCidrBlocks: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "transitGatewayCidrBlocks",
        },
        AutoAcceptSharedAttachments: {
          target: "com.amazonaws.ec2#AutoAcceptSharedAttachmentsValue",
          locationName: "autoAcceptSharedAttachments",
        },
        DefaultRouteTableAssociation: {
          target: "com.amazonaws.ec2#DefaultRouteTableAssociationValue",
          locationName: "defaultRouteTableAssociation",
        },
        AssociationDefaultRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationDefaultRouteTableId",
        },
        DefaultRouteTablePropagation: {
          target: "com.amazonaws.ec2#DefaultRouteTablePropagationValue",
          locationName: "defaultRouteTablePropagation",
        },
        PropagationDefaultRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "propagationDefaultRouteTableId",
        },
        VpnEcmpSupport: {
          target: "com.amazonaws.ec2#VpnEcmpSupportValue",
          locationName: "vpnEcmpSupport",
        },
        DnsSupport: {
          target: "com.amazonaws.ec2#DnsSupportValue",
          locationName: "dnsSupport",
        },
        SecurityGroupReferencingSupport: {
          target: "com.amazonaws.ec2#SecurityGroupReferencingSupportValue",
          locationName: "securityGroupReferencingSupport",
        },
        MulticastSupport: {
          target: "com.amazonaws.ec2#MulticastSupportValue",
          locationName: "multicastSupport",
        },
      },
    },
    "com.amazonaws.ec2#CreateTransitGatewayConnectRequestOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#ProtocolValue",
        },
      },
    },
    "com.amazonaws.ec2#ProtocolValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayConnect": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transitGatewayAttachmentId",
        },
        TransportTransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transportTransitGatewayAttachmentId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
          locationName: "transitGatewayId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentState",
          locationName: "state",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Options: {
          target: "com.amazonaws.ec2#TransitGatewayConnectOptions",
          locationName: "options",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#ProtocolValue",
          locationName: "protocol",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectRequestBgpOptions": {
      type: "structure",
      members: {
        PeerAsn: {
          target: "com.amazonaws.ec2#Long",
        },
      },
    },
    "com.amazonaws.ec2#InsideCidrBlocksStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectPeer": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transitGatewayAttachmentId",
        },
        TransitGatewayConnectPeerId: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeerId",
          locationName: "transitGatewayConnectPeerId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeerState",
          locationName: "state",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        ConnectPeerConfiguration: {
          target: "com.amazonaws.ec2#TransitGatewayConnectPeerConfiguration",
          locationName: "connectPeerConfiguration",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectPeerId": {
      type: "string",
    },
    "com.amazonaws.ec2#TransitGatewayConnectPeerState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayConnectPeerConfiguration": {
      type: "structure",
      members: {
        TransitGatewayAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAddress",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerAddress",
        },
        InsideCidrBlocks: {
          target: "com.amazonaws.ec2#InsideCidrBlocksStringList",
          locationName: "insideCidrBlocks",
        },
        Protocol: {
          target: "com.amazonaws.ec2#ProtocolValue",
          locationName: "protocol",
        },
        BgpConfigurations: {
          target:
            "com.amazonaws.ec2#TransitGatewayAttachmentBgpConfigurationList",
          locationName: "bgpConfigurations",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentBgpConfigurationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayAttachmentBgpConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentBgpConfiguration": {
      type: "structure",
      members: {
        TransitGatewayAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "transitGatewayAsn",
        },
        PeerAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "peerAsn",
        },
        TransitGatewayAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAddress",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerAddress",
        },
        BgpStatus: {
          target: "com.amazonaws.ec2#BgpStatus",
          locationName: "bgpStatus",
        },
      },
    },
    "com.amazonaws.ec2#BgpStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#CreateTransitGatewayMulticastDomainRequestOptions": {
      type: "structure",
      members: {
        Igmpv2Support: {
          target: "com.amazonaws.ec2#Igmpv2SupportValue",
        },
        StaticSourcesSupport: {
          target: "com.amazonaws.ec2#StaticSourcesSupportValue",
        },
        AutoAcceptSharedAssociations: {
          target: "com.amazonaws.ec2#AutoAcceptSharedAssociationsValue",
        },
      },
    },
    "com.amazonaws.ec2#Igmpv2SupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#StaticSourcesSupportValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#AutoAcceptSharedAssociationsValue": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomain": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        TransitGatewayMulticastDomainArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Options: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainOptions",
          locationName: "options",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayMulticastDomainState",
          locationName: "state",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainOptions": {
      type: "structure",
      members: {
        Igmpv2Support: {
          target: "com.amazonaws.ec2#Igmpv2SupportValue",
          locationName: "igmpv2Support",
        },
        StaticSourcesSupport: {
          target: "com.amazonaws.ec2#StaticSourcesSupportValue",
          locationName: "staticSourcesSupport",
        },
        AutoAcceptSharedAssociations: {
          target: "com.amazonaws.ec2#AutoAcceptSharedAssociationsValue",
          locationName: "autoAcceptSharedAssociations",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitAssociationGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#CreateTransitGatewayPeeringAttachmentRequestOptions": {
      type: "structure",
      members: {
        DynamicRouting: {
          target: "com.amazonaws.ec2#DynamicRoutingValue",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTable": {
      type: "structure",
      members: {
        TransitGatewayPolicyTableId: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
          locationName: "transitGatewayPolicyTableId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
          locationName: "transitGatewayId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyTableState",
          locationName: "state",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayPrefixListReference": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
          locationName: "transitGatewayRouteTableId",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
          locationName: "prefixListId",
        },
        PrefixListOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListOwnerId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayPrefixListReferenceState",
          locationName: "state",
        },
        Blackhole: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "blackhole",
        },
        TransitGatewayAttachment: {
          target: "com.amazonaws.ec2#TransitGatewayPrefixListAttachment",
          locationName: "transitGatewayAttachment",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPrefixListReferenceState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayPrefixListAttachment": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayRoute": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
          locationName: "prefixListId",
        },
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
          locationName: "transitGatewayRouteTableAnnouncementId",
        },
        TransitGatewayAttachments: {
          target: "com.amazonaws.ec2#TransitGatewayRouteAttachmentList",
          locationName: "transitGatewayAttachments",
        },
        Type: {
          target: "com.amazonaws.ec2#TransitGatewayRouteType",
          locationName: "type",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayRouteState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId": {
      type: "string",
    },
    "com.amazonaws.ec2#TransitGatewayRouteAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteAttachment": {
      type: "structure",
      members: {
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRouteState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRouteTable": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayRouteTableId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableState",
          locationName: "state",
        },
        DefaultAssociationRouteTable: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "defaultAssociationRouteTable",
        },
        DefaultPropagationRouteTable: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "defaultPropagationRouteTable",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncement": {
      type: "structure",
      members: {
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
          locationName: "transitGatewayRouteTableAnnouncementId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
          locationName: "transitGatewayId",
        },
        CoreNetworkId: {
          target: "com.amazonaws.ec2#String",
          locationName: "coreNetworkId",
        },
        PeerTransitGatewayId: {
          target: "com.amazonaws.ec2#TransitGatewayId",
          locationName: "peerTransitGatewayId",
        },
        PeerCoreNetworkId: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerCoreNetworkId",
        },
        PeeringAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "peeringAttachmentId",
        },
        AnnouncementDirection: {
          target:
            "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementDirection",
          locationName: "announcementDirection",
        },
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
          locationName: "transitGatewayRouteTableId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementState",
          locationName: "state",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementDirection": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementState": {
      type: "enum",
    },
    "com.amazonaws.ec2#CreateTransitGatewayVpcAttachmentRequestOptions": {
      type: "structure",
      members: {
        DnsSupport: {
          target: "com.amazonaws.ec2#DnsSupportValue",
        },
        SecurityGroupReferencingSupport: {
          target: "com.amazonaws.ec2#SecurityGroupReferencingSupportValue",
        },
        Ipv6Support: {
          target: "com.amazonaws.ec2#Ipv6SupportValue",
        },
        ApplianceModeSupport: {
          target: "com.amazonaws.ec2#ApplianceModeSupportValue",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessGroupId": {
      type: "string",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointType": {
      type: "enum",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointAttachmentType": {
      type: "enum",
    },
    "com.amazonaws.ec2#CertificateArn": {
      type: "string",
    },
    "com.amazonaws.ec2#SecurityGroupIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointLoadBalancerOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        LoadBalancerArn: {
          target: "com.amazonaws.ec2#LoadBalancerArn",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointSubnetIdList",
          locationName: "SubnetId",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointPortRangeList",
          locationName: "PortRange",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointProtocol": {
      type: "enum",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber": {
      type: "integer",
    },
    "com.amazonaws.ec2#LoadBalancerArn": {
      type: "string",
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointSubnetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointPortRangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointPortRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointPortRange": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        ToPort: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointEniOptions": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointPortRangeList",
          locationName: "PortRange",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessSseSpecificationRequest": {
      type: "structure",
      members: {
        CustomerManagedKeyEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        KmsKeyArn: {
          target: "com.amazonaws.ec2#KmsKeyArn",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointRdsOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        RdsDbInstanceArn: {
          target: "com.amazonaws.ec2#RdsDbInstanceArn",
        },
        RdsDbClusterArn: {
          target: "com.amazonaws.ec2#RdsDbClusterArn",
        },
        RdsDbProxyArn: {
          target: "com.amazonaws.ec2#RdsDbProxyArn",
        },
        RdsEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointSubnetIdList",
          locationName: "SubnetId",
        },
      },
    },
    "com.amazonaws.ec2#RdsDbInstanceArn": {
      type: "string",
    },
    "com.amazonaws.ec2#RdsDbClusterArn": {
      type: "string",
    },
    "com.amazonaws.ec2#RdsDbProxyArn": {
      type: "string",
    },
    "com.amazonaws.ec2#CreateVerifiedAccessEndpointCidrOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointSubnetIdList",
          locationName: "SubnetId",
        },
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#CreateVerifiedAccessEndpointPortRangeList",
          locationName: "PortRange",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpoint": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessInstanceId",
        },
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessGroupId",
        },
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessEndpointId",
        },
        ApplicationDomain: {
          target: "com.amazonaws.ec2#String",
          locationName: "applicationDomain",
        },
        EndpointType: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointType",
          locationName: "endpointType",
        },
        AttachmentType: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointAttachmentType",
          locationName: "attachmentType",
        },
        DomainCertificateArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "domainCertificateArn",
        },
        EndpointDomain: {
          target: "com.amazonaws.ec2#String",
          locationName: "endpointDomain",
        },
        DeviceValidationDomain: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceValidationDomain",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdList",
          locationName: "securityGroupIdSet",
        },
        LoadBalancerOptions: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointLoadBalancerOptions",
          locationName: "loadBalancerOptions",
        },
        NetworkInterfaceOptions: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointEniOptions",
          locationName: "networkInterfaceOptions",
        },
        Status: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointStatus",
          locationName: "status",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationTime",
        },
        LastUpdatedTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastUpdatedTime",
        },
        DeletionTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "deletionTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationResponse",
          locationName: "sseSpecification",
        },
        RdsOptions: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointRdsOptions",
          locationName: "rdsOptions",
        },
        CidrOptions: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointCidrOptions",
          locationName: "cidrOptions",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointLoadBalancerOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
          locationName: "protocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
          locationName: "port",
        },
        LoadBalancerArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "loadBalancerArn",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointSubnetIdList",
          locationName: "subnetIdSet",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortRangeList",
          locationName: "portRangeSet",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointSubnetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointPortRangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessEndpointPortRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointPortRange": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
          locationName: "toPort",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointEniOptions": {
      type: "structure",
      members: {
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
          locationName: "protocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
          locationName: "port",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortRangeList",
          locationName: "portRangeSet",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointRdsOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
          locationName: "protocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
          locationName: "port",
        },
        RdsDbInstanceArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "rdsDbInstanceArn",
        },
        RdsDbClusterArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "rdsDbClusterArn",
        },
        RdsDbProxyArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "rdsDbProxyArn",
        },
        RdsEndpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "rdsEndpoint",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointSubnetIdList",
          locationName: "subnetIdSet",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointCidrOptions": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortRangeList",
          locationName: "portRangeSet",
        },
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
          locationName: "protocol",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointSubnetIdList",
          locationName: "subnetIdSet",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessGroup": {
      type: "structure",
      members: {
        VerifiedAccessGroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessGroupId",
        },
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessInstanceId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Owner: {
          target: "com.amazonaws.ec2#String",
          locationName: "owner",
        },
        VerifiedAccessGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessGroupArn",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationTime",
        },
        LastUpdatedTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastUpdatedTime",
        },
        DeletionTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "deletionTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SseSpecification: {
          target: "com.amazonaws.ec2#VerifiedAccessSseSpecificationResponse",
          locationName: "sseSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderOidcOptions": {
      type: "structure",
      members: {
        Issuer: {
          target: "com.amazonaws.ec2#String",
        },
        AuthorizationEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        TokenEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        UserInfoEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        ClientId: {
          target: "com.amazonaws.ec2#String",
        },
        ClientSecret: {
          target: "com.amazonaws.ec2#ClientSecretType",
        },
        Scope: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessTrustProviderDeviceOptions": {
      type: "structure",
      members: {
        TenantId: {
          target: "com.amazonaws.ec2#String",
        },
        PublicSigningKeyUrl: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateVerifiedAccessNativeApplicationOidcOptions": {
      type: "structure",
      members: {
        PublicSigningKeyEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        Issuer: {
          target: "com.amazonaws.ec2#String",
        },
        AuthorizationEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        TokenEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        UserInfoEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        ClientId: {
          target: "com.amazonaws.ec2#String",
        },
        ClientSecret: {
          target: "com.amazonaws.ec2#ClientSecretType",
        },
        Scope: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#VolumeState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VolumeAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InternetGatewayExclusionMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessExclusion": {
      type: "structure",
      members: {
        ExclusionId: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionId",
          locationName: "exclusionId",
        },
        InternetGatewayExclusionMode: {
          target: "com.amazonaws.ec2#InternetGatewayExclusionMode",
          locationName: "internetGatewayExclusionMode",
        },
        ResourceArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "resourceArn",
        },
        State: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionState",
          locationName: "state",
        },
        Reason: {
          target: "com.amazonaws.ec2#String",
          locationName: "reason",
        },
        CreationTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "creationTimestamp",
        },
        LastUpdateTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastUpdateTimestamp",
        },
        DeletionTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "deletionTimestamp",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessExclusionId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessExclusionState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcEndpointType": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcEndpointRouteTableIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteTableId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEndpointSubnetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEndpointSecurityGroupIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DnsOptionsSpecification": {
      type: "structure",
      members: {
        DnsRecordIpType: {
          target: "com.amazonaws.ec2#DnsRecordIpType",
        },
        PrivateDnsOnlyForInboundResolverEndpoint: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#DnsRecordIpType": {
      type: "enum",
    },
    "com.amazonaws.ec2#SubnetConfigurationsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SubnetConfiguration": {
      type: "structure",
      members: {
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        Ipv4: {
          target: "com.amazonaws.ec2#String",
        },
        Ipv6: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ServiceNetworkArn": {
      type: "string",
    },
    "com.amazonaws.ec2#ResourceConfigurationArn": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcEndpoint": {
      type: "structure",
      members: {
        VpcEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcEndpointId",
        },
        VpcEndpointType: {
          target: "com.amazonaws.ec2#VpcEndpointType",
          locationName: "vpcEndpointType",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        ServiceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceName",
        },
        State: {
          target: "com.amazonaws.ec2#State",
          locationName: "state",
        },
        PolicyDocument: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyDocument",
        },
        RouteTableIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "routeTableIdSet",
        },
        SubnetIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "subnetIdSet",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierSet",
          locationName: "groupSet",
        },
        IpAddressType: {
          target: "com.amazonaws.ec2#IpAddressType",
          locationName: "ipAddressType",
        },
        DnsOptions: {
          target: "com.amazonaws.ec2#DnsOptions",
          locationName: "dnsOptions",
        },
        PrivateDnsEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "privateDnsEnabled",
        },
        RequesterManaged: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "requesterManaged",
        },
        NetworkInterfaceIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "networkInterfaceIdSet",
        },
        DnsEntries: {
          target: "com.amazonaws.ec2#DnsEntrySet",
          locationName: "dnsEntrySet",
        },
        CreationTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "creationTimestamp",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        LastError: {
          target: "com.amazonaws.ec2#LastError",
          locationName: "lastError",
        },
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#SubnetIpPrefixesList",
          locationName: "ipv4PrefixSet",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#SubnetIpPrefixesList",
          locationName: "ipv6PrefixSet",
        },
        FailureReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureReason",
        },
        ServiceNetworkArn: {
          target: "com.amazonaws.ec2#ServiceNetworkArn",
          locationName: "serviceNetworkArn",
        },
        ResourceConfigurationArn: {
          target: "com.amazonaws.ec2#ResourceConfigurationArn",
          locationName: "resourceConfigurationArn",
        },
        ServiceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceRegion",
        },
      },
    },
    "com.amazonaws.ec2#State": {
      type: "enum",
    },
    "com.amazonaws.ec2#GroupIdentifierSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupIdentifier",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupIdentifier": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
      },
    },
    "com.amazonaws.ec2#DnsOptions": {
      type: "structure",
      members: {
        DnsRecordIpType: {
          target: "com.amazonaws.ec2#DnsRecordIpType",
          locationName: "dnsRecordIpType",
        },
        PrivateDnsOnlyForInboundResolverEndpoint: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "privateDnsOnlyForInboundResolverEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#DnsEntrySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DnsEntry",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DnsEntry": {
      type: "structure",
      members: {
        DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "dnsName",
        },
        HostedZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostedZoneId",
        },
      },
    },
    "com.amazonaws.ec2#LastError": {
      type: "structure",
      members: {
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
      },
    },
    "com.amazonaws.ec2#SubnetIpPrefixesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetIpPrefixes",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SubnetIpPrefixes": {
      type: "structure",
      members: {
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        IpPrefixes: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "ipPrefixSet",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionNotification": {
      type: "structure",
      members: {
        ConnectionNotificationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "connectionNotificationId",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceId",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcEndpointId",
        },
        ConnectionNotificationType: {
          target: "com.amazonaws.ec2#ConnectionNotificationType",
          locationName: "connectionNotificationType",
        },
        ConnectionNotificationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "connectionNotificationArn",
        },
        ConnectionEvents: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "connectionEvents",
        },
        ConnectionNotificationState: {
          target: "com.amazonaws.ec2#ConnectionNotificationState",
          locationName: "connectionNotificationState",
        },
        ServiceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceRegion",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionNotificationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ConnectionNotificationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ServiceConfiguration": {
      type: "structure",
      members: {
        ServiceType: {
          target: "com.amazonaws.ec2#ServiceTypeDetailSet",
          locationName: "serviceType",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceId",
        },
        ServiceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceName",
        },
        ServiceState: {
          target: "com.amazonaws.ec2#ServiceState",
          locationName: "serviceState",
        },
        AvailabilityZones: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "availabilityZoneSet",
        },
        AcceptanceRequired: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "acceptanceRequired",
        },
        ManagesVpcEndpoints: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "managesVpcEndpoints",
        },
        NetworkLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "networkLoadBalancerArnSet",
        },
        GatewayLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "gatewayLoadBalancerArnSet",
        },
        SupportedIpAddressTypes: {
          target: "com.amazonaws.ec2#SupportedIpAddressTypes",
          locationName: "supportedIpAddressTypeSet",
        },
        BaseEndpointDnsNames: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "baseEndpointDnsNameSet",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PrivateDnsNameConfiguration: {
          target: "com.amazonaws.ec2#PrivateDnsNameConfiguration",
          locationName: "privateDnsNameConfiguration",
        },
        PayerResponsibility: {
          target: "com.amazonaws.ec2#PayerResponsibility",
          locationName: "payerResponsibility",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SupportedRegions: {
          target: "com.amazonaws.ec2#SupportedRegionSet",
          locationName: "supportedRegionSet",
        },
        RemoteAccessEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "remoteAccessEnabled",
        },
      },
    },
    "com.amazonaws.ec2#ServiceTypeDetailSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ServiceTypeDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ServiceTypeDetail": {
      type: "structure",
      members: {
        ServiceType: {
          target: "com.amazonaws.ec2#ServiceType",
          locationName: "serviceType",
        },
      },
    },
    "com.amazonaws.ec2#ServiceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ServiceState": {
      type: "enum",
    },
    "com.amazonaws.ec2#SupportedIpAddressTypes": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ServiceConnectivityType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ServiceConnectivityType": {
      type: "enum",
    },
    "com.amazonaws.ec2#PrivateDnsNameConfiguration": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#DnsNameState",
          locationName: "state",
        },
        Type: {
          target: "com.amazonaws.ec2#String",
          locationName: "type",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
      },
    },
    "com.amazonaws.ec2#DnsNameState": {
      type: "enum",
    },
    "com.amazonaws.ec2#PayerResponsibility": {
      type: "enum",
    },
    "com.amazonaws.ec2#SupportedRegionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SupportedRegionDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SupportedRegionDetail": {
      type: "structure",
      members: {
        Region: {
          target: "com.amazonaws.ec2#String",
          locationName: "region",
        },
        ServiceState: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceState",
        },
      },
    },
    "com.amazonaws.ec2#CustomerGatewayId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpnConnectionOptionsSpecification": {
      type: "structure",
      members: {
        EnableAcceleration: {
          target: "com.amazonaws.ec2#Boolean",
        },
        TunnelInsideIpVersion: {
          target: "com.amazonaws.ec2#TunnelInsideIpVersion",
        },
        TunnelOptions: {
          target: "com.amazonaws.ec2#VpnTunnelOptionsSpecificationsList",
        },
        LocalIpv4NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        RemoteIpv4NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        LocalIpv6NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        RemoteIpv6NetworkCidr: {
          target: "com.amazonaws.ec2#String",
        },
        OutsideIpAddressType: {
          target: "com.amazonaws.ec2#String",
        },
        TransportTransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
        },
        StaticRoutesOnly: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "staticRoutesOnly",
        },
      },
    },
    "com.amazonaws.ec2#TunnelInsideIpVersion": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpnTunnelOptionsSpecificationsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnTunnelOptionsSpecification",
      },
    },
    "com.amazonaws.ec2#VpnTunnelOptionsSpecification": {
      type: "structure",
      members: {
        TunnelInsideCidr: {
          target: "com.amazonaws.ec2#String",
        },
        TunnelInsideIpv6Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        PreSharedKey: {
          target: "com.amazonaws.ec2#preSharedKey",
        },
        Phase1LifetimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        Phase2LifetimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        RekeyMarginTimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        RekeyFuzzPercentage: {
          target: "com.amazonaws.ec2#Integer",
        },
        ReplayWindowSize: {
          target: "com.amazonaws.ec2#Integer",
        },
        DPDTimeoutSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        DPDTimeoutAction: {
          target: "com.amazonaws.ec2#String",
        },
        Phase1EncryptionAlgorithms: {
          target: "com.amazonaws.ec2#Phase1EncryptionAlgorithmsRequestList",
          locationName: "Phase1EncryptionAlgorithm",
        },
        Phase2EncryptionAlgorithms: {
          target: "com.amazonaws.ec2#Phase2EncryptionAlgorithmsRequestList",
          locationName: "Phase2EncryptionAlgorithm",
        },
        Phase1IntegrityAlgorithms: {
          target: "com.amazonaws.ec2#Phase1IntegrityAlgorithmsRequestList",
          locationName: "Phase1IntegrityAlgorithm",
        },
        Phase2IntegrityAlgorithms: {
          target: "com.amazonaws.ec2#Phase2IntegrityAlgorithmsRequestList",
          locationName: "Phase2IntegrityAlgorithm",
        },
        Phase1DHGroupNumbers: {
          target: "com.amazonaws.ec2#Phase1DHGroupNumbersRequestList",
          locationName: "Phase1DHGroupNumber",
        },
        Phase2DHGroupNumbers: {
          target: "com.amazonaws.ec2#Phase2DHGroupNumbersRequestList",
          locationName: "Phase2DHGroupNumber",
        },
        IKEVersions: {
          target: "com.amazonaws.ec2#IKEVersionsRequestList",
          locationName: "IKEVersion",
        },
        StartupAction: {
          target: "com.amazonaws.ec2#String",
        },
        LogOptions: {
          target: "com.amazonaws.ec2#VpnTunnelLogOptionsSpecification",
        },
        EnableTunnelLifecycleControl: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#preSharedKey": {
      type: "string",
    },
    "com.amazonaws.ec2#Phase1EncryptionAlgorithmsRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase1EncryptionAlgorithmsRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase1EncryptionAlgorithmsRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#Phase2EncryptionAlgorithmsRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase2EncryptionAlgorithmsRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase2EncryptionAlgorithmsRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#Phase1IntegrityAlgorithmsRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase1IntegrityAlgorithmsRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase1IntegrityAlgorithmsRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#Phase2IntegrityAlgorithmsRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase2IntegrityAlgorithmsRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase2IntegrityAlgorithmsRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#Phase1DHGroupNumbersRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase1DHGroupNumbersRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase1DHGroupNumbersRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#Phase2DHGroupNumbersRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase2DHGroupNumbersRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase2DHGroupNumbersRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#IKEVersionsRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IKEVersionsRequestListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IKEVersionsRequestListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#VpnTunnelLogOptionsSpecification": {
      type: "structure",
      members: {
        CloudWatchLogOptions: {
          target: "com.amazonaws.ec2#CloudWatchLogOptionsSpecification",
        },
      },
    },
    "com.amazonaws.ec2#CloudWatchLogOptionsSpecification": {
      type: "structure",
      members: {
        LogEnabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LogGroupArn: {
          target: "com.amazonaws.ec2#CloudWatchLogGroupArn",
        },
        LogOutputFormat: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CloudWatchLogGroupArn": {
      type: "string",
    },
    "com.amazonaws.ec2#VpnConnection": {
      type: "structure",
      members: {
        Category: {
          target: "com.amazonaws.ec2#String",
          locationName: "category",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        CoreNetworkArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "coreNetworkArn",
        },
        CoreNetworkAttachmentArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "coreNetworkAttachmentArn",
        },
        GatewayAssociationState: {
          target: "com.amazonaws.ec2#GatewayAssociationState",
          locationName: "gatewayAssociationState",
        },
        Options: {
          target: "com.amazonaws.ec2#VpnConnectionOptions",
          locationName: "options",
        },
        Routes: {
          target: "com.amazonaws.ec2#VpnStaticRouteList",
          locationName: "routes",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VgwTelemetry: {
          target: "com.amazonaws.ec2#VgwTelemetryList",
          locationName: "vgwTelemetry",
        },
        PreSharedKeyArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "preSharedKeyArn",
        },
        VpnConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpnConnectionId",
        },
        State: {
          target: "com.amazonaws.ec2#VpnState",
          locationName: "state",
        },
        CustomerGatewayConfiguration: {
          target: "com.amazonaws.ec2#customerGatewayConfiguration",
          locationName: "customerGatewayConfiguration",
        },
        Type: {
          target: "com.amazonaws.ec2#GatewayType",
          locationName: "type",
        },
        CustomerGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerGatewayId",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpnGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#GatewayAssociationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpnConnectionOptions": {
      type: "structure",
      members: {
        EnableAcceleration: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableAcceleration",
        },
        StaticRoutesOnly: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "staticRoutesOnly",
        },
        LocalIpv4NetworkCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "localIpv4NetworkCidr",
        },
        RemoteIpv4NetworkCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "remoteIpv4NetworkCidr",
        },
        LocalIpv6NetworkCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "localIpv6NetworkCidr",
        },
        RemoteIpv6NetworkCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "remoteIpv6NetworkCidr",
        },
        OutsideIpAddressType: {
          target: "com.amazonaws.ec2#String",
          locationName: "outsideIpAddressType",
        },
        TransportTransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transportTransitGatewayAttachmentId",
        },
        TunnelInsideIpVersion: {
          target: "com.amazonaws.ec2#TunnelInsideIpVersion",
          locationName: "tunnelInsideIpVersion",
        },
        TunnelOptions: {
          target: "com.amazonaws.ec2#TunnelOptionsList",
          locationName: "tunnelOptionSet",
        },
      },
    },
    "com.amazonaws.ec2#TunnelOptionsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TunnelOption",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TunnelOption": {
      type: "structure",
      members: {
        OutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "outsideIpAddress",
        },
        TunnelInsideCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "tunnelInsideCidr",
        },
        TunnelInsideIpv6Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "tunnelInsideIpv6Cidr",
        },
        PreSharedKey: {
          target: "com.amazonaws.ec2#preSharedKey",
          locationName: "preSharedKey",
        },
        Phase1LifetimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "phase1LifetimeSeconds",
        },
        Phase2LifetimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "phase2LifetimeSeconds",
        },
        RekeyMarginTimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "rekeyMarginTimeSeconds",
        },
        RekeyFuzzPercentage: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "rekeyFuzzPercentage",
        },
        ReplayWindowSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "replayWindowSize",
        },
        DpdTimeoutSeconds: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "dpdTimeoutSeconds",
        },
        DpdTimeoutAction: {
          target: "com.amazonaws.ec2#String",
          locationName: "dpdTimeoutAction",
        },
        Phase1EncryptionAlgorithms: {
          target: "com.amazonaws.ec2#Phase1EncryptionAlgorithmsList",
          locationName: "phase1EncryptionAlgorithmSet",
        },
        Phase2EncryptionAlgorithms: {
          target: "com.amazonaws.ec2#Phase2EncryptionAlgorithmsList",
          locationName: "phase2EncryptionAlgorithmSet",
        },
        Phase1IntegrityAlgorithms: {
          target: "com.amazonaws.ec2#Phase1IntegrityAlgorithmsList",
          locationName: "phase1IntegrityAlgorithmSet",
        },
        Phase2IntegrityAlgorithms: {
          target: "com.amazonaws.ec2#Phase2IntegrityAlgorithmsList",
          locationName: "phase2IntegrityAlgorithmSet",
        },
        Phase1DHGroupNumbers: {
          target: "com.amazonaws.ec2#Phase1DHGroupNumbersList",
          locationName: "phase1DHGroupNumberSet",
        },
        Phase2DHGroupNumbers: {
          target: "com.amazonaws.ec2#Phase2DHGroupNumbersList",
          locationName: "phase2DHGroupNumberSet",
        },
        IkeVersions: {
          target: "com.amazonaws.ec2#IKEVersionsList",
          locationName: "ikeVersionSet",
        },
        StartupAction: {
          target: "com.amazonaws.ec2#String",
          locationName: "startupAction",
        },
        LogOptions: {
          target: "com.amazonaws.ec2#VpnTunnelLogOptions",
          locationName: "logOptions",
        },
        EnableTunnelLifecycleControl: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableTunnelLifecycleControl",
        },
      },
    },
    "com.amazonaws.ec2#Phase1EncryptionAlgorithmsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase1EncryptionAlgorithmsListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase1EncryptionAlgorithmsListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#Phase2EncryptionAlgorithmsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase2EncryptionAlgorithmsListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase2EncryptionAlgorithmsListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#Phase1IntegrityAlgorithmsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase1IntegrityAlgorithmsListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase1IntegrityAlgorithmsListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#Phase2IntegrityAlgorithmsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase2IntegrityAlgorithmsListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase2IntegrityAlgorithmsListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#Phase1DHGroupNumbersList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase1DHGroupNumbersListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase1DHGroupNumbersListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#Phase2DHGroupNumbersList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Phase2DHGroupNumbersListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Phase2DHGroupNumbersListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#IKEVersionsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IKEVersionsListValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IKEVersionsListValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#VpnTunnelLogOptions": {
      type: "structure",
      members: {
        CloudWatchLogOptions: {
          target: "com.amazonaws.ec2#CloudWatchLogOptions",
          locationName: "cloudWatchLogOptions",
        },
      },
    },
    "com.amazonaws.ec2#CloudWatchLogOptions": {
      type: "structure",
      members: {
        LogEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "logEnabled",
        },
        LogGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "logGroupArn",
        },
        LogOutputFormat: {
          target: "com.amazonaws.ec2#String",
          locationName: "logOutputFormat",
        },
      },
    },
    "com.amazonaws.ec2#VpnStaticRouteList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnStaticRoute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpnStaticRoute": {
      type: "structure",
      members: {
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        Source: {
          target: "com.amazonaws.ec2#VpnStaticRouteSource",
          locationName: "source",
        },
        State: {
          target: "com.amazonaws.ec2#VpnState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#VpnStaticRouteSource": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpnState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VgwTelemetryList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VgwTelemetry",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VgwTelemetry": {
      type: "structure",
      members: {
        AcceptedRouteCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "acceptedRouteCount",
        },
        LastStatusChange: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "lastStatusChange",
        },
        OutsideIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "outsideIpAddress",
        },
        Status: {
          target: "com.amazonaws.ec2#TelemetryStatus",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        CertificateArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateArn",
        },
      },
    },
    "com.amazonaws.ec2#TelemetryStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#customerGatewayConfiguration": {
      type: "string",
    },
    "com.amazonaws.ec2#VpnConnectionId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpnGateway": {
      type: "structure",
      members: {
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "amazonSideAsn",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpnGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpnGatewayId",
        },
        State: {
          target: "com.amazonaws.ec2#VpnState",
          locationName: "state",
        },
        Type: {
          target: "com.amazonaws.ec2#GatewayType",
          locationName: "type",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        VpcAttachments: {
          target: "com.amazonaws.ec2#VpcAttachmentList",
          locationName: "attachments",
        },
      },
    },
    "com.amazonaws.ec2#VpcAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DhcpOptionsId": {
      type: "string",
    },
    "com.amazonaws.ec2#FleetIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetId",
      },
    },
    "com.amazonaws.ec2#DeleteFleetSuccessSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DeleteFleetSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteFleetSuccessItem": {
      type: "structure",
      members: {
        CurrentFleetState: {
          target: "com.amazonaws.ec2#FleetStateCode",
          locationName: "currentFleetState",
        },
        PreviousFleetState: {
          target: "com.amazonaws.ec2#FleetStateCode",
          locationName: "previousFleetState",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
          locationName: "fleetId",
        },
      },
    },
    "com.amazonaws.ec2#FleetStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#DeleteFleetErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DeleteFleetErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteFleetErrorItem": {
      type: "structure",
      members: {
        Error: {
          target: "com.amazonaws.ec2#DeleteFleetError",
          locationName: "error",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
          locationName: "fleetId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFleetError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#DeleteFleetErrorCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#DeleteFleetErrorCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#FlowLogIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcFlowLogId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcFlowLogId": {
      type: "string",
    },
    "com.amazonaws.ec2#FpgaImageId": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceEventWindowStateChange": {
      type: "structure",
      members: {
        InstanceEventWindowId: {
          target: "com.amazonaws.ec2#InstanceEventWindowId",
          locationName: "instanceEventWindowId",
        },
        State: {
          target: "com.amazonaws.ec2#InstanceEventWindowState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#KeyPairNameWithResolver": {
      type: "string",
    },
    "com.amazonaws.ec2#KeyPairId": {
      type: "string",
    },
    "com.amazonaws.ec2#VersionStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseSuccessSet": {
      type: "list",
      member: {
        target:
          "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseSuccessItem": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateName",
        },
        VersionNumber: {
          target: "com.amazonaws.ec2#Long",
          locationName: "versionNumber",
        },
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorSet": {
      type: "list",
      member: {
        target:
          "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteLaunchTemplateVersionsResponseErrorItem": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateName",
        },
        VersionNumber: {
          target: "com.amazonaws.ec2#Long",
          locationName: "versionNumber",
        },
        ResponseError: {
          target: "com.amazonaws.ec2#ResponseError",
          locationName: "responseError",
        },
      },
    },
    "com.amazonaws.ec2#ResponseError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#LaunchTemplateErrorCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateErrorCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId": {
      type: "string",
    },
    "com.amazonaws.ec2#NetworkInsightsAnalysisId": {
      type: "string",
    },
    "com.amazonaws.ec2#NetworkInterfacePermissionId": {
      type: "string",
    },
    "com.amazonaws.ec2#DeleteQueuedReservedInstancesIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SuccessfulQueuedPurchaseDeletionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SuccessfulQueuedPurchaseDeletion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SuccessfulQueuedPurchaseDeletion": {
      type: "structure",
      members: {
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
      },
    },
    "com.amazonaws.ec2#FailedQueuedPurchaseDeletionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FailedQueuedPurchaseDeletion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FailedQueuedPurchaseDeletion": {
      type: "structure",
      members: {
        Error: {
          target: "com.amazonaws.ec2#DeleteQueuedReservedInstancesError",
          locationName: "error",
        },
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
      },
    },
    "com.amazonaws.ec2#DeleteQueuedReservedInstancesError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#DeleteQueuedReservedInstancesErrorCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#DeleteQueuedReservedInstancesErrorCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRuleIdWithResolver": {
      type: "string",
    },
    "com.amazonaws.ec2#TrafficMirrorSessionId": {
      type: "string",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointId": {
      type: "string",
    },
    "com.amazonaws.ec2#ConnectionNotificationIdsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ConnectionNotificationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ConnectionNotificationId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcEndpointServiceIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcEndpointServiceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Byoasn": {
      type: "structure",
      members: {
        Asn: {
          target: "com.amazonaws.ec2#String",
          locationName: "asn",
        },
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
          locationName: "ipamId",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        State: {
          target: "com.amazonaws.ec2#AsnState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#AsnState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPoolCidr": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        State: {
          target: "com.amazonaws.ec2#IpamPoolCidrState",
          locationName: "state",
        },
        FailureReason: {
          target: "com.amazonaws.ec2#IpamPoolCidrFailureReason",
          locationName: "failureReason",
        },
        IpamPoolCidrId: {
          target: "com.amazonaws.ec2#IpamPoolCidrId",
          locationName: "ipamPoolCidrId",
        },
        NetmaskLength: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "netmaskLength",
        },
      },
    },
    "com.amazonaws.ec2#IpamPoolCidrState": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPoolCidrFailureReason": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#IpamPoolCidrFailureCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#IpamPoolCidrFailureCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPoolCidrId": {
      type: "string",
    },
    "com.amazonaws.ec2#DeprovisionedAddressSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteSnapshotResultSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DeleteSnapshotReturnCode",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeleteSnapshotReturnCode": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
          locationName: "snapshotId",
        },
        ReturnCode: {
          target: "com.amazonaws.ec2#SnapshotReturnCodes",
          locationName: "returnCode",
        },
      },
    },
    "com.amazonaws.ec2#SnapshotReturnCodes": {
      type: "enum",
    },
    "com.amazonaws.ec2#DeregisterInstanceTagAttributeRequest": {
      type: "structure",
      members: {
        IncludeAllTagsOfInstance: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceTagKeys: {
          target: "com.amazonaws.ec2#InstanceTagKeySet",
          locationName: "InstanceTagKey",
        },
      },
    },
    "com.amazonaws.ec2#InstanceTagKeySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceTagNotificationAttribute": {
      type: "structure",
      members: {
        InstanceTagKeys: {
          target: "com.amazonaws.ec2#InstanceTagKeySet",
          locationName: "instanceTagKeySet",
        },
        IncludeAllTagsOfInstance: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "includeAllTagsOfInstance",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayNetworkInterfaceIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterfaceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDeregisteredGroupMembers": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainId",
        },
        DeregisteredNetworkInterfaceIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "deregisteredNetworkInterfaceIds",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDeregisteredGroupSources": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainId",
        },
        DeregisteredNetworkInterfaceIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "deregisteredNetworkInterfaceIds",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#AccountAttributeNameStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AccountAttributeName",
        locationName: "attributeName",
      },
    },
    "com.amazonaws.ec2#AccountAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#AccountAttributeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AccountAttribute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AccountAttribute": {
      type: "structure",
      members: {
        AttributeName: {
          target: "com.amazonaws.ec2#String",
          locationName: "attributeName",
        },
        AttributeValues: {
          target: "com.amazonaws.ec2#AccountAttributeValueList",
          locationName: "attributeValueSet",
        },
      },
    },
    "com.amazonaws.ec2#AccountAttributeValueList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AccountAttributeValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AccountAttributeValue": {
      type: "structure",
      members: {
        AttributeValue: {
          target: "com.amazonaws.ec2#String",
          locationName: "attributeValue",
        },
      },
    },
    "com.amazonaws.ec2#DescribeAddressTransfersMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#AddressTransferList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AddressTransfer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PublicIpStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "PublicIp",
      },
    },
    "com.amazonaws.ec2#FilterList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Filter",
        locationName: "Filter",
      },
    },
    "com.amazonaws.ec2#Filter": {
      type: "structure",
      members: {
        Name: {
          target: "com.amazonaws.ec2#String",
        },
        Values: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "Value",
        },
      },
    },
    "com.amazonaws.ec2#AddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Address",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Address": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        Domain: {
          target: "com.amazonaws.ec2#DomainType",
          locationName: "domain",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        NetworkInterfaceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceOwnerId",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        PublicIpv4Pool: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIpv4Pool",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
        CustomerOwnedIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerOwnedIp",
        },
        CustomerOwnedIpv4Pool: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerOwnedIpv4Pool",
        },
        CarrierIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "carrierIp",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        ServiceManaged: {
          target: "com.amazonaws.ec2#ServiceManaged",
          locationName: "serviceManaged",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
      },
    },
    "com.amazonaws.ec2#ServiceManaged": {
      type: "enum",
    },
    "com.amazonaws.ec2#AllocationIds": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AllocationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AddressAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#NextToken": {
      type: "string",
    },
    "com.amazonaws.ec2#AddressMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#AddressSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AddressAttribute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AddressAttribute": {
      type: "structure",
      members: {
        PublicIp: {
          target: "com.amazonaws.ec2#PublicIpAddress",
          locationName: "publicIp",
        },
        AllocationId: {
          target: "com.amazonaws.ec2#AllocationId",
          locationName: "allocationId",
        },
        PtrRecord: {
          target: "com.amazonaws.ec2#String",
          locationName: "ptrRecord",
        },
        PtrRecordUpdate: {
          target: "com.amazonaws.ec2#PtrUpdateStatus",
          locationName: "ptrRecordUpdate",
        },
      },
    },
    "com.amazonaws.ec2#PtrUpdateStatus": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        Reason: {
          target: "com.amazonaws.ec2#String",
          locationName: "reason",
        },
      },
    },
    "com.amazonaws.ec2#IdFormatList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IdFormat",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IdFormat": {
      type: "structure",
      members: {
        Deadline: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "deadline",
        },
        Resource: {
          target: "com.amazonaws.ec2#String",
          locationName: "resource",
        },
        UseLongIds: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "useLongIds",
        },
      },
    },
    "com.amazonaws.ec2#ZoneNameStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "ZoneName",
      },
    },
    "com.amazonaws.ec2#ZoneIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "ZoneId",
      },
    },
    "com.amazonaws.ec2#AvailabilityZoneList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AvailabilityZone",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AvailabilityZone": {
      type: "structure",
      members: {
        OptInStatus: {
          target: "com.amazonaws.ec2#AvailabilityZoneOptInStatus",
          locationName: "optInStatus",
        },
        Messages: {
          target: "com.amazonaws.ec2#AvailabilityZoneMessageList",
          locationName: "messageSet",
        },
        RegionName: {
          target: "com.amazonaws.ec2#String",
          locationName: "regionName",
        },
        ZoneName: {
          target: "com.amazonaws.ec2#String",
          locationName: "zoneName",
        },
        ZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "zoneId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
        ZoneType: {
          target: "com.amazonaws.ec2#String",
          locationName: "zoneType",
        },
        ParentZoneName: {
          target: "com.amazonaws.ec2#String",
          locationName: "parentZoneName",
        },
        ParentZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "parentZoneId",
        },
        GroupLongName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupLongName",
        },
        State: {
          target: "com.amazonaws.ec2#AvailabilityZoneState",
          locationName: "zoneState",
        },
      },
    },
    "com.amazonaws.ec2#AvailabilityZoneOptInStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#AvailabilityZoneMessageList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AvailabilityZoneMessage",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AvailabilityZoneMessage": {
      type: "structure",
      members: {
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#AvailabilityZoneState": {
      type: "enum",
    },
    "com.amazonaws.ec2#MaxResultsParam": {
      type: "integer",
    },
    "com.amazonaws.ec2#SubscriptionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Subscription",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Subscription": {
      type: "structure",
      members: {
        Source: {
          target: "com.amazonaws.ec2#String",
          locationName: "source",
        },
        Destination: {
          target: "com.amazonaws.ec2#String",
          locationName: "destination",
        },
        Metric: {
          target: "com.amazonaws.ec2#MetricType",
          locationName: "metric",
        },
        Statistic: {
          target: "com.amazonaws.ec2#StatisticType",
          locationName: "statistic",
        },
        Period: {
          target: "com.amazonaws.ec2#PeriodType",
          locationName: "period",
        },
      },
    },
    "com.amazonaws.ec2#MetricType": {
      type: "enum",
    },
    "com.amazonaws.ec2#StatisticType": {
      type: "enum",
    },
    "com.amazonaws.ec2#PeriodType": {
      type: "enum",
    },
    "com.amazonaws.ec2#BundleIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BundleId",
        locationName: "BundleId",
      },
    },
    "com.amazonaws.ec2#BundleTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BundleTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeByoipCidrsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ByoipCidrSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ByoipCidr",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeFutureCapacityMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityBlockExtensionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityBlockExtension",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityBlockExtension": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
          locationName: "capacityReservationId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
          locationName: "availabilityZone",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
          locationName: "availabilityZoneId",
        },
        CapacityBlockExtensionOfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
          locationName: "capacityBlockExtensionOfferingId",
        },
        CapacityBlockExtensionDurationHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "capacityBlockExtensionDurationHours",
        },
        CapacityBlockExtensionStatus: {
          target: "com.amazonaws.ec2#CapacityBlockExtensionStatus",
          locationName: "capacityBlockExtensionStatus",
        },
        CapacityBlockExtensionPurchaseDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "capacityBlockExtensionPurchaseDate",
        },
        CapacityBlockExtensionStartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "capacityBlockExtensionStartDate",
        },
        CapacityBlockExtensionEndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "capacityBlockExtensionEndDate",
        },
        UpfrontFee: {
          target: "com.amazonaws.ec2#String",
          locationName: "upfrontFee",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "currencyCode",
        },
      },
    },
    "com.amazonaws.ec2#OfferingId": {
      type: "string",
    },
    "com.amazonaws.ec2#CapacityBlockExtensionStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#DescribeCapacityBlockExtensionOfferingsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityBlockExtensionOfferingSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityBlockExtensionOffering",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityBlockExtensionOffering": {
      type: "structure",
      members: {
        CapacityBlockExtensionOfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
          locationName: "capacityBlockExtensionOfferingId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
          locationName: "availabilityZone",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
          locationName: "availabilityZoneId",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        CapacityBlockExtensionStartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "capacityBlockExtensionStartDate",
        },
        CapacityBlockExtensionEndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "capacityBlockExtensionEndDate",
        },
        CapacityBlockExtensionDurationHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "capacityBlockExtensionDurationHours",
        },
        UpfrontFee: {
          target: "com.amazonaws.ec2#String",
          locationName: "upfrontFee",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "currencyCode",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#CapacityReservationTenancy",
          locationName: "tenancy",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockOfferingsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityBlockOfferingSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityBlockOffering",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityBlockOffering": {
      type: "structure",
      members: {
        CapacityBlockOfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
          locationName: "capacityBlockOfferingId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endDate",
        },
        CapacityBlockDurationHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "capacityBlockDurationHours",
        },
        UpfrontFee: {
          target: "com.amazonaws.ec2#String",
          locationName: "upfrontFee",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "currencyCode",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#CapacityReservationTenancy",
          locationName: "tenancy",
        },
        UltraserverType: {
          target: "com.amazonaws.ec2#String",
          locationName: "ultraserverType",
        },
        UltraserverCount: {
          target: "com.amazonaws.ec2#BoxedInteger",
          locationName: "ultraserverCount",
        },
        CapacityBlockDurationMinutes: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "capacityBlockDurationMinutes",
        },
      },
    },
    "com.amazonaws.ec2#BoxedInteger": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityBlockIds": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityBlockId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlockStatusMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityBlockStatusSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityBlockStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityBlockStatus": {
      type: "structure",
      members: {
        CapacityBlockId: {
          target: "com.amazonaws.ec2#CapacityBlockId",
          locationName: "capacityBlockId",
        },
        InterconnectStatus: {
          target: "com.amazonaws.ec2#CapacityBlockInterconnectStatus",
          locationName: "interconnectStatus",
        },
        TotalCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalCapacity",
        },
        TotalAvailableCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalAvailableCapacity",
        },
        TotalUnavailableCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalUnavailableCapacity",
        },
        CapacityReservationStatuses: {
          target: "com.amazonaws.ec2#CapacityReservationStatusSet",
          locationName: "capacityReservationStatusSet",
        },
      },
    },
    "com.amazonaws.ec2#CapacityBlockInterconnectStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationStatusSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationStatus": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#CapacityReservationId",
          locationName: "capacityReservationId",
        },
        TotalCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalCapacity",
        },
        TotalAvailableCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalAvailableCapacity",
        },
        TotalUnavailableCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalUnavailableCapacity",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityBlocksMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityBlockSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityBlock",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityBlock": {
      type: "structure",
      members: {
        CapacityBlockId: {
          target: "com.amazonaws.ec2#CapacityBlockId",
          locationName: "capacityBlockId",
        },
        UltraserverType: {
          target: "com.amazonaws.ec2#String",
          locationName: "ultraserverType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        CapacityReservationIds: {
          target: "com.amazonaws.ec2#CapacityReservationIdSet",
          locationName: "capacityReservationIdSet",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endDate",
        },
        CreateDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createDate",
        },
        State: {
          target: "com.amazonaws.ec2#CapacityBlockResourceState",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#CapacityBlockResourceState": {
      type: "enum",
    },
    "com.amazonaws.ec2#CallerRole": {
      type: "enum",
    },
    "com.amazonaws.ec2#DescribeCapacityReservationBillingRequestsRequestMaxResults":
      {
        type: "integer",
      },
    "com.amazonaws.ec2#CapacityReservationBillingRequestSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationBillingRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationBillingRequest": {
      type: "structure",
      members: {
        CapacityReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationId",
        },
        RequestedBy: {
          target: "com.amazonaws.ec2#String",
          locationName: "requestedBy",
        },
        UnusedReservationBillingOwnerId: {
          target: "com.amazonaws.ec2#AccountID",
          locationName: "unusedReservationBillingOwnerId",
        },
        LastUpdateTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastUpdateTime",
        },
        Status: {
          target: "com.amazonaws.ec2#CapacityReservationBillingRequestStatus",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        CapacityReservationInfo: {
          target: "com.amazonaws.ec2#CapacityReservationInfo",
          locationName: "capacityReservationInfo",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationBillingRequestStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#CapacityReservationInfo": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#AvailabilityZoneName",
          locationName: "availabilityZone",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#CapacityReservationTenancy",
          locationName: "tenancy",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
          locationName: "availabilityZoneId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationFleetsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityReservationFleetSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationFleet",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationFleet": {
      type: "structure",
      members: {
        CapacityReservationFleetId: {
          target: "com.amazonaws.ec2#CapacityReservationFleetId",
          locationName: "capacityReservationFleetId",
        },
        CapacityReservationFleetArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationFleetArn",
        },
        State: {
          target: "com.amazonaws.ec2#CapacityReservationFleetState",
          locationName: "state",
        },
        TotalTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalTargetCapacity",
        },
        TotalFulfilledCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "totalFulfilledCapacity",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#FleetCapacityReservationTenancy",
          locationName: "tenancy",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endDate",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createTime",
        },
        InstanceMatchCriteria: {
          target: "com.amazonaws.ec2#FleetInstanceMatchCriteria",
          locationName: "instanceMatchCriteria",
        },
        AllocationStrategy: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationStrategy",
        },
        InstanceTypeSpecifications: {
          target: "com.amazonaws.ec2#FleetCapacityReservationSet",
          locationName: "instanceTypeSpecificationSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeCapacityReservationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityReservationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CarrierGatewayIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CarrierGatewayId",
      },
    },
    "com.amazonaws.ec2#CarrierGatewayMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CarrierGatewaySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CarrierGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceId",
        locationName: "InstanceId",
      },
    },
    "com.amazonaws.ec2#DescribeClassicLinkInstancesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ClassicLinkInstanceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClassicLinkInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClassicLinkInstance": {
      type: "structure",
      members: {
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnAuthorizationRulesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#AuthorizationRuleSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AuthorizationRule",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AuthorizationRule": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        AccessAll: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "accessAll",
        },
        DestinationCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidr",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientVpnAuthorizationRuleStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnConnectionsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ClientVpnConnectionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClientVpnConnection",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClientVpnConnection": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#String",
          locationName: "timestamp",
        },
        ConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "connectionId",
        },
        Username: {
          target: "com.amazonaws.ec2#String",
          locationName: "username",
        },
        ConnectionEstablishedTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "connectionEstablishedTime",
        },
        IngressBytes: {
          target: "com.amazonaws.ec2#String",
          locationName: "ingressBytes",
        },
        EgressBytes: {
          target: "com.amazonaws.ec2#String",
          locationName: "egressBytes",
        },
        IngressPackets: {
          target: "com.amazonaws.ec2#String",
          locationName: "ingressPackets",
        },
        EgressPackets: {
          target: "com.amazonaws.ec2#String",
          locationName: "egressPackets",
        },
        ClientIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientIp",
        },
        CommonName: {
          target: "com.amazonaws.ec2#String",
          locationName: "commonName",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientVpnConnectionStatus",
          locationName: "status",
        },
        ConnectionEndTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "connectionEndTime",
        },
        PostureComplianceStatuses: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "postureComplianceStatusSet",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnConnectionStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#ClientVpnConnectionStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnConnectionStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientVpnEndpointIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClientVpnEndpointId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnEndpointMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#EndpointSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClientVpnEndpoint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClientVpnEndpoint": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientVpnEndpointStatus",
          locationName: "status",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationTime",
        },
        DeletionTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "deletionTime",
        },
        DnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "dnsName",
        },
        ClientCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientCidrBlock",
        },
        DnsServers: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "dnsServer",
        },
        SplitTunnel: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "splitTunnel",
        },
        VpnProtocol: {
          target: "com.amazonaws.ec2#VpnProtocol",
          locationName: "vpnProtocol",
        },
        TransportProtocol: {
          target: "com.amazonaws.ec2#TransportProtocol",
          locationName: "transportProtocol",
        },
        VpnPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "vpnPort",
        },
        AssociatedTargetNetworks: {
          target: "com.amazonaws.ec2#AssociatedTargetNetworkSet",
          locationName: "associatedTargetNetwork",
        },
        ServerCertificateArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "serverCertificateArn",
        },
        AuthenticationOptions: {
          target: "com.amazonaws.ec2#ClientVpnAuthenticationList",
          locationName: "authenticationOptions",
        },
        ConnectionLogOptions: {
          target: "com.amazonaws.ec2#ConnectionLogResponseOptions",
          locationName: "connectionLogOptions",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ClientVpnSecurityGroupIdSet",
          locationName: "securityGroupIdSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        SelfServicePortalUrl: {
          target: "com.amazonaws.ec2#String",
          locationName: "selfServicePortalUrl",
        },
        ClientConnectOptions: {
          target: "com.amazonaws.ec2#ClientConnectResponseOptions",
          locationName: "clientConnectOptions",
        },
        SessionTimeoutHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "sessionTimeoutHours",
        },
        ClientLoginBannerOptions: {
          target: "com.amazonaws.ec2#ClientLoginBannerResponseOptions",
          locationName: "clientLoginBannerOptions",
        },
        ClientRouteEnforcementOptions: {
          target: "com.amazonaws.ec2#ClientRouteEnforcementResponseOptions",
          locationName: "clientRouteEnforcementOptions",
        },
        DisconnectOnSessionTimeout: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "disconnectOnSessionTimeout",
        },
      },
    },
    "com.amazonaws.ec2#VpnProtocol": {
      type: "enum",
    },
    "com.amazonaws.ec2#AssociatedTargetNetworkSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AssociatedTargetNetwork",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AssociatedTargetNetwork": {
      type: "structure",
      members: {
        NetworkId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkId",
        },
        NetworkType: {
          target: "com.amazonaws.ec2#AssociatedNetworkType",
          locationName: "networkType",
        },
      },
    },
    "com.amazonaws.ec2#AssociatedNetworkType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientVpnAuthenticationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClientVpnAuthentication",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClientVpnAuthentication": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#ClientVpnAuthenticationType",
          locationName: "type",
        },
        ActiveDirectory: {
          target: "com.amazonaws.ec2#DirectoryServiceAuthentication",
          locationName: "activeDirectory",
        },
        MutualAuthentication: {
          target: "com.amazonaws.ec2#CertificateAuthentication",
          locationName: "mutualAuthentication",
        },
        FederatedAuthentication: {
          target: "com.amazonaws.ec2#FederatedAuthentication",
          locationName: "federatedAuthentication",
        },
      },
    },
    "com.amazonaws.ec2#DirectoryServiceAuthentication": {
      type: "structure",
      members: {
        DirectoryId: {
          target: "com.amazonaws.ec2#String",
          locationName: "directoryId",
        },
      },
    },
    "com.amazonaws.ec2#CertificateAuthentication": {
      type: "structure",
      members: {
        ClientRootCertificateChain: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientRootCertificateChain",
        },
      },
    },
    "com.amazonaws.ec2#FederatedAuthentication": {
      type: "structure",
      members: {
        SamlProviderArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "samlProviderArn",
        },
        SelfServiceSamlProviderArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "selfServiceSamlProviderArn",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionLogResponseOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        CloudwatchLogGroup: {
          target: "com.amazonaws.ec2#String",
        },
        CloudwatchLogStream: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ClientConnectResponseOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
        LambdaFunctionArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "lambdaFunctionArn",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientVpnEndpointAttributeStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnEndpointAttributeStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#ClientVpnEndpointAttributeStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ClientVpnEndpointAttributeStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientLoginBannerResponseOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
        BannerText: {
          target: "com.amazonaws.ec2#String",
          locationName: "bannerText",
        },
      },
    },
    "com.amazonaws.ec2#ClientRouteEnforcementResponseOptions": {
      type: "structure",
      members: {
        Enforced: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enforced",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnRoutesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ClientVpnRouteSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClientVpnRoute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClientVpnRoute": {
      type: "structure",
      members: {
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        DestinationCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidr",
        },
        TargetSubnet: {
          target: "com.amazonaws.ec2#String",
          locationName: "targetSubnet",
        },
        Type: {
          target: "com.amazonaws.ec2#String",
          locationName: "type",
        },
        Origin: {
          target: "com.amazonaws.ec2#String",
          locationName: "origin",
        },
        Status: {
          target: "com.amazonaws.ec2#ClientVpnRouteStatus",
          locationName: "status",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
      },
    },
    "com.amazonaws.ec2#DescribeClientVpnTargetNetworksMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#TargetNetworkSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TargetNetwork",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TargetNetwork": {
      type: "structure",
      members: {
        AssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "associationId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        TargetNetworkId: {
          target: "com.amazonaws.ec2#String",
          locationName: "targetNetworkId",
        },
        ClientVpnEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientVpnEndpointId",
        },
        Status: {
          target: "com.amazonaws.ec2#AssociationStatus",
          locationName: "status",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "securityGroups",
        },
      },
    },
    "com.amazonaws.ec2#CoipPoolIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv4PoolCoipId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CoipPoolMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CoipPoolSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CoipPool",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ConversionIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ConversionTaskId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeConversionTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ConversionTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ConversionTask": {
      type: "structure",
      members: {
        ConversionTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "conversionTaskId",
        },
        ExpirationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "expirationTime",
        },
        ImportInstance: {
          target: "com.amazonaws.ec2#ImportInstanceTaskDetails",
          locationName: "importInstance",
        },
        ImportVolume: {
          target: "com.amazonaws.ec2#ImportVolumeTaskDetails",
          locationName: "importVolume",
        },
        State: {
          target: "com.amazonaws.ec2#ConversionTaskState",
          locationName: "state",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ImportInstanceTaskDetails": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Platform: {
          target: "com.amazonaws.ec2#PlatformValues",
          locationName: "platform",
        },
        Volumes: {
          target: "com.amazonaws.ec2#ImportInstanceVolumeDetailSet",
          locationName: "volumes",
        },
      },
    },
    "com.amazonaws.ec2#ImportInstanceVolumeDetailSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportInstanceVolumeDetailItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImportInstanceVolumeDetailItem": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        BytesConverted: {
          target: "com.amazonaws.ec2#Long",
          locationName: "bytesConverted",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Image: {
          target: "com.amazonaws.ec2#DiskImageDescription",
          locationName: "image",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Volume: {
          target: "com.amazonaws.ec2#DiskImageVolumeDescription",
          locationName: "volume",
        },
      },
    },
    "com.amazonaws.ec2#DiskImageDescription": {
      type: "structure",
      members: {
        Checksum: {
          target: "com.amazonaws.ec2#String",
          locationName: "checksum",
        },
        Format: {
          target: "com.amazonaws.ec2#DiskImageFormat",
          locationName: "format",
        },
        ImportManifestUrl: {
          target: "com.amazonaws.ec2#ImportManifestUrl",
          locationName: "importManifestUrl",
        },
        Size: {
          target: "com.amazonaws.ec2#Long",
          locationName: "size",
        },
      },
    },
    "com.amazonaws.ec2#ImportManifestUrl": {
      type: "string",
    },
    "com.amazonaws.ec2#DiskImageVolumeDescription": {
      type: "structure",
      members: {
        Id: {
          target: "com.amazonaws.ec2#String",
          locationName: "id",
        },
        Size: {
          target: "com.amazonaws.ec2#Long",
          locationName: "size",
        },
      },
    },
    "com.amazonaws.ec2#ImportVolumeTaskDetails": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        BytesConverted: {
          target: "com.amazonaws.ec2#Long",
          locationName: "bytesConverted",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Image: {
          target: "com.amazonaws.ec2#DiskImageDescription",
          locationName: "image",
        },
        Volume: {
          target: "com.amazonaws.ec2#DiskImageVolumeDescription",
          locationName: "volume",
        },
      },
    },
    "com.amazonaws.ec2#ConversionTaskState": {
      type: "enum",
    },
    "com.amazonaws.ec2#CustomerGatewayIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CustomerGatewayId",
        locationName: "CustomerGatewayId",
      },
    },
    "com.amazonaws.ec2#CustomerGatewayList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CustomerGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeclarativePoliciesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DeclarativePoliciesReportList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DeclarativePoliciesReport",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DeclarativePoliciesReport": {
      type: "structure",
      members: {
        ReportId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reportId",
        },
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Bucket",
        },
        S3Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Prefix",
        },
        TargetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "targetId",
        },
        StartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endTime",
        },
        Status: {
          target: "com.amazonaws.ec2#ReportState",
          locationName: "status",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ReportState": {
      type: "enum",
    },
    "com.amazonaws.ec2#DhcpOptionsIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DhcpOptionsId",
        locationName: "DhcpOptionsId",
      },
    },
    "com.amazonaws.ec2#DescribeDhcpOptionsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DhcpOptionsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DhcpOptions",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#EgressOnlyInternetGatewayIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#EgressOnlyInternetGatewayId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeEgressOnlyInternetGatewaysMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#EgressOnlyInternetGatewayList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#EgressOnlyInternetGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticGpuIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticGpuId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticGpuId": {
      type: "string",
    },
    "com.amazonaws.ec2#DescribeElasticGpusMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ElasticGpuSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticGpus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticGpus": {
      type: "structure",
      members: {
        ElasticGpuId: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticGpuId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        ElasticGpuType: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticGpuType",
        },
        ElasticGpuHealth: {
          target: "com.amazonaws.ec2#ElasticGpuHealth",
          locationName: "elasticGpuHealth",
        },
        ElasticGpuState: {
          target: "com.amazonaws.ec2#ElasticGpuState",
          locationName: "elasticGpuState",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ElasticGpuHealth": {
      type: "structure",
      members: {
        Status: {
          target: "com.amazonaws.ec2#ElasticGpuStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#ElasticGpuStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#ElasticGpuState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ExportImageTaskIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ExportImageTaskId",
        locationName: "ExportImageTaskId",
      },
    },
    "com.amazonaws.ec2#ExportImageTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#DescribeExportImageTasksMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ExportImageTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ExportImageTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ExportImageTask": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        ExportImageTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "exportImageTaskId",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        S3ExportLocation: {
          target: "com.amazonaws.ec2#ExportTaskS3Location",
          locationName: "s3ExportLocation",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ExportTaskS3Location": {
      type: "structure",
      members: {
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Bucket",
        },
        S3Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Prefix",
        },
      },
    },
    "com.amazonaws.ec2#ExportTaskIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ExportTaskId",
        locationName: "ExportTaskId",
      },
    },
    "com.amazonaws.ec2#ExportTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ExportTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ExportTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FastLaunchImageIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageId",
        locationName: "ImageId",
      },
    },
    "com.amazonaws.ec2#DescribeFastLaunchImagesRequestMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeFastLaunchImagesSuccessSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DescribeFastLaunchImagesSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeFastLaunchImagesSuccessItem": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#FastLaunchResourceType",
          locationName: "resourceType",
        },
        SnapshotConfiguration: {
          target: "com.amazonaws.ec2#FastLaunchSnapshotConfigurationResponse",
          locationName: "snapshotConfiguration",
        },
        LaunchTemplate: {
          target:
            "com.amazonaws.ec2#FastLaunchLaunchTemplateSpecificationResponse",
          locationName: "launchTemplate",
        },
        MaxParallelLaunches: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxParallelLaunches",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#FastLaunchStateCode",
          locationName: "state",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateTransitionReason",
        },
        StateTransitionTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "stateTransitionTime",
        },
      },
    },
    "com.amazonaws.ec2#FastLaunchResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#FastLaunchSnapshotConfigurationResponse": {
      type: "structure",
      members: {
        TargetResourceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "targetResourceCount",
        },
      },
    },
    "com.amazonaws.ec2#FastLaunchLaunchTemplateSpecificationResponse": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
          locationName: "launchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchTemplateName",
        },
        Version: {
          target: "com.amazonaws.ec2#String",
          locationName: "version",
        },
      },
    },
    "com.amazonaws.ec2#FastLaunchStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#DescribeFastSnapshotRestoresMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeFastSnapshotRestoreSuccessItem": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        State: {
          target: "com.amazonaws.ec2#FastSnapshotRestoreStateCode",
          locationName: "state",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateTransitionReason",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        OwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerAlias",
        },
        EnablingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "enablingTime",
        },
        OptimizingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "optimizingTime",
        },
        EnabledTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "enabledTime",
        },
        DisablingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "disablingTime",
        },
        DisabledTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "disabledTime",
        },
      },
    },
    "com.amazonaws.ec2#FastSnapshotRestoreStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetEventType": {
      type: "enum",
    },
    "com.amazonaws.ec2#HistoryRecordSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#HistoryRecordEntry",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HistoryRecordEntry": {
      type: "structure",
      members: {
        EventInformation: {
          target: "com.amazonaws.ec2#EventInformation",
          locationName: "eventInformation",
        },
        EventType: {
          target: "com.amazonaws.ec2#FleetEventType",
          locationName: "eventType",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "timestamp",
        },
      },
    },
    "com.amazonaws.ec2#EventInformation": {
      type: "structure",
      members: {
        EventDescription: {
          target: "com.amazonaws.ec2#String",
          locationName: "eventDescription",
        },
        EventSubType: {
          target: "com.amazonaws.ec2#String",
          locationName: "eventSubType",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
      },
    },
    "com.amazonaws.ec2#ActiveInstanceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ActiveInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ActiveInstance": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        SpotInstanceRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotInstanceRequestId",
        },
        InstanceHealth: {
          target: "com.amazonaws.ec2#InstanceHealthStatus",
          locationName: "instanceHealth",
        },
      },
    },
    "com.amazonaws.ec2#InstanceHealthStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetData",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FleetData": {
      type: "structure",
      members: {
        ActivityStatus: {
          target: "com.amazonaws.ec2#FleetActivityStatus",
          locationName: "activityStatus",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        FleetId: {
          target: "com.amazonaws.ec2#FleetId",
          locationName: "fleetId",
        },
        FleetState: {
          target: "com.amazonaws.ec2#FleetStateCode",
          locationName: "fleetState",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        ExcessCapacityTerminationPolicy: {
          target: "com.amazonaws.ec2#FleetExcessCapacityTerminationPolicy",
          locationName: "excessCapacityTerminationPolicy",
        },
        FulfilledCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "fulfilledCapacity",
        },
        FulfilledOnDemandCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "fulfilledOnDemandCapacity",
        },
        LaunchTemplateConfigs: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateConfigList",
          locationName: "launchTemplateConfigs",
        },
        TargetCapacitySpecification: {
          target: "com.amazonaws.ec2#TargetCapacitySpecification",
          locationName: "targetCapacitySpecification",
        },
        TerminateInstancesWithExpiration: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "terminateInstancesWithExpiration",
        },
        Type: {
          target: "com.amazonaws.ec2#FleetType",
          locationName: "type",
        },
        ValidFrom: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validFrom",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validUntil",
        },
        ReplaceUnhealthyInstances: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "replaceUnhealthyInstances",
        },
        SpotOptions: {
          target: "com.amazonaws.ec2#SpotOptions",
          locationName: "spotOptions",
        },
        OnDemandOptions: {
          target: "com.amazonaws.ec2#OnDemandOptions",
          locationName: "onDemandOptions",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        Errors: {
          target: "com.amazonaws.ec2#DescribeFleetsErrorSet",
          locationName: "errorSet",
        },
        Instances: {
          target: "com.amazonaws.ec2#DescribeFleetsInstancesSet",
          locationName: "fleetInstanceSet",
        },
        Context: {
          target: "com.amazonaws.ec2#String",
          locationName: "context",
        },
      },
    },
    "com.amazonaws.ec2#FleetActivityStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#FleetLaunchTemplateConfigList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetLaunchTemplateConfig",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateConfig": {
      type: "structure",
      members: {
        LaunchTemplateSpecification: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateSpecification",
          locationName: "launchTemplateSpecification",
        },
        Overrides: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateOverridesList",
          locationName: "overrides",
        },
      },
    },
    "com.amazonaws.ec2#FleetLaunchTemplateOverridesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FleetLaunchTemplateOverrides",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TargetCapacitySpecification": {
      type: "structure",
      members: {
        TotalTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalTargetCapacity",
        },
        OnDemandTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "onDemandTargetCapacity",
        },
        SpotTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "spotTargetCapacity",
        },
        DefaultTargetCapacityType: {
          target: "com.amazonaws.ec2#DefaultTargetCapacityType",
          locationName: "defaultTargetCapacityType",
        },
        TargetCapacityUnitType: {
          target: "com.amazonaws.ec2#TargetCapacityUnitType",
          locationName: "targetCapacityUnitType",
        },
      },
    },
    "com.amazonaws.ec2#SpotOptions": {
      type: "structure",
      members: {
        AllocationStrategy: {
          target: "com.amazonaws.ec2#SpotAllocationStrategy",
          locationName: "allocationStrategy",
        },
        MaintenanceStrategies: {
          target: "com.amazonaws.ec2#FleetSpotMaintenanceStrategies",
          locationName: "maintenanceStrategies",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#SpotInstanceInterruptionBehavior",
          locationName: "instanceInterruptionBehavior",
        },
        InstancePoolsToUseCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instancePoolsToUseCount",
        },
        SingleInstanceType: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "singleInstanceType",
        },
        SingleAvailabilityZone: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "singleAvailabilityZone",
        },
        MinTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "minTargetCapacity",
        },
        MaxTotalPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "maxTotalPrice",
        },
      },
    },
    "com.amazonaws.ec2#FleetSpotMaintenanceStrategies": {
      type: "structure",
      members: {
        CapacityRebalance: {
          target: "com.amazonaws.ec2#FleetSpotCapacityRebalance",
          locationName: "capacityRebalance",
        },
      },
    },
    "com.amazonaws.ec2#FleetSpotCapacityRebalance": {
      type: "structure",
      members: {
        ReplacementStrategy: {
          target: "com.amazonaws.ec2#FleetReplacementStrategy",
          locationName: "replacementStrategy",
        },
        TerminationDelay: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "terminationDelay",
        },
      },
    },
    "com.amazonaws.ec2#OnDemandOptions": {
      type: "structure",
      members: {
        AllocationStrategy: {
          target: "com.amazonaws.ec2#FleetOnDemandAllocationStrategy",
          locationName: "allocationStrategy",
        },
        CapacityReservationOptions: {
          target: "com.amazonaws.ec2#CapacityReservationOptions",
          locationName: "capacityReservationOptions",
        },
        SingleInstanceType: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "singleInstanceType",
        },
        SingleAvailabilityZone: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "singleAvailabilityZone",
        },
        MinTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "minTargetCapacity",
        },
        MaxTotalPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "maxTotalPrice",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationOptions": {
      type: "structure",
      members: {
        UsageStrategy: {
          target: "com.amazonaws.ec2#FleetCapacityReservationUsageStrategy",
          locationName: "usageStrategy",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetsErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DescribeFleetError",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeFleetError": {
      type: "structure",
      members: {
        LaunchTemplateAndOverrides: {
          target: "com.amazonaws.ec2#LaunchTemplateAndOverridesResponse",
          locationName: "launchTemplateAndOverrides",
        },
        Lifecycle: {
          target: "com.amazonaws.ec2#InstanceLifecycle",
          locationName: "lifecycle",
        },
        ErrorCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "errorCode",
        },
        ErrorMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "errorMessage",
        },
      },
    },
    "com.amazonaws.ec2#DescribeFleetsInstancesSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DescribeFleetsInstances",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeFleetsInstances": {
      type: "structure",
      members: {
        LaunchTemplateAndOverrides: {
          target: "com.amazonaws.ec2#LaunchTemplateAndOverridesResponse",
          locationName: "launchTemplateAndOverrides",
        },
        Lifecycle: {
          target: "com.amazonaws.ec2#InstanceLifecycle",
          locationName: "lifecycle",
        },
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdsSet",
          locationName: "instanceIds",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        Platform: {
          target: "com.amazonaws.ec2#PlatformValues",
          locationName: "platform",
        },
      },
    },
    "com.amazonaws.ec2#FlowLogSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FlowLog",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FlowLog": {
      type: "structure",
      members: {
        CreationTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "creationTime",
        },
        DeliverLogsErrorMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "deliverLogsErrorMessage",
        },
        DeliverLogsPermissionArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "deliverLogsPermissionArn",
        },
        DeliverCrossAccountRole: {
          target: "com.amazonaws.ec2#String",
          locationName: "deliverCrossAccountRole",
        },
        DeliverLogsStatus: {
          target: "com.amazonaws.ec2#String",
          locationName: "deliverLogsStatus",
        },
        FlowLogId: {
          target: "com.amazonaws.ec2#String",
          locationName: "flowLogId",
        },
        FlowLogStatus: {
          target: "com.amazonaws.ec2#String",
          locationName: "flowLogStatus",
        },
        LogGroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "logGroupName",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        TrafficType: {
          target: "com.amazonaws.ec2#TrafficType",
          locationName: "trafficType",
        },
        LogDestinationType: {
          target: "com.amazonaws.ec2#LogDestinationType",
          locationName: "logDestinationType",
        },
        LogDestination: {
          target: "com.amazonaws.ec2#String",
          locationName: "logDestination",
        },
        LogFormat: {
          target: "com.amazonaws.ec2#String",
          locationName: "logFormat",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        MaxAggregationInterval: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxAggregationInterval",
        },
        DestinationOptions: {
          target: "com.amazonaws.ec2#DestinationOptionsResponse",
          locationName: "destinationOptions",
        },
      },
    },
    "com.amazonaws.ec2#DestinationOptionsResponse": {
      type: "structure",
      members: {
        FileFormat: {
          target: "com.amazonaws.ec2#DestinationFileFormat",
          locationName: "fileFormat",
        },
        HiveCompatiblePartitions: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "hiveCompatiblePartitions",
        },
        PerHourPartition: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "perHourPartition",
        },
      },
    },
    "com.amazonaws.ec2#FpgaImageAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#FpgaImageAttribute": {
      type: "structure",
      members: {
        FpgaImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "fpgaImageId",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        LoadPermissions: {
          target: "com.amazonaws.ec2#LoadPermissionList",
          locationName: "loadPermissions",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
      },
    },
    "com.amazonaws.ec2#LoadPermissionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LoadPermission",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LoadPermission": {
      type: "structure",
      members: {
        UserId: {
          target: "com.amazonaws.ec2#String",
          locationName: "userId",
        },
        Group: {
          target: "com.amazonaws.ec2#PermissionGroup",
          locationName: "group",
        },
      },
    },
    "com.amazonaws.ec2#PermissionGroup": {
      type: "enum",
    },
    "com.amazonaws.ec2#ProductCodeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ProductCode",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ProductCode": {
      type: "structure",
      members: {
        ProductCodeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "productCode",
        },
        ProductCodeType: {
          target: "com.amazonaws.ec2#ProductCodeValues",
          locationName: "type",
        },
      },
    },
    "com.amazonaws.ec2#ProductCodeValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#FpgaImageIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FpgaImageId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#OwnerStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "Owner",
      },
    },
    "com.amazonaws.ec2#DescribeFpgaImagesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#FpgaImageList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FpgaImage",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FpgaImage": {
      type: "structure",
      members: {
        FpgaImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "fpgaImageId",
        },
        FpgaImageGlobalId: {
          target: "com.amazonaws.ec2#String",
          locationName: "fpgaImageGlobalId",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        ShellVersion: {
          target: "com.amazonaws.ec2#String",
          locationName: "shellVersion",
        },
        PciId: {
          target: "com.amazonaws.ec2#PciId",
          locationName: "pciId",
        },
        State: {
          target: "com.amazonaws.ec2#FpgaImageState",
          locationName: "state",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        UpdateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "updateTime",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        OwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerAlias",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tags",
        },
        Public: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "public",
        },
        DataRetentionSupport: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "dataRetentionSupport",
        },
        InstanceTypes: {
          target: "com.amazonaws.ec2#InstanceTypesList",
          locationName: "instanceTypes",
        },
      },
    },
    "com.amazonaws.ec2#PciId": {
      type: "structure",
      members: {
        DeviceId: {
          target: "com.amazonaws.ec2#String",
        },
        VendorId: {
          target: "com.amazonaws.ec2#String",
        },
        SubsystemId: {
          target: "com.amazonaws.ec2#String",
        },
        SubsystemVendorId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#FpgaImageState": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#FpgaImageStateCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#FpgaImageStateCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceTypesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeHostReservationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#HostOfferingSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#HostOffering",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HostOffering": {
      type: "structure",
      members: {
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        Duration: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "duration",
        },
        HourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "hourlyPrice",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceFamily",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
          locationName: "offeringId",
        },
        PaymentOption: {
          target: "com.amazonaws.ec2#PaymentOption",
          locationName: "paymentOption",
        },
        UpfrontPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "upfrontPrice",
        },
      },
    },
    "com.amazonaws.ec2#PaymentOption": {
      type: "enum",
    },
    "com.amazonaws.ec2#HostReservationIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#HostReservationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HostReservationId": {
      type: "string",
    },
    "com.amazonaws.ec2#HostReservationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#HostReservation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HostReservation": {
      type: "structure",
      members: {
        Count: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "count",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        Duration: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "duration",
        },
        End: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "end",
        },
        HostIdSet: {
          target: "com.amazonaws.ec2#ResponseHostIdSet",
          locationName: "hostIdSet",
        },
        HostReservationId: {
          target: "com.amazonaws.ec2#HostReservationId",
          locationName: "hostReservationId",
        },
        HourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "hourlyPrice",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceFamily",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#OfferingId",
          locationName: "offeringId",
        },
        PaymentOption: {
          target: "com.amazonaws.ec2#PaymentOption",
          locationName: "paymentOption",
        },
        Start: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "start",
        },
        State: {
          target: "com.amazonaws.ec2#ReservationState",
          locationName: "state",
        },
        UpfrontPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "upfrontPrice",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ResponseHostIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RequestHostIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DedicatedHostId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HostList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Host",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Host": {
      type: "structure",
      members: {
        AutoPlacement: {
          target: "com.amazonaws.ec2#AutoPlacement",
          locationName: "autoPlacement",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        AvailableCapacity: {
          target: "com.amazonaws.ec2#AvailableCapacity",
          locationName: "availableCapacity",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        HostId: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostId",
        },
        HostProperties: {
          target: "com.amazonaws.ec2#HostProperties",
          locationName: "hostProperties",
        },
        HostReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "hostReservationId",
        },
        Instances: {
          target: "com.amazonaws.ec2#HostInstanceList",
          locationName: "instances",
        },
        State: {
          target: "com.amazonaws.ec2#AllocationState",
          locationName: "state",
        },
        AllocationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "allocationTime",
        },
        ReleaseTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "releaseTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        HostRecovery: {
          target: "com.amazonaws.ec2#HostRecovery",
          locationName: "hostRecovery",
        },
        AllowsMultipleInstanceTypes: {
          target: "com.amazonaws.ec2#AllowsMultipleInstanceTypes",
          locationName: "allowsMultipleInstanceTypes",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        MemberOfServiceLinkedResourceGroup: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "memberOfServiceLinkedResourceGroup",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        HostMaintenance: {
          target: "com.amazonaws.ec2#HostMaintenance",
          locationName: "hostMaintenance",
        },
        AssetId: {
          target: "com.amazonaws.ec2#AssetId",
          locationName: "assetId",
        },
      },
    },
    "com.amazonaws.ec2#AvailableCapacity": {
      type: "structure",
      members: {
        AvailableInstanceCapacity: {
          target: "com.amazonaws.ec2#AvailableInstanceCapacityList",
          locationName: "availableInstanceCapacity",
        },
        AvailableVCpus: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableVCpus",
        },
      },
    },
    "com.amazonaws.ec2#AvailableInstanceCapacityList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceCapacity",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceCapacity": {
      type: "structure",
      members: {
        AvailableCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableCapacity",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        TotalCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalCapacity",
        },
      },
    },
    "com.amazonaws.ec2#HostProperties": {
      type: "structure",
      members: {
        Cores: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "cores",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceFamily",
        },
        Sockets: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "sockets",
        },
        TotalVCpus: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalVCpus",
        },
      },
    },
    "com.amazonaws.ec2#HostInstanceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#HostInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HostInstance": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
      },
    },
    "com.amazonaws.ec2#AllocationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#AllowsMultipleInstanceTypes": {
      type: "enum",
    },
    "com.amazonaws.ec2#AssociationIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IamInstanceProfileAssociationId",
        locationName: "AssociationId",
      },
    },
    "com.amazonaws.ec2#IamInstanceProfileAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#DescribeIamInstanceProfileAssociationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#IamInstanceProfileAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IamInstanceProfileAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchPermissionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchPermission",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchPermission": {
      type: "structure",
      members: {
        OrganizationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "organizationArn",
        },
        OrganizationalUnitArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "organizationalUnitArn",
        },
        UserId: {
          target: "com.amazonaws.ec2#String",
          locationName: "userId",
        },
        Group: {
          target: "com.amazonaws.ec2#PermissionGroup",
          locationName: "group",
        },
      },
    },
    "com.amazonaws.ec2#BlockDeviceMappingList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BlockDeviceMapping",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ExecutableByStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "ExecutableBy",
      },
    },
    "com.amazonaws.ec2#ImageIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageId",
        locationName: "ImageId",
      },
    },
    "com.amazonaws.ec2#ImageList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Image",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Image": {
      type: "structure",
      members: {
        PlatformDetails: {
          target: "com.amazonaws.ec2#String",
          locationName: "platformDetails",
        },
        UsageOperation: {
          target: "com.amazonaws.ec2#String",
          locationName: "usageOperation",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        EnaSupport: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSupport",
        },
        Hypervisor: {
          target: "com.amazonaws.ec2#HypervisorType",
          locationName: "hypervisor",
        },
        ImageOwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageOwnerAlias",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        RootDeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "rootDeviceName",
        },
        RootDeviceType: {
          target: "com.amazonaws.ec2#DeviceType",
          locationName: "rootDeviceType",
        },
        SriovNetSupport: {
          target: "com.amazonaws.ec2#String",
          locationName: "sriovNetSupport",
        },
        StateReason: {
          target: "com.amazonaws.ec2#StateReason",
          locationName: "stateReason",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VirtualizationType: {
          target: "com.amazonaws.ec2#VirtualizationType",
          locationName: "virtualizationType",
        },
        BootMode: {
          target: "com.amazonaws.ec2#BootModeValues",
          locationName: "bootMode",
        },
        TpmSupport: {
          target: "com.amazonaws.ec2#TpmSupportValues",
          locationName: "tpmSupport",
        },
        DeprecationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "deprecationTime",
        },
        ImdsSupport: {
          target: "com.amazonaws.ec2#ImdsSupportValues",
          locationName: "imdsSupport",
        },
        SourceInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceInstanceId",
        },
        DeregistrationProtection: {
          target: "com.amazonaws.ec2#String",
          locationName: "deregistrationProtection",
        },
        LastLaunchedTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastLaunchedTime",
        },
        ImageAllowed: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "imageAllowed",
        },
        SourceImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceImageId",
        },
        SourceImageRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceImageRegion",
        },
        FreeTierEligible: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "freeTierEligible",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        ImageLocation: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageLocation",
        },
        State: {
          target: "com.amazonaws.ec2#ImageState",
          locationName: "imageState",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageOwnerId",
        },
        CreationDate: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationDate",
        },
        Public: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isPublic",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        Architecture: {
          target: "com.amazonaws.ec2#ArchitectureValues",
          locationName: "architecture",
        },
        ImageType: {
          target: "com.amazonaws.ec2#ImageTypeValues",
          locationName: "imageType",
        },
        KernelId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kernelId",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ramdiskId",
        },
        Platform: {
          target: "com.amazonaws.ec2#PlatformValues",
          locationName: "platform",
        },
      },
    },
    "com.amazonaws.ec2#HypervisorType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DeviceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#VirtualizationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#BootModeValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#TpmSupportValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#ImdsSupportValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#ImageState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ArchitectureValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#ImageTypeValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#ImportTaskIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportImageTaskId",
        locationName: "ImportTaskId",
      },
    },
    "com.amazonaws.ec2#ImportImageTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ImportImageTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportImageTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImportImageTask": {
      type: "structure",
      members: {
        Architecture: {
          target: "com.amazonaws.ec2#String",
          locationName: "architecture",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        Hypervisor: {
          target: "com.amazonaws.ec2#String",
          locationName: "hypervisor",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        ImportTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "importTaskId",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
        LicenseType: {
          target: "com.amazonaws.ec2#String",
          locationName: "licenseType",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
          locationName: "platform",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        SnapshotDetails: {
          target: "com.amazonaws.ec2#SnapshotDetailList",
          locationName: "snapshotDetailSet",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        LicenseSpecifications: {
          target:
            "com.amazonaws.ec2#ImportImageLicenseSpecificationListResponse",
          locationName: "licenseSpecifications",
        },
        UsageOperation: {
          target: "com.amazonaws.ec2#String",
          locationName: "usageOperation",
        },
        BootMode: {
          target: "com.amazonaws.ec2#BootModeValues",
          locationName: "bootMode",
        },
      },
    },
    "com.amazonaws.ec2#SnapshotDetailList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SnapshotDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SnapshotDetail": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        DiskImageSize: {
          target: "com.amazonaws.ec2#Double",
          locationName: "diskImageSize",
        },
        Format: {
          target: "com.amazonaws.ec2#String",
          locationName: "format",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Url: {
          target: "com.amazonaws.ec2#SensitiveUrl",
          locationName: "url",
        },
        UserBucket: {
          target: "com.amazonaws.ec2#UserBucketDetails",
          locationName: "userBucket",
        },
      },
    },
    "com.amazonaws.ec2#SensitiveUrl": {
      type: "string",
    },
    "com.amazonaws.ec2#UserBucketDetails": {
      type: "structure",
      members: {
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Bucket",
        },
        S3Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3Key",
        },
      },
    },
    "com.amazonaws.ec2#ImportImageLicenseSpecificationListResponse": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportImageLicenseConfigurationResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImportImageLicenseConfigurationResponse": {
      type: "structure",
      members: {
        LicenseConfigurationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "licenseConfigurationArn",
        },
      },
    },
    "com.amazonaws.ec2#ImportSnapshotTaskIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportSnapshotTaskId",
        locationName: "ImportTaskId",
      },
    },
    "com.amazonaws.ec2#ImportSnapshotTaskId": {
      type: "string",
    },
    "com.amazonaws.ec2#ImportSnapshotTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportSnapshotTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImportSnapshotTask": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        ImportTaskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "importTaskId",
        },
        SnapshotTaskDetail: {
          target: "com.amazonaws.ec2#SnapshotTaskDetail",
          locationName: "snapshotTaskDetail",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#SnapshotTaskDetail": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        DiskImageSize: {
          target: "com.amazonaws.ec2#Double",
          locationName: "diskImageSize",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "encrypted",
        },
        Format: {
          target: "com.amazonaws.ec2#String",
          locationName: "format",
        },
        KmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kmsKeyId",
        },
        Progress: {
          target: "com.amazonaws.ec2#String",
          locationName: "progress",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        Url: {
          target: "com.amazonaws.ec2#SensitiveUrl",
          locationName: "url",
        },
        UserBucket: {
          target: "com.amazonaws.ec2#UserBucketDetails",
          locationName: "userBucket",
        },
      },
    },
    "com.amazonaws.ec2#InstanceAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceBlockDeviceMappingList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceBlockDeviceMapping",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceBlockDeviceMapping": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        Ebs: {
          target: "com.amazonaws.ec2#EbsInstanceBlockDevice",
          locationName: "ebs",
        },
      },
    },
    "com.amazonaws.ec2#EbsInstanceBlockDevice": {
      type: "structure",
      members: {
        AttachTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "attachTime",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        Status: {
          target: "com.amazonaws.ec2#AttachmentStatus",
          locationName: "status",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        AssociatedResource: {
          target: "com.amazonaws.ec2#String",
          locationName: "associatedResource",
        },
        VolumeOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeOwnerId",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
      },
    },
    "com.amazonaws.ec2#AttributeBooleanValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#EnclaveOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
      },
    },
    "com.amazonaws.ec2#InstanceConnectEndpointMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceConnectEndpointSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ec2InstanceConnectEndpoint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeInstanceCreditSpecificationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceCreditSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceCreditSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceCreditSpecification": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        CpuCredits: {
          target: "com.amazonaws.ec2#String",
          locationName: "cpuCredits",
        },
      },
    },
    "com.amazonaws.ec2#InstanceEventWindowIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceEventWindowId",
        locationName: "InstanceEventWindowId",
      },
    },
    "com.amazonaws.ec2#ResultRange": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceEventWindowSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceEventWindow",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeInstanceImageMetadataMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceImageMetadataList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceImageMetadata",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceImageMetadata": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        LaunchTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "launchTime",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        ZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "zoneId",
        },
        State: {
          target: "com.amazonaws.ec2#InstanceState",
          locationName: "instanceState",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceOwnerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ImageMetadata: {
          target: "com.amazonaws.ec2#ImageMetadata",
          locationName: "imageMetadata",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
      },
    },
    "com.amazonaws.ec2#InstanceState": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "code",
        },
        Name: {
          target: "com.amazonaws.ec2#InstanceStateName",
          locationName: "name",
        },
      },
    },
    "com.amazonaws.ec2#InstanceStateName": {
      type: "enum",
    },
    "com.amazonaws.ec2#ImageMetadata": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageOwnerId",
        },
        State: {
          target: "com.amazonaws.ec2#ImageState",
          locationName: "imageState",
        },
        ImageOwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageOwnerAlias",
        },
        CreationDate: {
          target: "com.amazonaws.ec2#String",
          locationName: "creationDate",
        },
        DeprecationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "deprecationTime",
        },
        ImageAllowed: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "imageAllowed",
        },
        IsPublic: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isPublic",
        },
      },
    },
    "com.amazonaws.ec2#InstanceStatusList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceStatus": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
        Events: {
          target: "com.amazonaws.ec2#InstanceStatusEventList",
          locationName: "eventsSet",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceState: {
          target: "com.amazonaws.ec2#InstanceState",
          locationName: "instanceState",
        },
        InstanceStatus: {
          target: "com.amazonaws.ec2#InstanceStatusSummary",
          locationName: "instanceStatus",
        },
        SystemStatus: {
          target: "com.amazonaws.ec2#InstanceStatusSummary",
          locationName: "systemStatus",
        },
        AttachedEbsStatus: {
          target: "com.amazonaws.ec2#EbsStatusSummary",
          locationName: "attachedEbsStatus",
        },
      },
    },
    "com.amazonaws.ec2#InstanceStatusEventList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceStatusEvent",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceStatusEvent": {
      type: "structure",
      members: {
        InstanceEventId: {
          target: "com.amazonaws.ec2#InstanceEventId",
          locationName: "instanceEventId",
        },
        Code: {
          target: "com.amazonaws.ec2#EventCode",
          locationName: "code",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        NotAfter: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "notAfter",
        },
        NotBefore: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "notBefore",
        },
        NotBeforeDeadline: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "notBeforeDeadline",
        },
      },
    },
    "com.amazonaws.ec2#InstanceEventId": {
      type: "string",
    },
    "com.amazonaws.ec2#EventCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceStatusSummary": {
      type: "structure",
      members: {
        Details: {
          target: "com.amazonaws.ec2#InstanceStatusDetailsList",
          locationName: "details",
        },
        Status: {
          target: "com.amazonaws.ec2#SummaryStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#InstanceStatusDetailsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceStatusDetails",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceStatusDetails": {
      type: "structure",
      members: {
        ImpairedSince: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "impairedSince",
        },
        Name: {
          target: "com.amazonaws.ec2#StatusName",
          locationName: "name",
        },
        Status: {
          target: "com.amazonaws.ec2#StatusType",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#StatusName": {
      type: "enum",
    },
    "com.amazonaws.ec2#StatusType": {
      type: "enum",
    },
    "com.amazonaws.ec2#SummaryStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#EbsStatusSummary": {
      type: "structure",
      members: {
        Details: {
          target: "com.amazonaws.ec2#EbsStatusDetailsList",
          locationName: "details",
        },
        Status: {
          target: "com.amazonaws.ec2#SummaryStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#EbsStatusDetailsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#EbsStatusDetails",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#EbsStatusDetails": {
      type: "structure",
      members: {
        ImpairedSince: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "impairedSince",
        },
        Name: {
          target: "com.amazonaws.ec2#StatusName",
          locationName: "name",
        },
        Status: {
          target: "com.amazonaws.ec2#StatusType",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTopologyMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeInstanceTopologyInstanceIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceId",
      },
    },
    "com.amazonaws.ec2#DescribeInstanceTopologyGroupNameSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PlacementGroupName",
      },
    },
    "com.amazonaws.ec2#InstanceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceTopology",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceTopology": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        NetworkNodes: {
          target: "com.amazonaws.ec2#NetworkNodesList",
          locationName: "networkNodeSet",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        ZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "zoneId",
        },
        CapacityBlockId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityBlockId",
        },
      },
    },
    "com.amazonaws.ec2#NetworkNodesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DITOMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceTypeOfferingsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceTypeOffering",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceTypeOffering": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        LocationType: {
          target: "com.amazonaws.ec2#LocationType",
          locationName: "locationType",
        },
        Location: {
          target: "com.amazonaws.ec2#Location",
          locationName: "location",
        },
      },
    },
    "com.amazonaws.ec2#Location": {
      type: "string",
    },
    "com.amazonaws.ec2#RequestInstanceTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceType",
      },
    },
    "com.amazonaws.ec2#DITMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceTypeInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceTypeInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceTypeInfo": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        CurrentGeneration: {
          target: "com.amazonaws.ec2#CurrentGenerationFlag",
          locationName: "currentGeneration",
        },
        FreeTierEligible: {
          target: "com.amazonaws.ec2#FreeTierEligibleFlag",
          locationName: "freeTierEligible",
        },
        SupportedUsageClasses: {
          target: "com.amazonaws.ec2#UsageClassTypeList",
          locationName: "supportedUsageClasses",
        },
        SupportedRootDeviceTypes: {
          target: "com.amazonaws.ec2#RootDeviceTypeList",
          locationName: "supportedRootDeviceTypes",
        },
        SupportedVirtualizationTypes: {
          target: "com.amazonaws.ec2#VirtualizationTypeList",
          locationName: "supportedVirtualizationTypes",
        },
        BareMetal: {
          target: "com.amazonaws.ec2#BareMetalFlag",
          locationName: "bareMetal",
        },
        Hypervisor: {
          target: "com.amazonaws.ec2#InstanceTypeHypervisor",
          locationName: "hypervisor",
        },
        ProcessorInfo: {
          target: "com.amazonaws.ec2#ProcessorInfo",
          locationName: "processorInfo",
        },
        VCpuInfo: {
          target: "com.amazonaws.ec2#VCpuInfo",
          locationName: "vCpuInfo",
        },
        MemoryInfo: {
          target: "com.amazonaws.ec2#MemoryInfo",
          locationName: "memoryInfo",
        },
        InstanceStorageSupported: {
          target: "com.amazonaws.ec2#InstanceStorageFlag",
          locationName: "instanceStorageSupported",
        },
        InstanceStorageInfo: {
          target: "com.amazonaws.ec2#InstanceStorageInfo",
          locationName: "instanceStorageInfo",
        },
        EbsInfo: {
          target: "com.amazonaws.ec2#EbsInfo",
          locationName: "ebsInfo",
        },
        NetworkInfo: {
          target: "com.amazonaws.ec2#NetworkInfo",
          locationName: "networkInfo",
        },
        GpuInfo: {
          target: "com.amazonaws.ec2#GpuInfo",
          locationName: "gpuInfo",
        },
        FpgaInfo: {
          target: "com.amazonaws.ec2#FpgaInfo",
          locationName: "fpgaInfo",
        },
        PlacementGroupInfo: {
          target: "com.amazonaws.ec2#PlacementGroupInfo",
          locationName: "placementGroupInfo",
        },
        InferenceAcceleratorInfo: {
          target: "com.amazonaws.ec2#InferenceAcceleratorInfo",
          locationName: "inferenceAcceleratorInfo",
        },
        HibernationSupported: {
          target: "com.amazonaws.ec2#HibernationFlag",
          locationName: "hibernationSupported",
        },
        BurstablePerformanceSupported: {
          target: "com.amazonaws.ec2#BurstablePerformanceFlag",
          locationName: "burstablePerformanceSupported",
        },
        DedicatedHostsSupported: {
          target: "com.amazonaws.ec2#DedicatedHostFlag",
          locationName: "dedicatedHostsSupported",
        },
        AutoRecoverySupported: {
          target: "com.amazonaws.ec2#AutoRecoveryFlag",
          locationName: "autoRecoverySupported",
        },
        SupportedBootModes: {
          target: "com.amazonaws.ec2#BootModeTypeList",
          locationName: "supportedBootModes",
        },
        NitroEnclavesSupport: {
          target: "com.amazonaws.ec2#NitroEnclavesSupport",
          locationName: "nitroEnclavesSupport",
        },
        NitroTpmSupport: {
          target: "com.amazonaws.ec2#NitroTpmSupport",
          locationName: "nitroTpmSupport",
        },
        NitroTpmInfo: {
          target: "com.amazonaws.ec2#NitroTpmInfo",
          locationName: "nitroTpmInfo",
        },
        MediaAcceleratorInfo: {
          target: "com.amazonaws.ec2#MediaAcceleratorInfo",
          locationName: "mediaAcceleratorInfo",
        },
        NeuronInfo: {
          target: "com.amazonaws.ec2#NeuronInfo",
          locationName: "neuronInfo",
        },
        PhcSupport: {
          target: "com.amazonaws.ec2#PhcSupport",
          locationName: "phcSupport",
        },
        RebootMigrationSupport: {
          target: "com.amazonaws.ec2#RebootMigrationSupport",
          locationName: "rebootMigrationSupport",
        },
      },
    },
    "com.amazonaws.ec2#CurrentGenerationFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#FreeTierEligibleFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#UsageClassTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#UsageClassType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#UsageClassType": {
      type: "enum",
    },
    "com.amazonaws.ec2#RootDeviceTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RootDeviceType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RootDeviceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#VirtualizationTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VirtualizationType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#BareMetalFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#InstanceTypeHypervisor": {
      type: "enum",
    },
    "com.amazonaws.ec2#ProcessorInfo": {
      type: "structure",
      members: {
        SupportedArchitectures: {
          target: "com.amazonaws.ec2#ArchitectureTypeList",
          locationName: "supportedArchitectures",
        },
        SustainedClockSpeedInGhz: {
          target: "com.amazonaws.ec2#ProcessorSustainedClockSpeed",
          locationName: "sustainedClockSpeedInGhz",
        },
        SupportedFeatures: {
          target: "com.amazonaws.ec2#SupportedAdditionalProcessorFeatureList",
          locationName: "supportedFeatures",
        },
        Manufacturer: {
          target: "com.amazonaws.ec2#CpuManufacturerName",
          locationName: "manufacturer",
        },
      },
    },
    "com.amazonaws.ec2#ArchitectureTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ArchitectureType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ArchitectureType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ProcessorSustainedClockSpeed": {
      type: "double",
    },
    "com.amazonaws.ec2#SupportedAdditionalProcessorFeatureList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SupportedAdditionalProcessorFeature",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SupportedAdditionalProcessorFeature": {
      type: "enum",
    },
    "com.amazonaws.ec2#CpuManufacturerName": {
      type: "string",
    },
    "com.amazonaws.ec2#VCpuInfo": {
      type: "structure",
      members: {
        DefaultVCpus: {
          target: "com.amazonaws.ec2#VCpuCount",
          locationName: "defaultVCpus",
        },
        DefaultCores: {
          target: "com.amazonaws.ec2#CoreCount",
          locationName: "defaultCores",
        },
        DefaultThreadsPerCore: {
          target: "com.amazonaws.ec2#ThreadsPerCore",
          locationName: "defaultThreadsPerCore",
        },
        ValidCores: {
          target: "com.amazonaws.ec2#CoreCountList",
          locationName: "validCores",
        },
        ValidThreadsPerCore: {
          target: "com.amazonaws.ec2#ThreadsPerCoreList",
          locationName: "validThreadsPerCore",
        },
      },
    },
    "com.amazonaws.ec2#VCpuCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#CoreCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#ThreadsPerCore": {
      type: "integer",
    },
    "com.amazonaws.ec2#CoreCountList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CoreCount",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ThreadsPerCoreList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ThreadsPerCore",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MemoryInfo": {
      type: "structure",
      members: {
        SizeInMiB: {
          target: "com.amazonaws.ec2#MemorySize",
          locationName: "sizeInMiB",
        },
      },
    },
    "com.amazonaws.ec2#MemorySize": {
      type: "long",
    },
    "com.amazonaws.ec2#InstanceStorageFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#InstanceStorageInfo": {
      type: "structure",
      members: {
        TotalSizeInGB: {
          target: "com.amazonaws.ec2#DiskSize",
          locationName: "totalSizeInGB",
        },
        Disks: {
          target: "com.amazonaws.ec2#DiskInfoList",
          locationName: "disks",
        },
        NvmeSupport: {
          target: "com.amazonaws.ec2#EphemeralNvmeSupport",
          locationName: "nvmeSupport",
        },
        EncryptionSupport: {
          target: "com.amazonaws.ec2#InstanceStorageEncryptionSupport",
          locationName: "encryptionSupport",
        },
      },
    },
    "com.amazonaws.ec2#DiskSize": {
      type: "long",
    },
    "com.amazonaws.ec2#DiskInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DiskInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DiskInfo": {
      type: "structure",
      members: {
        SizeInGB: {
          target: "com.amazonaws.ec2#DiskSize",
          locationName: "sizeInGB",
        },
        Count: {
          target: "com.amazonaws.ec2#DiskCount",
          locationName: "count",
        },
        Type: {
          target: "com.amazonaws.ec2#DiskType",
          locationName: "type",
        },
      },
    },
    "com.amazonaws.ec2#DiskCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#DiskType": {
      type: "enum",
    },
    "com.amazonaws.ec2#EphemeralNvmeSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceStorageEncryptionSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#EbsInfo": {
      type: "structure",
      members: {
        EbsOptimizedSupport: {
          target: "com.amazonaws.ec2#EbsOptimizedSupport",
          locationName: "ebsOptimizedSupport",
        },
        EncryptionSupport: {
          target: "com.amazonaws.ec2#EbsEncryptionSupport",
          locationName: "encryptionSupport",
        },
        EbsOptimizedInfo: {
          target: "com.amazonaws.ec2#EbsOptimizedInfo",
          locationName: "ebsOptimizedInfo",
        },
        NvmeSupport: {
          target: "com.amazonaws.ec2#EbsNvmeSupport",
          locationName: "nvmeSupport",
        },
      },
    },
    "com.amazonaws.ec2#EbsOptimizedSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#EbsEncryptionSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#EbsOptimizedInfo": {
      type: "structure",
      members: {
        BaselineBandwidthInMbps: {
          target: "com.amazonaws.ec2#BaselineBandwidthInMbps",
          locationName: "baselineBandwidthInMbps",
        },
        BaselineThroughputInMBps: {
          target: "com.amazonaws.ec2#BaselineThroughputInMBps",
          locationName: "baselineThroughputInMBps",
        },
        BaselineIops: {
          target: "com.amazonaws.ec2#BaselineIops",
          locationName: "baselineIops",
        },
        MaximumBandwidthInMbps: {
          target: "com.amazonaws.ec2#MaximumBandwidthInMbps",
          locationName: "maximumBandwidthInMbps",
        },
        MaximumThroughputInMBps: {
          target: "com.amazonaws.ec2#MaximumThroughputInMBps",
          locationName: "maximumThroughputInMBps",
        },
        MaximumIops: {
          target: "com.amazonaws.ec2#MaximumIops",
          locationName: "maximumIops",
        },
      },
    },
    "com.amazonaws.ec2#BaselineBandwidthInMbps": {
      type: "integer",
    },
    "com.amazonaws.ec2#BaselineThroughputInMBps": {
      type: "double",
    },
    "com.amazonaws.ec2#BaselineIops": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaximumBandwidthInMbps": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaximumThroughputInMBps": {
      type: "double",
    },
    "com.amazonaws.ec2#MaximumIops": {
      type: "integer",
    },
    "com.amazonaws.ec2#EbsNvmeSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInfo": {
      type: "structure",
      members: {
        NetworkPerformance: {
          target: "com.amazonaws.ec2#NetworkPerformance",
          locationName: "networkPerformance",
        },
        MaximumNetworkInterfaces: {
          target: "com.amazonaws.ec2#MaxNetworkInterfaces",
          locationName: "maximumNetworkInterfaces",
        },
        MaximumNetworkCards: {
          target: "com.amazonaws.ec2#MaximumNetworkCards",
          locationName: "maximumNetworkCards",
        },
        DefaultNetworkCardIndex: {
          target: "com.amazonaws.ec2#DefaultNetworkCardIndex",
          locationName: "defaultNetworkCardIndex",
        },
        NetworkCards: {
          target: "com.amazonaws.ec2#NetworkCardInfoList",
          locationName: "networkCards",
        },
        Ipv4AddressesPerInterface: {
          target: "com.amazonaws.ec2#MaxIpv4AddrPerInterface",
          locationName: "ipv4AddressesPerInterface",
        },
        Ipv6AddressesPerInterface: {
          target: "com.amazonaws.ec2#MaxIpv6AddrPerInterface",
          locationName: "ipv6AddressesPerInterface",
        },
        Ipv6Supported: {
          target: "com.amazonaws.ec2#Ipv6Flag",
          locationName: "ipv6Supported",
        },
        EnaSupport: {
          target: "com.amazonaws.ec2#EnaSupport",
          locationName: "enaSupport",
        },
        EfaSupported: {
          target: "com.amazonaws.ec2#EfaSupportedFlag",
          locationName: "efaSupported",
        },
        EfaInfo: {
          target: "com.amazonaws.ec2#EfaInfo",
          locationName: "efaInfo",
        },
        EncryptionInTransitSupported: {
          target: "com.amazonaws.ec2#EncryptionInTransitSupported",
          locationName: "encryptionInTransitSupported",
        },
        EnaSrdSupported: {
          target: "com.amazonaws.ec2#EnaSrdSupported",
          locationName: "enaSrdSupported",
        },
        BandwidthWeightings: {
          target: "com.amazonaws.ec2#BandwidthWeightingTypeList",
          locationName: "bandwidthWeightings",
        },
        FlexibleEnaQueuesSupport: {
          target: "com.amazonaws.ec2#FlexibleEnaQueuesSupport",
          locationName: "flexibleEnaQueuesSupport",
        },
      },
    },
    "com.amazonaws.ec2#NetworkPerformance": {
      type: "string",
    },
    "com.amazonaws.ec2#MaxNetworkInterfaces": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaximumNetworkCards": {
      type: "integer",
    },
    "com.amazonaws.ec2#DefaultNetworkCardIndex": {
      type: "integer",
    },
    "com.amazonaws.ec2#NetworkCardInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkCardInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkCardInfo": {
      type: "structure",
      members: {
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#NetworkCardIndex",
          locationName: "networkCardIndex",
        },
        NetworkPerformance: {
          target: "com.amazonaws.ec2#NetworkPerformance",
          locationName: "networkPerformance",
        },
        MaximumNetworkInterfaces: {
          target: "com.amazonaws.ec2#MaxNetworkInterfaces",
          locationName: "maximumNetworkInterfaces",
        },
        BaselineBandwidthInGbps: {
          target: "com.amazonaws.ec2#BaselineBandwidthInGbps",
          locationName: "baselineBandwidthInGbps",
        },
        PeakBandwidthInGbps: {
          target: "com.amazonaws.ec2#PeakBandwidthInGbps",
          locationName: "peakBandwidthInGbps",
        },
        DefaultEnaQueueCountPerInterface: {
          target: "com.amazonaws.ec2#DefaultEnaQueueCountPerInterface",
          locationName: "defaultEnaQueueCountPerInterface",
        },
        MaximumEnaQueueCount: {
          target: "com.amazonaws.ec2#MaximumEnaQueueCount",
          locationName: "maximumEnaQueueCount",
        },
        MaximumEnaQueueCountPerInterface: {
          target: "com.amazonaws.ec2#MaximumEnaQueueCountPerInterface",
          locationName: "maximumEnaQueueCountPerInterface",
        },
      },
    },
    "com.amazonaws.ec2#NetworkCardIndex": {
      type: "integer",
    },
    "com.amazonaws.ec2#BaselineBandwidthInGbps": {
      type: "double",
    },
    "com.amazonaws.ec2#PeakBandwidthInGbps": {
      type: "double",
    },
    "com.amazonaws.ec2#DefaultEnaQueueCountPerInterface": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaximumEnaQueueCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaximumEnaQueueCountPerInterface": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaxIpv4AddrPerInterface": {
      type: "integer",
    },
    "com.amazonaws.ec2#MaxIpv6AddrPerInterface": {
      type: "integer",
    },
    "com.amazonaws.ec2#Ipv6Flag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#EnaSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#EfaSupportedFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#EfaInfo": {
      type: "structure",
      members: {
        MaximumEfaInterfaces: {
          target: "com.amazonaws.ec2#MaximumEfaInterfaces",
          locationName: "maximumEfaInterfaces",
        },
      },
    },
    "com.amazonaws.ec2#MaximumEfaInterfaces": {
      type: "integer",
    },
    "com.amazonaws.ec2#EncryptionInTransitSupported": {
      type: "boolean",
    },
    "com.amazonaws.ec2#EnaSrdSupported": {
      type: "boolean",
    },
    "com.amazonaws.ec2#BandwidthWeightingTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BandwidthWeightingType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#BandwidthWeightingType": {
      type: "enum",
    },
    "com.amazonaws.ec2#FlexibleEnaQueuesSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#GpuInfo": {
      type: "structure",
      members: {
        Gpus: {
          target: "com.amazonaws.ec2#GpuDeviceInfoList",
          locationName: "gpus",
        },
        TotalGpuMemoryInMiB: {
          target: "com.amazonaws.ec2#totalGpuMemory",
          locationName: "totalGpuMemoryInMiB",
        },
      },
    },
    "com.amazonaws.ec2#GpuDeviceInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#GpuDeviceInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#GpuDeviceInfo": {
      type: "structure",
      members: {
        Name: {
          target: "com.amazonaws.ec2#GpuDeviceName",
          locationName: "name",
        },
        Manufacturer: {
          target: "com.amazonaws.ec2#GpuDeviceManufacturerName",
          locationName: "manufacturer",
        },
        Count: {
          target: "com.amazonaws.ec2#GpuDeviceCount",
          locationName: "count",
        },
        MemoryInfo: {
          target: "com.amazonaws.ec2#GpuDeviceMemoryInfo",
          locationName: "memoryInfo",
        },
      },
    },
    "com.amazonaws.ec2#GpuDeviceName": {
      type: "string",
    },
    "com.amazonaws.ec2#GpuDeviceManufacturerName": {
      type: "string",
    },
    "com.amazonaws.ec2#GpuDeviceCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#GpuDeviceMemoryInfo": {
      type: "structure",
      members: {
        SizeInMiB: {
          target: "com.amazonaws.ec2#GpuDeviceMemorySize",
          locationName: "sizeInMiB",
        },
      },
    },
    "com.amazonaws.ec2#GpuDeviceMemorySize": {
      type: "integer",
    },
    "com.amazonaws.ec2#totalGpuMemory": {
      type: "integer",
    },
    "com.amazonaws.ec2#FpgaInfo": {
      type: "structure",
      members: {
        Fpgas: {
          target: "com.amazonaws.ec2#FpgaDeviceInfoList",
          locationName: "fpgas",
        },
        TotalFpgaMemoryInMiB: {
          target: "com.amazonaws.ec2#totalFpgaMemory",
          locationName: "totalFpgaMemoryInMiB",
        },
      },
    },
    "com.amazonaws.ec2#FpgaDeviceInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#FpgaDeviceInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#FpgaDeviceInfo": {
      type: "structure",
      members: {
        Name: {
          target: "com.amazonaws.ec2#FpgaDeviceName",
          locationName: "name",
        },
        Manufacturer: {
          target: "com.amazonaws.ec2#FpgaDeviceManufacturerName",
          locationName: "manufacturer",
        },
        Count: {
          target: "com.amazonaws.ec2#FpgaDeviceCount",
          locationName: "count",
        },
        MemoryInfo: {
          target: "com.amazonaws.ec2#FpgaDeviceMemoryInfo",
          locationName: "memoryInfo",
        },
      },
    },
    "com.amazonaws.ec2#FpgaDeviceName": {
      type: "string",
    },
    "com.amazonaws.ec2#FpgaDeviceManufacturerName": {
      type: "string",
    },
    "com.amazonaws.ec2#FpgaDeviceCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#FpgaDeviceMemoryInfo": {
      type: "structure",
      members: {
        SizeInMiB: {
          target: "com.amazonaws.ec2#FpgaDeviceMemorySize",
          locationName: "sizeInMiB",
        },
      },
    },
    "com.amazonaws.ec2#FpgaDeviceMemorySize": {
      type: "integer",
    },
    "com.amazonaws.ec2#totalFpgaMemory": {
      type: "integer",
    },
    "com.amazonaws.ec2#PlacementGroupInfo": {
      type: "structure",
      members: {
        SupportedStrategies: {
          target: "com.amazonaws.ec2#PlacementGroupStrategyList",
          locationName: "supportedStrategies",
        },
      },
    },
    "com.amazonaws.ec2#PlacementGroupStrategyList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PlacementGroupStrategy",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PlacementGroupStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#InferenceAcceleratorInfo": {
      type: "structure",
      members: {
        Accelerators: {
          target: "com.amazonaws.ec2#InferenceDeviceInfoList",
          locationName: "accelerators",
        },
        TotalInferenceMemoryInMiB: {
          target: "com.amazonaws.ec2#totalInferenceMemory",
          locationName: "totalInferenceMemoryInMiB",
        },
      },
    },
    "com.amazonaws.ec2#InferenceDeviceInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InferenceDeviceInfo",
      },
    },
    "com.amazonaws.ec2#InferenceDeviceInfo": {
      type: "structure",
      members: {
        Count: {
          target: "com.amazonaws.ec2#InferenceDeviceCount",
          locationName: "count",
        },
        Name: {
          target: "com.amazonaws.ec2#InferenceDeviceName",
          locationName: "name",
        },
        Manufacturer: {
          target: "com.amazonaws.ec2#InferenceDeviceManufacturerName",
          locationName: "manufacturer",
        },
        MemoryInfo: {
          target: "com.amazonaws.ec2#InferenceDeviceMemoryInfo",
          locationName: "memoryInfo",
        },
      },
    },
    "com.amazonaws.ec2#InferenceDeviceCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#InferenceDeviceName": {
      type: "string",
    },
    "com.amazonaws.ec2#InferenceDeviceManufacturerName": {
      type: "string",
    },
    "com.amazonaws.ec2#InferenceDeviceMemoryInfo": {
      type: "structure",
      members: {
        SizeInMiB: {
          target: "com.amazonaws.ec2#InferenceDeviceMemorySize",
          locationName: "sizeInMiB",
        },
      },
    },
    "com.amazonaws.ec2#InferenceDeviceMemorySize": {
      type: "integer",
    },
    "com.amazonaws.ec2#totalInferenceMemory": {
      type: "integer",
    },
    "com.amazonaws.ec2#HibernationFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#BurstablePerformanceFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#DedicatedHostFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#AutoRecoveryFlag": {
      type: "boolean",
    },
    "com.amazonaws.ec2#BootModeTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#BootModeType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#BootModeType": {
      type: "enum",
    },
    "com.amazonaws.ec2#NitroEnclavesSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#NitroTpmSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#NitroTpmInfo": {
      type: "structure",
      members: {
        SupportedVersions: {
          target: "com.amazonaws.ec2#NitroTpmSupportedVersionsList",
          locationName: "supportedVersions",
        },
      },
    },
    "com.amazonaws.ec2#NitroTpmSupportedVersionsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NitroTpmSupportedVersionType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NitroTpmSupportedVersionType": {
      type: "string",
    },
    "com.amazonaws.ec2#MediaAcceleratorInfo": {
      type: "structure",
      members: {
        Accelerators: {
          target: "com.amazonaws.ec2#MediaDeviceInfoList",
          locationName: "accelerators",
        },
        TotalMediaMemoryInMiB: {
          target: "com.amazonaws.ec2#TotalMediaMemory",
          locationName: "totalMediaMemoryInMiB",
        },
      },
    },
    "com.amazonaws.ec2#MediaDeviceInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#MediaDeviceInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MediaDeviceInfo": {
      type: "structure",
      members: {
        Count: {
          target: "com.amazonaws.ec2#MediaDeviceCount",
          locationName: "count",
        },
        Name: {
          target: "com.amazonaws.ec2#MediaDeviceName",
          locationName: "name",
        },
        Manufacturer: {
          target: "com.amazonaws.ec2#MediaDeviceManufacturerName",
          locationName: "manufacturer",
        },
        MemoryInfo: {
          target: "com.amazonaws.ec2#MediaDeviceMemoryInfo",
          locationName: "memoryInfo",
        },
      },
    },
    "com.amazonaws.ec2#MediaDeviceCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#MediaDeviceName": {
      type: "string",
    },
    "com.amazonaws.ec2#MediaDeviceManufacturerName": {
      type: "string",
    },
    "com.amazonaws.ec2#MediaDeviceMemoryInfo": {
      type: "structure",
      members: {
        SizeInMiB: {
          target: "com.amazonaws.ec2#MediaDeviceMemorySize",
          locationName: "sizeInMiB",
        },
      },
    },
    "com.amazonaws.ec2#MediaDeviceMemorySize": {
      type: "integer",
    },
    "com.amazonaws.ec2#TotalMediaMemory": {
      type: "integer",
    },
    "com.amazonaws.ec2#NeuronInfo": {
      type: "structure",
      members: {
        NeuronDevices: {
          target: "com.amazonaws.ec2#NeuronDeviceInfoList",
          locationName: "neuronDevices",
        },
        TotalNeuronDeviceMemoryInMiB: {
          target: "com.amazonaws.ec2#TotalNeuronMemory",
          locationName: "totalNeuronDeviceMemoryInMiB",
        },
      },
    },
    "com.amazonaws.ec2#NeuronDeviceInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NeuronDeviceInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NeuronDeviceInfo": {
      type: "structure",
      members: {
        Count: {
          target: "com.amazonaws.ec2#NeuronDeviceCount",
          locationName: "count",
        },
        Name: {
          target: "com.amazonaws.ec2#NeuronDeviceName",
          locationName: "name",
        },
        CoreInfo: {
          target: "com.amazonaws.ec2#NeuronDeviceCoreInfo",
          locationName: "coreInfo",
        },
        MemoryInfo: {
          target: "com.amazonaws.ec2#NeuronDeviceMemoryInfo",
          locationName: "memoryInfo",
        },
      },
    },
    "com.amazonaws.ec2#NeuronDeviceCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#NeuronDeviceName": {
      type: "string",
    },
    "com.amazonaws.ec2#NeuronDeviceCoreInfo": {
      type: "structure",
      members: {
        Count: {
          target: "com.amazonaws.ec2#NeuronDeviceCoreCount",
          locationName: "count",
        },
        Version: {
          target: "com.amazonaws.ec2#NeuronDeviceCoreVersion",
          locationName: "version",
        },
      },
    },
    "com.amazonaws.ec2#NeuronDeviceCoreCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#NeuronDeviceCoreVersion": {
      type: "integer",
    },
    "com.amazonaws.ec2#NeuronDeviceMemoryInfo": {
      type: "structure",
      members: {
        SizeInMiB: {
          target: "com.amazonaws.ec2#NeuronDeviceMemorySize",
          locationName: "sizeInMiB",
        },
      },
    },
    "com.amazonaws.ec2#NeuronDeviceMemorySize": {
      type: "integer",
    },
    "com.amazonaws.ec2#TotalNeuronMemory": {
      type: "integer",
    },
    "com.amazonaws.ec2#PhcSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#RebootMigrationSupport": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Reservation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Instance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Instance": {
      type: "structure",
      members: {
        Architecture: {
          target: "com.amazonaws.ec2#ArchitectureValues",
          locationName: "architecture",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#InstanceBlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        EnaSupport: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSupport",
        },
        Hypervisor: {
          target: "com.amazonaws.ec2#HypervisorType",
          locationName: "hypervisor",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfile",
          locationName: "iamInstanceProfile",
        },
        InstanceLifecycle: {
          target: "com.amazonaws.ec2#InstanceLifecycleType",
          locationName: "instanceLifecycle",
        },
        ElasticGpuAssociations: {
          target: "com.amazonaws.ec2#ElasticGpuAssociationList",
          locationName: "elasticGpuAssociationSet",
        },
        ElasticInferenceAcceleratorAssociations: {
          target:
            "com.amazonaws.ec2#ElasticInferenceAcceleratorAssociationList",
          locationName: "elasticInferenceAcceleratorAssociationSet",
        },
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceList",
          locationName: "networkInterfaceSet",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        RootDeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "rootDeviceName",
        },
        RootDeviceType: {
          target: "com.amazonaws.ec2#DeviceType",
          locationName: "rootDeviceType",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "sourceDestCheck",
        },
        SpotInstanceRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotInstanceRequestId",
        },
        SriovNetSupport: {
          target: "com.amazonaws.ec2#String",
          locationName: "sriovNetSupport",
        },
        StateReason: {
          target: "com.amazonaws.ec2#StateReason",
          locationName: "stateReason",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VirtualizationType: {
          target: "com.amazonaws.ec2#VirtualizationType",
          locationName: "virtualizationType",
        },
        CpuOptions: {
          target: "com.amazonaws.ec2#CpuOptions",
          locationName: "cpuOptions",
        },
        CapacityBlockId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityBlockId",
        },
        CapacityReservationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "capacityReservationId",
        },
        CapacityReservationSpecification: {
          target: "com.amazonaws.ec2#CapacityReservationSpecificationResponse",
          locationName: "capacityReservationSpecification",
        },
        HibernationOptions: {
          target: "com.amazonaws.ec2#HibernationOptions",
          locationName: "hibernationOptions",
        },
        Licenses: {
          target: "com.amazonaws.ec2#LicenseList",
          locationName: "licenseSet",
        },
        MetadataOptions: {
          target: "com.amazonaws.ec2#InstanceMetadataOptionsResponse",
          locationName: "metadataOptions",
        },
        EnclaveOptions: {
          target: "com.amazonaws.ec2#EnclaveOptions",
          locationName: "enclaveOptions",
        },
        BootMode: {
          target: "com.amazonaws.ec2#BootModeValues",
          locationName: "bootMode",
        },
        PlatformDetails: {
          target: "com.amazonaws.ec2#String",
          locationName: "platformDetails",
        },
        UsageOperation: {
          target: "com.amazonaws.ec2#String",
          locationName: "usageOperation",
        },
        UsageOperationUpdateTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "usageOperationUpdateTime",
        },
        PrivateDnsNameOptions: {
          target: "com.amazonaws.ec2#PrivateDnsNameOptionsResponse",
          locationName: "privateDnsNameOptions",
        },
        Ipv6Address: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Address",
        },
        TpmSupport: {
          target: "com.amazonaws.ec2#String",
          locationName: "tpmSupport",
        },
        MaintenanceOptions: {
          target: "com.amazonaws.ec2#InstanceMaintenanceOptions",
          locationName: "maintenanceOptions",
        },
        CurrentInstanceBootMode: {
          target: "com.amazonaws.ec2#InstanceBootModeValues",
          locationName: "currentInstanceBootMode",
        },
        NetworkPerformanceOptions: {
          target: "com.amazonaws.ec2#InstanceNetworkPerformanceOptions",
          locationName: "networkPerformanceOptions",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        State: {
          target: "com.amazonaws.ec2#InstanceState",
          locationName: "instanceState",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PublicDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "dnsName",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "reason",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        AmiLaunchIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "amiLaunchIndex",
        },
        ProductCodes: {
          target: "com.amazonaws.ec2#ProductCodeList",
          locationName: "productCodes",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        LaunchTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "launchTime",
        },
        Placement: {
          target: "com.amazonaws.ec2#Placement",
          locationName: "placement",
        },
        KernelId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kernelId",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ramdiskId",
        },
        Platform: {
          target: "com.amazonaws.ec2#PlatformValues",
          locationName: "platform",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#Monitoring",
          locationName: "monitoring",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        PublicIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipAddress",
        },
      },
    },
    "com.amazonaws.ec2#InstanceLifecycleType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ElasticGpuAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticGpuAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticGpuAssociation": {
      type: "structure",
      members: {
        ElasticGpuId: {
          target: "com.amazonaws.ec2#ElasticGpuId",
          locationName: "elasticGpuId",
        },
        ElasticGpuAssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticGpuAssociationId",
        },
        ElasticGpuAssociationState: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticGpuAssociationState",
        },
        ElasticGpuAssociationTime: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticGpuAssociationTime",
        },
      },
    },
    "com.amazonaws.ec2#ElasticInferenceAcceleratorAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticInferenceAcceleratorAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticInferenceAcceleratorAssociation": {
      type: "structure",
      members: {
        ElasticInferenceAcceleratorArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticInferenceAcceleratorArn",
        },
        ElasticInferenceAcceleratorAssociationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticInferenceAcceleratorAssociationId",
        },
        ElasticInferenceAcceleratorAssociationState: {
          target: "com.amazonaws.ec2#String",
          locationName: "elasticInferenceAcceleratorAssociationState",
        },
        ElasticInferenceAcceleratorAssociationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "elasticInferenceAcceleratorAssociationTime",
        },
      },
    },
    "com.amazonaws.ec2#InstanceNetworkInterfaceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceNetworkInterface",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceNetworkInterface": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceAssociation",
          locationName: "association",
        },
        Attachment: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceAttachment",
          locationName: "attachment",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        Groups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#InstanceIpv6AddressList",
          locationName: "ipv6AddressesSet",
        },
        MacAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "macAddress",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#InstancePrivateIpAddressList",
          locationName: "privateIpAddressesSet",
        },
        SourceDestCheck: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "sourceDestCheck",
        },
        Status: {
          target: "com.amazonaws.ec2#NetworkInterfaceStatus",
          locationName: "status",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        InterfaceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "interfaceType",
        },
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#InstanceIpv4PrefixList",
          locationName: "ipv4PrefixSet",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#InstanceIpv6PrefixList",
          locationName: "ipv6PrefixSet",
        },
        ConnectionTrackingConfiguration: {
          target: "com.amazonaws.ec2#ConnectionTrackingSpecificationResponse",
          locationName: "connectionTrackingConfiguration",
        },
        Operator: {
          target: "com.amazonaws.ec2#OperatorResponse",
          locationName: "operator",
        },
      },
    },
    "com.amazonaws.ec2#InstanceNetworkInterfaceAssociation": {
      type: "structure",
      members: {
        CarrierIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "carrierIp",
        },
        CustomerOwnedIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "customerOwnedIp",
        },
        IpOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipOwnerId",
        },
        PublicDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicDnsName",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
      },
    },
    "com.amazonaws.ec2#InstanceNetworkInterfaceAttachment": {
      type: "structure",
      members: {
        AttachTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "attachTime",
        },
        AttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "attachmentId",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        DeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "deviceIndex",
        },
        Status: {
          target: "com.amazonaws.ec2#AttachmentStatus",
          locationName: "status",
        },
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "networkCardIndex",
        },
        EnaSrdSpecification: {
          target: "com.amazonaws.ec2#InstanceAttachmentEnaSrdSpecification",
          locationName: "enaSrdSpecification",
        },
        EnaQueueCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "enaQueueCount",
        },
      },
    },
    "com.amazonaws.ec2#InstanceAttachmentEnaSrdSpecification": {
      type: "structure",
      members: {
        EnaSrdEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSrdEnabled",
        },
        EnaSrdUdpSpecification: {
          target: "com.amazonaws.ec2#InstanceAttachmentEnaSrdUdpSpecification",
          locationName: "enaSrdUdpSpecification",
        },
      },
    },
    "com.amazonaws.ec2#InstanceAttachmentEnaSrdUdpSpecification": {
      type: "structure",
      members: {
        EnaSrdUdpEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enaSrdUdpEnabled",
        },
      },
    },
    "com.amazonaws.ec2#InstancePrivateIpAddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstancePrivateIpAddress",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstancePrivateIpAddress": {
      type: "structure",
      members: {
        Association: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceAssociation",
          locationName: "association",
        },
        Primary: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "primary",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIpv4PrefixList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceIpv4Prefix",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceIpv4Prefix": {
      type: "structure",
      members: {
        Ipv4Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv4Prefix",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIpv6PrefixList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceIpv6Prefix",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceIpv6Prefix": {
      type: "structure",
      members: {
        Ipv6Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Prefix",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionTrackingSpecificationResponse": {
      type: "structure",
      members: {
        TcpEstablishedTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "tcpEstablishedTimeout",
        },
        UdpStreamTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "udpStreamTimeout",
        },
        UdpTimeout: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "udpTimeout",
        },
      },
    },
    "com.amazonaws.ec2#CpuOptions": {
      type: "structure",
      members: {
        CoreCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "coreCount",
        },
        ThreadsPerCore: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "threadsPerCore",
        },
        AmdSevSnp: {
          target: "com.amazonaws.ec2#AmdSevSnpSpecification",
          locationName: "amdSevSnp",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationSpecificationResponse": {
      type: "structure",
      members: {
        CapacityReservationPreference: {
          target: "com.amazonaws.ec2#CapacityReservationPreference",
          locationName: "capacityReservationPreference",
        },
        CapacityReservationTarget: {
          target: "com.amazonaws.ec2#CapacityReservationTargetResponse",
          locationName: "capacityReservationTarget",
        },
      },
    },
    "com.amazonaws.ec2#HibernationOptions": {
      type: "structure",
      members: {
        Configured: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "configured",
        },
      },
    },
    "com.amazonaws.ec2#LicenseList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LicenseConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LicenseConfiguration": {
      type: "structure",
      members: {
        LicenseConfigurationArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "licenseConfigurationArn",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMetadataOptionsResponse": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#InstanceMetadataOptionsState",
          locationName: "state",
        },
        HttpTokens: {
          target: "com.amazonaws.ec2#HttpTokensState",
          locationName: "httpTokens",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "httpPutResponseHopLimit",
        },
        HttpEndpoint: {
          target: "com.amazonaws.ec2#InstanceMetadataEndpointState",
          locationName: "httpEndpoint",
        },
        HttpProtocolIpv6: {
          target: "com.amazonaws.ec2#InstanceMetadataProtocolState",
          locationName: "httpProtocolIpv6",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#InstanceMetadataTagsState",
          locationName: "instanceMetadataTags",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMetadataOptionsState": {
      type: "enum",
    },
    "com.amazonaws.ec2#HttpTokensState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceMetadataEndpointState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceMetadataProtocolState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceMetadataTagsState": {
      type: "enum",
    },
    "com.amazonaws.ec2#PrivateDnsNameOptionsResponse": {
      type: "structure",
      members: {
        HostnameType: {
          target: "com.amazonaws.ec2#HostnameType",
          locationName: "hostnameType",
        },
        EnableResourceNameDnsARecord: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableResourceNameDnsARecord",
        },
        EnableResourceNameDnsAAAARecord: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enableResourceNameDnsAAAARecord",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMaintenanceOptions": {
      type: "structure",
      members: {
        AutoRecovery: {
          target: "com.amazonaws.ec2#InstanceAutoRecoveryState",
          locationName: "autoRecovery",
        },
        RebootMigration: {
          target: "com.amazonaws.ec2#InstanceRebootMigrationState",
          locationName: "rebootMigration",
        },
      },
    },
    "com.amazonaws.ec2#InstanceAutoRecoveryState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceRebootMigrationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceBootModeValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceNetworkPerformanceOptions": {
      type: "structure",
      members: {
        BandwidthWeighting: {
          target: "com.amazonaws.ec2#InstanceBandwidthWeighting",
          locationName: "bandwidthWeighting",
        },
      },
    },
    "com.amazonaws.ec2#Monitoring": {
      type: "structure",
      members: {
        State: {
          target: "com.amazonaws.ec2#MonitoringState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#MonitoringState": {
      type: "enum",
    },
    "com.amazonaws.ec2#DescribeInternetGatewaysMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InternetGatewayIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InternetGatewayId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InternetGatewayList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InternetGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeIpamByoasnMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ByoasnSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Byoasn",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#IpamExternalResourceVerificationTokenSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamExternalResourceVerificationToken",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPoolSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamPool",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamResourceDiscoverySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamResourceDiscovery",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamResourceDiscoveryAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamResourceDiscoveryAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamScopeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamScope",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipam",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6PoolIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6PoolEc2Id",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6PoolMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#Ipv6PoolSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6Pool",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6Pool": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#String",
          locationName: "poolId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        PoolCidrBlocks: {
          target: "com.amazonaws.ec2#PoolCidrBlocksSet",
          locationName: "poolCidrBlockSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#PoolCidrBlocksSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PoolCidrBlock",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PoolCidrBlock": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "poolCidrBlock",
        },
      },
    },
    "com.amazonaws.ec2#KeyNameStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#KeyPairName",
        locationName: "KeyName",
      },
    },
    "com.amazonaws.ec2#KeyPairIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#KeyPairId",
        locationName: "KeyPairId",
      },
    },
    "com.amazonaws.ec2#KeyPairList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#KeyPairInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#KeyPairInfo": {
      type: "structure",
      members: {
        KeyPairId: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyPairId",
        },
        KeyType: {
          target: "com.amazonaws.ec2#KeyType",
          locationName: "keyType",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        PublicKey: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicKey",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createTime",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        KeyFingerprint: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyFingerprint",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateVersionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateVersion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateNameStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateName",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeLaunchTemplatesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#LaunchTemplateSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplate",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet":
      {
        type: "list",
        member: {
          target:
            "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
          locationName: "item",
        },
      },
    "com.amazonaws.ec2#LocalGatewayMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet":
      {
        type: "list",
        member: {
          target:
            "com.amazonaws.ec2#LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
          locationName: "item",
        },
      },
    "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayRouteTableVpcAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayRoutetableId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayRouteTableSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayRouteTable",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroupSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayVirtualInterfaceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayVirtualInterface",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewayIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGatewaySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LocalGateway": {
      type: "structure",
      members: {
        LocalGatewayId: {
          target: "com.amazonaws.ec2#LocalGatewayId",
          locationName: "localGatewayId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#DescribeLockedSnapshotsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SnapshotIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SnapshotId",
        locationName: "SnapshotId",
      },
    },
    "com.amazonaws.ec2#LockedSnapshotsInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LockedSnapshotsInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LockedSnapshotsInfo": {
      type: "structure",
      members: {
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        LockState: {
          target: "com.amazonaws.ec2#LockState",
          locationName: "lockState",
        },
        LockDuration: {
          target: "com.amazonaws.ec2#RetentionPeriodResponseDays",
          locationName: "lockDuration",
        },
        CoolOffPeriod: {
          target: "com.amazonaws.ec2#CoolOffPeriodResponseHours",
          locationName: "coolOffPeriod",
        },
        CoolOffPeriodExpiresOn: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "coolOffPeriodExpiresOn",
        },
        LockCreatedOn: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lockCreatedOn",
        },
        LockDurationStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lockDurationStartTime",
        },
        LockExpiresOn: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lockExpiresOn",
        },
      },
    },
    "com.amazonaws.ec2#LockState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RetentionPeriodResponseDays": {
      type: "integer",
    },
    "com.amazonaws.ec2#CoolOffPeriodResponseHours": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeMacHostsRequestMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#MacHostList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#MacHost",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MacHost": {
      type: "structure",
      members: {
        HostId: {
          target: "com.amazonaws.ec2#DedicatedHostId",
          locationName: "hostId",
        },
        MacOSLatestSupportedVersions: {
          target: "com.amazonaws.ec2#MacOSVersionStringList",
          locationName: "macOSLatestSupportedVersionSet",
        },
      },
    },
    "com.amazonaws.ec2#MacOSVersionStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MacModificationTaskIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#MacModificationTaskId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeMacModificationTasksMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#MacModificationTaskList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#MacModificationTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ManagedPrefixListSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ManagedPrefixList",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeMovingAddressesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#MovingAddressStatusSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#MovingAddressStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MovingAddressStatus": {
      type: "structure",
      members: {
        MoveStatus: {
          target: "com.amazonaws.ec2#MoveStatus",
          locationName: "moveStatus",
        },
        PublicIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIp",
        },
      },
    },
    "com.amazonaws.ec2#MoveStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#DescribeNatGatewaysMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#NatGatewayIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NatGatewayId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NatGatewayList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NatGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeNetworkAclsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#NetworkAclIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkAclId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkAclList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkAcl",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysis": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
          locationName: "networkInsightsAccessScopeAnalysisId",
        },
        NetworkInsightsAccessScopeAnalysisArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "networkInsightsAccessScopeAnalysisArn",
        },
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
          locationName: "networkInsightsAccessScopeId",
        },
        Status: {
          target: "com.amazonaws.ec2#AnalysisStatus",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        WarningMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "warningMessage",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endDate",
        },
        FindingsFound: {
          target: "com.amazonaws.ec2#FindingsFound",
          locationName: "findingsFound",
        },
        AnalyzedEniCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "analyzedEniCount",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#FindingsFound": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAccessScopeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsAccessScope",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAnalysisIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsAnalysisId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAnalysisList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsAnalysis",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsAnalysis": {
      type: "structure",
      members: {
        NetworkInsightsAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAnalysisId",
          locationName: "networkInsightsAnalysisId",
        },
        NetworkInsightsAnalysisArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "networkInsightsAnalysisArn",
        },
        NetworkInsightsPathId: {
          target: "com.amazonaws.ec2#NetworkInsightsPathId",
          locationName: "networkInsightsPathId",
        },
        AdditionalAccounts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "additionalAccountSet",
        },
        FilterInArns: {
          target: "com.amazonaws.ec2#ArnList",
          locationName: "filterInArnSet",
        },
        FilterOutArns: {
          target: "com.amazonaws.ec2#ArnList",
          locationName: "filterOutArnSet",
        },
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        Status: {
          target: "com.amazonaws.ec2#AnalysisStatus",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        WarningMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "warningMessage",
        },
        NetworkPathFound: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "networkPathFound",
        },
        ForwardPathComponents: {
          target: "com.amazonaws.ec2#PathComponentList",
          locationName: "forwardPathComponentSet",
        },
        ReturnPathComponents: {
          target: "com.amazonaws.ec2#PathComponentList",
          locationName: "returnPathComponentSet",
        },
        Explanations: {
          target: "com.amazonaws.ec2#ExplanationList",
          locationName: "explanationSet",
        },
        AlternatePathHints: {
          target: "com.amazonaws.ec2#AlternatePathHintList",
          locationName: "alternatePathHintSet",
        },
        SuggestedAccounts: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "suggestedAccountSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ArnList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ResourceArn",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PathComponentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PathComponent",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PathComponent": {
      type: "structure",
      members: {
        SequenceNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "sequenceNumber",
        },
        AclRule: {
          target: "com.amazonaws.ec2#AnalysisAclRule",
          locationName: "aclRule",
        },
        AttachedTo: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "attachedTo",
        },
        Component: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "component",
        },
        DestinationVpc: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "destinationVpc",
        },
        OutboundHeader: {
          target: "com.amazonaws.ec2#AnalysisPacketHeader",
          locationName: "outboundHeader",
        },
        InboundHeader: {
          target: "com.amazonaws.ec2#AnalysisPacketHeader",
          locationName: "inboundHeader",
        },
        RouteTableRoute: {
          target: "com.amazonaws.ec2#AnalysisRouteTableRoute",
          locationName: "routeTableRoute",
        },
        SecurityGroupRule: {
          target: "com.amazonaws.ec2#AnalysisSecurityGroupRule",
          locationName: "securityGroupRule",
        },
        SourceVpc: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "sourceVpc",
        },
        Subnet: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "subnet",
        },
        Vpc: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpc",
        },
        AdditionalDetails: {
          target: "com.amazonaws.ec2#AdditionalDetailList",
          locationName: "additionalDetailSet",
        },
        TransitGateway: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "transitGateway",
        },
        TransitGatewayRouteTableRoute: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableRoute",
          locationName: "transitGatewayRouteTableRoute",
        },
        Explanations: {
          target: "com.amazonaws.ec2#ExplanationList",
          locationName: "explanationSet",
        },
        ElasticLoadBalancerListener: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "elasticLoadBalancerListener",
        },
        FirewallStatelessRule: {
          target: "com.amazonaws.ec2#FirewallStatelessRule",
          locationName: "firewallStatelessRule",
        },
        FirewallStatefulRule: {
          target: "com.amazonaws.ec2#FirewallStatefulRule",
          locationName: "firewallStatefulRule",
        },
        ServiceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceName",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisAclRule": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        Egress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "egress",
        },
        PortRange: {
          target: "com.amazonaws.ec2#PortRange",
          locationName: "portRange",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#String",
          locationName: "ruleAction",
        },
        RuleNumber: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ruleNumber",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisComponent": {
      type: "structure",
      members: {
        Id: {
          target: "com.amazonaws.ec2#String",
          locationName: "id",
        },
        Arn: {
          target: "com.amazonaws.ec2#String",
          locationName: "arn",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisPacketHeader": {
      type: "structure",
      members: {
        DestinationAddresses: {
          target: "com.amazonaws.ec2#IpAddressList",
          locationName: "destinationAddressSet",
        },
        DestinationPortRanges: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "destinationPortRangeSet",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        SourceAddresses: {
          target: "com.amazonaws.ec2#IpAddressList",
          locationName: "sourceAddressSet",
        },
        SourcePortRanges: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "sourcePortRangeSet",
        },
      },
    },
    "com.amazonaws.ec2#IpAddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpAddress",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PortRangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PortRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AnalysisRouteTableRoute": {
      type: "structure",
      members: {
        DestinationCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidr",
        },
        DestinationPrefixListId: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationPrefixListId",
        },
        EgressOnlyInternetGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "egressOnlyInternetGatewayId",
        },
        GatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "gatewayId",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        NatGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "natGatewayId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        Origin: {
          target: "com.amazonaws.ec2#String",
          locationName: "origin",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcPeeringConnectionId",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        CarrierGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "carrierGatewayId",
        },
        CoreNetworkArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "coreNetworkArn",
        },
        LocalGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "localGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisSecurityGroupRule": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        Direction: {
          target: "com.amazonaws.ec2#String",
          locationName: "direction",
        },
        SecurityGroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "securityGroupId",
        },
        PortRange: {
          target: "com.amazonaws.ec2#PortRange",
          locationName: "portRange",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListId",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
      },
    },
    "com.amazonaws.ec2#AdditionalDetailList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AdditionalDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AdditionalDetail": {
      type: "structure",
      members: {
        AdditionalDetailType: {
          target: "com.amazonaws.ec2#String",
          locationName: "additionalDetailType",
        },
        Component: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "component",
        },
        VpcEndpointService: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpcEndpointService",
        },
        RuleOptions: {
          target: "com.amazonaws.ec2#RuleOptionList",
          locationName: "ruleOptionSet",
        },
        RuleGroupTypePairs: {
          target: "com.amazonaws.ec2#RuleGroupTypePairList",
          locationName: "ruleGroupTypePairSet",
        },
        RuleGroupRuleOptionsPairs: {
          target: "com.amazonaws.ec2#RuleGroupRuleOptionsPairList",
          locationName: "ruleGroupRuleOptionsPairSet",
        },
        ServiceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceName",
        },
        LoadBalancers: {
          target: "com.amazonaws.ec2#AnalysisComponentList",
          locationName: "loadBalancerSet",
        },
      },
    },
    "com.amazonaws.ec2#RuleOptionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RuleOption",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RuleOption": {
      type: "structure",
      members: {
        Keyword: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyword",
        },
        Settings: {
          target: "com.amazonaws.ec2#StringList",
          locationName: "settingSet",
        },
      },
    },
    "com.amazonaws.ec2#StringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RuleGroupTypePairList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RuleGroupTypePair",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RuleGroupTypePair": {
      type: "structure",
      members: {
        RuleGroupArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ruleGroupArn",
        },
        RuleGroupType: {
          target: "com.amazonaws.ec2#String",
          locationName: "ruleGroupType",
        },
      },
    },
    "com.amazonaws.ec2#RuleGroupRuleOptionsPairList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RuleGroupRuleOptionsPair",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RuleGroupRuleOptionsPair": {
      type: "structure",
      members: {
        RuleGroupArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ruleGroupArn",
        },
        RuleOptions: {
          target: "com.amazonaws.ec2#RuleOptionList",
          locationName: "ruleOptionSet",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisComponentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AnalysisComponent",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableRoute": {
      type: "structure",
      members: {
        DestinationCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidr",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        RouteOrigin: {
          target: "com.amazonaws.ec2#String",
          locationName: "routeOrigin",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListId",
        },
        AttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "attachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceType",
        },
      },
    },
    "com.amazonaws.ec2#ExplanationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Explanation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Explanation": {
      type: "structure",
      members: {
        Acl: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "acl",
        },
        AclRule: {
          target: "com.amazonaws.ec2#AnalysisAclRule",
          locationName: "aclRule",
        },
        Address: {
          target: "com.amazonaws.ec2#IpAddress",
          locationName: "address",
        },
        Addresses: {
          target: "com.amazonaws.ec2#IpAddressList",
          locationName: "addressSet",
        },
        AttachedTo: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "attachedTo",
        },
        AvailabilityZones: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "availabilityZoneSet",
        },
        AvailabilityZoneIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "availabilityZoneIdSet",
        },
        Cidrs: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "cidrSet",
        },
        Component: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "component",
        },
        CustomerGateway: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "customerGateway",
        },
        Destination: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "destination",
        },
        DestinationVpc: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "destinationVpc",
        },
        Direction: {
          target: "com.amazonaws.ec2#String",
          locationName: "direction",
        },
        ExplanationCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "explanationCode",
        },
        IngressRouteTable: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "ingressRouteTable",
        },
        InternetGateway: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "internetGateway",
        },
        LoadBalancerArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "loadBalancerArn",
        },
        ClassicLoadBalancerListener: {
          target: "com.amazonaws.ec2#AnalysisLoadBalancerListener",
          locationName: "classicLoadBalancerListener",
        },
        LoadBalancerListenerPort: {
          target: "com.amazonaws.ec2#Port",
          locationName: "loadBalancerListenerPort",
        },
        LoadBalancerTarget: {
          target: "com.amazonaws.ec2#AnalysisLoadBalancerTarget",
          locationName: "loadBalancerTarget",
        },
        LoadBalancerTargetGroup: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "loadBalancerTargetGroup",
        },
        LoadBalancerTargetGroups: {
          target: "com.amazonaws.ec2#AnalysisComponentList",
          locationName: "loadBalancerTargetGroupSet",
        },
        LoadBalancerTargetPort: {
          target: "com.amazonaws.ec2#Port",
          locationName: "loadBalancerTargetPort",
        },
        ElasticLoadBalancerListener: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "elasticLoadBalancerListener",
        },
        MissingComponent: {
          target: "com.amazonaws.ec2#String",
          locationName: "missingComponent",
        },
        NatGateway: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "natGateway",
        },
        NetworkInterface: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "networkInterface",
        },
        PacketField: {
          target: "com.amazonaws.ec2#String",
          locationName: "packetField",
        },
        VpcPeeringConnection: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpcPeeringConnection",
        },
        Port: {
          target: "com.amazonaws.ec2#Port",
          locationName: "port",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "portRangeSet",
        },
        PrefixList: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "prefixList",
        },
        Protocols: {
          target: "com.amazonaws.ec2#StringList",
          locationName: "protocolSet",
        },
        RouteTableRoute: {
          target: "com.amazonaws.ec2#AnalysisRouteTableRoute",
          locationName: "routeTableRoute",
        },
        RouteTable: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "routeTable",
        },
        SecurityGroup: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "securityGroup",
        },
        SecurityGroupRule: {
          target: "com.amazonaws.ec2#AnalysisSecurityGroupRule",
          locationName: "securityGroupRule",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#AnalysisComponentList",
          locationName: "securityGroupSet",
        },
        SourceVpc: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "sourceVpc",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        Subnet: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "subnet",
        },
        SubnetRouteTable: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "subnetRouteTable",
        },
        Vpc: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpc",
        },
        VpcEndpoint: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpcEndpoint",
        },
        VpnConnection: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpnConnection",
        },
        VpnGateway: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "vpnGateway",
        },
        TransitGateway: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "transitGateway",
        },
        TransitGatewayRouteTable: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "transitGatewayRouteTable",
        },
        TransitGatewayRouteTableRoute: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableRoute",
          locationName: "transitGatewayRouteTableRoute",
        },
        TransitGatewayAttachment: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "transitGatewayAttachment",
        },
        ComponentAccount: {
          target: "com.amazonaws.ec2#ComponentAccount",
          locationName: "componentAccount",
        },
        ComponentRegion: {
          target: "com.amazonaws.ec2#ComponentRegion",
          locationName: "componentRegion",
        },
        FirewallStatelessRule: {
          target: "com.amazonaws.ec2#FirewallStatelessRule",
          locationName: "firewallStatelessRule",
        },
        FirewallStatefulRule: {
          target: "com.amazonaws.ec2#FirewallStatefulRule",
          locationName: "firewallStatefulRule",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisLoadBalancerListener": {
      type: "structure",
      members: {
        LoadBalancerPort: {
          target: "com.amazonaws.ec2#Port",
          locationName: "loadBalancerPort",
        },
        InstancePort: {
          target: "com.amazonaws.ec2#Port",
          locationName: "instancePort",
        },
      },
    },
    "com.amazonaws.ec2#AnalysisLoadBalancerTarget": {
      type: "structure",
      members: {
        Address: {
          target: "com.amazonaws.ec2#IpAddress",
          locationName: "address",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        Instance: {
          target: "com.amazonaws.ec2#AnalysisComponent",
          locationName: "instance",
        },
        Port: {
          target: "com.amazonaws.ec2#Port",
          locationName: "port",
        },
      },
    },
    "com.amazonaws.ec2#ComponentAccount": {
      type: "string",
    },
    "com.amazonaws.ec2#ComponentRegion": {
      type: "string",
    },
    "com.amazonaws.ec2#FirewallStatelessRule": {
      type: "structure",
      members: {
        RuleGroupArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ruleGroupArn",
        },
        Sources: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "sourceSet",
        },
        Destinations: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "destinationSet",
        },
        SourcePorts: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "sourcePortSet",
        },
        DestinationPorts: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "destinationPortSet",
        },
        Protocols: {
          target: "com.amazonaws.ec2#ProtocolIntList",
          locationName: "protocolSet",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#String",
          locationName: "ruleAction",
        },
        Priority: {
          target: "com.amazonaws.ec2#Priority",
          locationName: "priority",
        },
      },
    },
    "com.amazonaws.ec2#ProtocolIntList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ProtocolInt",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ProtocolInt": {
      type: "integer",
    },
    "com.amazonaws.ec2#Priority": {
      type: "integer",
    },
    "com.amazonaws.ec2#FirewallStatefulRule": {
      type: "structure",
      members: {
        RuleGroupArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "ruleGroupArn",
        },
        Sources: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "sourceSet",
        },
        Destinations: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "destinationSet",
        },
        SourcePorts: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "sourcePortSet",
        },
        DestinationPorts: {
          target: "com.amazonaws.ec2#PortRangeList",
          locationName: "destinationPortSet",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        RuleAction: {
          target: "com.amazonaws.ec2#String",
          locationName: "ruleAction",
        },
        Direction: {
          target: "com.amazonaws.ec2#String",
          locationName: "direction",
        },
      },
    },
    "com.amazonaws.ec2#AlternatePathHintList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AlternatePathHint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AlternatePathHint": {
      type: "structure",
      members: {
        ComponentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "componentId",
        },
        ComponentArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "componentArn",
        },
      },
    },
    "com.amazonaws.ec2#NetworkInsightsPathIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsPathId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInsightsPathList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInsightsPath",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceAttribute": {
      type: "enum",
    },
    "com.amazonaws.ec2#NetworkInterfacePermissionIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterfacePermissionId",
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfacePermissionsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#NetworkInterfacePermissionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterfacePermission",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeNetworkInterfacesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#NetworkInterfaceIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterfaceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#NetworkInterface",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#OutpostLagIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#OutpostLagId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#OutpostLagMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#OutpostLagSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#OutpostLag",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#OutpostLag": {
      type: "structure",
      members: {
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        State: {
          target: "com.amazonaws.ec2#String",
          locationName: "state",
        },
        OutpostLagId: {
          target: "com.amazonaws.ec2#OutpostLagId",
          locationName: "outpostLagId",
        },
        LocalGatewayVirtualInterfaceIds: {
          target: "com.amazonaws.ec2#LocalGatewayVirtualInterfaceIdSet",
          locationName: "localGatewayVirtualInterfaceIdSet",
        },
        ServiceLinkVirtualInterfaceIds: {
          target: "com.amazonaws.ec2#ServiceLinkVirtualInterfaceIdSet",
          locationName: "serviceLinkVirtualInterfaceIdSet",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ServiceLinkVirtualInterfaceIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ServiceLinkVirtualInterfaceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ServiceLinkVirtualInterfaceId": {
      type: "string",
    },
    "com.amazonaws.ec2#PlacementGroupIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PlacementGroupId",
        locationName: "GroupId",
      },
    },
    "com.amazonaws.ec2#PlacementGroupStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PlacementGroupName",
      },
    },
    "com.amazonaws.ec2#PlacementGroupList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PlacementGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListResourceIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrefixListResourceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrefixList",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixList": {
      type: "structure",
      members: {
        Cidrs: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "cidrSet",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListId",
        },
        PrefixListName: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefixListName",
        },
      },
    },
    "com.amazonaws.ec2#ResourceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribePrincipalIdFormatMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#PrincipalIdFormatList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrincipalIdFormat",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrincipalIdFormat": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
          locationName: "arn",
        },
        Statuses: {
          target: "com.amazonaws.ec2#IdFormatList",
          locationName: "statusSet",
        },
      },
    },
    "com.amazonaws.ec2#PublicIpv4PoolIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv4PoolEc2Id",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PoolMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#PublicIpv4PoolSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PublicIpv4Pool",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PublicIpv4Pool": {
      type: "structure",
      members: {
        PoolId: {
          target: "com.amazonaws.ec2#String",
          locationName: "poolId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        PoolAddressRanges: {
          target: "com.amazonaws.ec2#PublicIpv4PoolRangeSet",
          locationName: "poolAddressRangeSet",
        },
        TotalAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalAddressCount",
        },
        TotalAvailableAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalAvailableAddressCount",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#PublicIpv4PoolRangeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PublicIpv4PoolRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PublicIpv4PoolRange": {
      type: "structure",
      members: {
        FirstAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "firstAddress",
        },
        LastAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastAddress",
        },
        AddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "addressCount",
        },
        AvailableAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableAddressCount",
        },
      },
    },
    "com.amazonaws.ec2#RegionNameStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "RegionName",
      },
    },
    "com.amazonaws.ec2#RegionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Region",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Region": {
      type: "structure",
      members: {
        OptInStatus: {
          target: "com.amazonaws.ec2#String",
          locationName: "optInStatus",
        },
        RegionName: {
          target: "com.amazonaws.ec2#String",
          locationName: "regionName",
        },
        Endpoint: {
          target: "com.amazonaws.ec2#String",
          locationName: "regionEndpoint",
        },
      },
    },
    "com.amazonaws.ec2#ReplaceRootVolumeTaskIds": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReplaceRootVolumeTaskId",
        locationName: "ReplaceRootVolumeTaskId",
      },
    },
    "com.amazonaws.ec2#DescribeReplaceRootVolumeTasksMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ReplaceRootVolumeTasks": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReplaceRootVolumeTask",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#OfferingClassType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservedInstancesIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservationId",
        locationName: "ReservedInstancesId",
      },
    },
    "com.amazonaws.ec2#OfferingTypeValues": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservedInstancesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstances",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstances": {
      type: "structure",
      members: {
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        InstanceTenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "instanceTenancy",
        },
        OfferingClass: {
          target: "com.amazonaws.ec2#OfferingClassType",
          locationName: "offeringClass",
        },
        OfferingType: {
          target: "com.amazonaws.ec2#OfferingTypeValues",
          locationName: "offeringType",
        },
        RecurringCharges: {
          target: "com.amazonaws.ec2#RecurringChargesList",
          locationName: "recurringCharges",
        },
        Scope: {
          target: "com.amazonaws.ec2#scope",
          locationName: "scope",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Start: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "start",
        },
        End: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "end",
        },
        Duration: {
          target: "com.amazonaws.ec2#Long",
          locationName: "duration",
        },
        UsagePrice: {
          target: "com.amazonaws.ec2#Float",
          locationName: "usagePrice",
        },
        FixedPrice: {
          target: "com.amazonaws.ec2#Float",
          locationName: "fixedPrice",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        ProductDescription: {
          target: "com.amazonaws.ec2#RIProductDescription",
          locationName: "productDescription",
        },
        State: {
          target: "com.amazonaws.ec2#ReservedInstanceState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#RecurringChargesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RecurringCharge",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RecurringCharge": {
      type: "structure",
      members: {
        Amount: {
          target: "com.amazonaws.ec2#Double",
          locationName: "amount",
        },
        Frequency: {
          target: "com.amazonaws.ec2#RecurringChargeFrequency",
          locationName: "frequency",
        },
      },
    },
    "com.amazonaws.ec2#RecurringChargeFrequency": {
      type: "enum",
    },
    "com.amazonaws.ec2#scope": {
      type: "enum",
    },
    "com.amazonaws.ec2#Float": {
      type: "float",
    },
    "com.amazonaws.ec2#RIProductDescription": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservedInstanceState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservedInstancesModificationIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesModificationId",
        locationName: "ReservedInstancesModificationId",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesModificationId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReservedInstancesModificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesModification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesModification": {
      type: "structure",
      members: {
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        CreateDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createDate",
        },
        EffectiveDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "effectiveDate",
        },
        ModificationResults: {
          target: "com.amazonaws.ec2#ReservedInstancesModificationResultList",
          locationName: "modificationResultSet",
        },
        ReservedInstancesIds: {
          target: "com.amazonaws.ec2#ReservedIntancesIds",
          locationName: "reservedInstancesSet",
        },
        ReservedInstancesModificationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesModificationId",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        UpdateDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "updateDate",
        },
      },
    },
    "com.amazonaws.ec2#ReservedInstancesModificationResultList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesModificationResult",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesModificationResult": {
      type: "structure",
      members: {
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
        TargetConfiguration: {
          target: "com.amazonaws.ec2#ReservedInstancesConfiguration",
          locationName: "targetConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#ReservedInstancesConfiguration": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
          locationName: "platform",
        },
        Scope: {
          target: "com.amazonaws.ec2#scope",
          locationName: "scope",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
      },
    },
    "com.amazonaws.ec2#ReservedIntancesIds": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesId": {
      type: "structure",
      members: {
        ReservedInstancesId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesId",
        },
      },
    },
    "com.amazonaws.ec2#ReservedInstancesOfferingIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesOfferingId",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesOfferingList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesOffering",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstancesOffering": {
      type: "structure",
      members: {
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        InstanceTenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "instanceTenancy",
        },
        Marketplace: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "marketplace",
        },
        OfferingClass: {
          target: "com.amazonaws.ec2#OfferingClassType",
          locationName: "offeringClass",
        },
        OfferingType: {
          target: "com.amazonaws.ec2#OfferingTypeValues",
          locationName: "offeringType",
        },
        PricingDetails: {
          target: "com.amazonaws.ec2#PricingDetailsList",
          locationName: "pricingDetailsSet",
        },
        RecurringCharges: {
          target: "com.amazonaws.ec2#RecurringChargesList",
          locationName: "recurringCharges",
        },
        Scope: {
          target: "com.amazonaws.ec2#scope",
          locationName: "scope",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#AvailabilityZoneId",
          locationName: "availabilityZoneId",
        },
        ReservedInstancesOfferingId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstancesOfferingId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Duration: {
          target: "com.amazonaws.ec2#Long",
          locationName: "duration",
        },
        UsagePrice: {
          target: "com.amazonaws.ec2#Float",
          locationName: "usagePrice",
        },
        FixedPrice: {
          target: "com.amazonaws.ec2#Float",
          locationName: "fixedPrice",
        },
        ProductDescription: {
          target: "com.amazonaws.ec2#RIProductDescription",
          locationName: "productDescription",
        },
      },
    },
    "com.amazonaws.ec2#PricingDetailsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PricingDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PricingDetail": {
      type: "structure",
      members: {
        Count: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "count",
        },
        Price: {
          target: "com.amazonaws.ec2#Double",
          locationName: "price",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerEndpointIdsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerEndpointId",
      },
    },
    "com.amazonaws.ec2#RouteServerMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#RouteServerEndpointsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerEndpoint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteServerPeerIdsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerPeerId",
      },
    },
    "com.amazonaws.ec2#RouteServerPeersList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerPeer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteServerIdsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerId",
      },
    },
    "com.amazonaws.ec2#RouteServersList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeRouteTablesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#RouteTableIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteTableId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteTableList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteTable",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SlotDateTimeRangeRequest": {
      type: "structure",
      members: {
        EarliestTime: {
          target: "com.amazonaws.ec2#DateTime",
        },
        LatestTime: {
          target: "com.amazonaws.ec2#DateTime",
        },
      },
    },
    "com.amazonaws.ec2#DescribeScheduledInstanceAvailabilityMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ScheduledInstanceRecurrenceRequest": {
      type: "structure",
      members: {
        Frequency: {
          target: "com.amazonaws.ec2#String",
        },
        Interval: {
          target: "com.amazonaws.ec2#Integer",
        },
        OccurrenceDays: {
          target: "com.amazonaws.ec2#OccurrenceDayRequestSet",
          locationName: "OccurrenceDay",
        },
        OccurrenceRelativeToEnd: {
          target: "com.amazonaws.ec2#Boolean",
        },
        OccurrenceUnit: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#OccurrenceDayRequestSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Integer",
        locationName: "OccurenceDay",
      },
    },
    "com.amazonaws.ec2#ScheduledInstanceAvailabilitySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstanceAvailability",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ScheduledInstanceAvailability": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        AvailableInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "availableInstanceCount",
        },
        FirstSlotStartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "firstSlotStartTime",
        },
        HourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "hourlyPrice",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        MaxTermDurationInDays: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "maxTermDurationInDays",
        },
        MinTermDurationInDays: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "minTermDurationInDays",
        },
        NetworkPlatform: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkPlatform",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
          locationName: "platform",
        },
        PurchaseToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "purchaseToken",
        },
        Recurrence: {
          target: "com.amazonaws.ec2#ScheduledInstanceRecurrence",
          locationName: "recurrence",
        },
        SlotDurationInHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "slotDurationInHours",
        },
        TotalScheduledInstanceHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalScheduledInstanceHours",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstanceRecurrence": {
      type: "structure",
      members: {
        Frequency: {
          target: "com.amazonaws.ec2#String",
          locationName: "frequency",
        },
        Interval: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "interval",
        },
        OccurrenceDaySet: {
          target: "com.amazonaws.ec2#OccurrenceDaySet",
          locationName: "occurrenceDaySet",
        },
        OccurrenceRelativeToEnd: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "occurrenceRelativeToEnd",
        },
        OccurrenceUnit: {
          target: "com.amazonaws.ec2#String",
          locationName: "occurrenceUnit",
        },
      },
    },
    "com.amazonaws.ec2#OccurrenceDaySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Integer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ScheduledInstanceIdRequestSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstanceId",
        locationName: "ScheduledInstanceId",
      },
    },
    "com.amazonaws.ec2#ScheduledInstanceId": {
      type: "string",
    },
    "com.amazonaws.ec2#SlotStartTimeRangeRequest": {
      type: "structure",
      members: {
        EarliestTime: {
          target: "com.amazonaws.ec2#DateTime",
        },
        LatestTime: {
          target: "com.amazonaws.ec2#DateTime",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstanceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ScheduledInstance": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        CreateDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createDate",
        },
        HourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "hourlyPrice",
        },
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
        NetworkPlatform: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkPlatform",
        },
        NextSlotStartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "nextSlotStartTime",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
          locationName: "platform",
        },
        PreviousSlotEndTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "previousSlotEndTime",
        },
        Recurrence: {
          target: "com.amazonaws.ec2#ScheduledInstanceRecurrence",
          locationName: "recurrence",
        },
        ScheduledInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "scheduledInstanceId",
        },
        SlotDurationInHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "slotDurationInHours",
        },
        TermEndDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "termEndDate",
        },
        TermStartDate: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "termStartDate",
        },
        TotalScheduledInstanceHours: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "totalScheduledInstanceHours",
        },
      },
    },
    "com.amazonaws.ec2#GroupIds": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupReferences": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupReference",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupReference": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        ReferencingVpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "referencingVpcId",
        },
        VpcPeeringConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcPeeringConnectionId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupRulesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeSecurityGroupVpcAssociationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SecurityGroupVpcAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupVpcAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupVpcAssociation": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "groupId",
        },
        VpcId: {
          target: "com.amazonaws.ec2#VpcId",
          locationName: "vpcId",
        },
        VpcOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcOwnerId",
        },
        State: {
          target: "com.amazonaws.ec2#SecurityGroupVpcAssociationState",
          locationName: "state",
        },
        StateReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateReason",
        },
        GroupOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupOwnerId",
        },
      },
    },
    "com.amazonaws.ec2#GroupNameStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupName",
        locationName: "GroupName",
      },
    },
    "com.amazonaws.ec2#DescribeSecurityGroupsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SecurityGroupList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroup": {
      type: "structure",
      members: {
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        IpPermissionsEgress: {
          target: "com.amazonaws.ec2#IpPermissionList",
          locationName: "ipPermissionsEgress",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        SecurityGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "securityGroupArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupDescription",
        },
        IpPermissions: {
          target: "com.amazonaws.ec2#IpPermissionList",
          locationName: "ipPermissions",
        },
      },
    },
    "com.amazonaws.ec2#ServiceLinkMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ServiceLinkVirtualInterfaceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ServiceLinkVirtualInterface",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ServiceLinkVirtualInterface": {
      type: "structure",
      members: {
        ServiceLinkVirtualInterfaceId: {
          target: "com.amazonaws.ec2#ServiceLinkVirtualInterfaceId",
          locationName: "serviceLinkVirtualInterfaceId",
        },
        ServiceLinkVirtualInterfaceArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "serviceLinkVirtualInterfaceArn",
        },
        OutpostId: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostId",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        LocalAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "localAddress",
        },
        PeerAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "peerAddress",
        },
        PeerBgpAsn: {
          target: "com.amazonaws.ec2#Long",
          locationName: "peerBgpAsn",
        },
        Vlan: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "vlan",
        },
        OutpostLagId: {
          target: "com.amazonaws.ec2#OutpostLagId",
          locationName: "outpostLagId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ConfigurationState: {
          target:
            "com.amazonaws.ec2#ServiceLinkVirtualInterfaceConfigurationState",
          locationName: "configurationState",
        },
      },
    },
    "com.amazonaws.ec2#ServiceLinkVirtualInterfaceConfigurationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#SnapshotAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#CreateVolumePermissionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CreateVolumePermission",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CreateVolumePermission": {
      type: "structure",
      members: {
        UserId: {
          target: "com.amazonaws.ec2#String",
          locationName: "userId",
        },
        Group: {
          target: "com.amazonaws.ec2#PermissionGroup",
          locationName: "group",
        },
      },
    },
    "com.amazonaws.ec2#DescribeSnapshotTierStatusMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#snapshotTierStatusSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SnapshotTierStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SnapshotTierStatus": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
          locationName: "snapshotId",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
          locationName: "volumeId",
        },
        Status: {
          target: "com.amazonaws.ec2#SnapshotState",
          locationName: "status",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        StorageTier: {
          target: "com.amazonaws.ec2#StorageTier",
          locationName: "storageTier",
        },
        LastTieringStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastTieringStartTime",
        },
        LastTieringProgress: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "lastTieringProgress",
        },
        LastTieringOperationStatus: {
          target: "com.amazonaws.ec2#TieringOperationStatus",
          locationName: "lastTieringOperationStatus",
        },
        LastTieringOperationStatusDetail: {
          target: "com.amazonaws.ec2#String",
          locationName: "lastTieringOperationStatusDetail",
        },
        ArchivalCompleteTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "archivalCompleteTime",
        },
        RestoreExpiryTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "restoreExpiryTime",
        },
      },
    },
    "com.amazonaws.ec2#TieringOperationStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#RestorableByStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
      },
    },
    "com.amazonaws.ec2#SnapshotList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Snapshot",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeSpotFleetInstancesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#EventType": {
      type: "enum",
    },
    "com.amazonaws.ec2#DescribeSpotFleetRequestHistoryMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#HistoryRecords": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#HistoryRecord",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#HistoryRecord": {
      type: "structure",
      members: {
        EventInformation: {
          target: "com.amazonaws.ec2#EventInformation",
          locationName: "eventInformation",
        },
        EventType: {
          target: "com.amazonaws.ec2#EventType",
          locationName: "eventType",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "timestamp",
        },
      },
    },
    "com.amazonaws.ec2#SpotFleetRequestConfigSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotFleetRequestConfig",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotFleetRequestConfig": {
      type: "structure",
      members: {
        ActivityStatus: {
          target: "com.amazonaws.ec2#ActivityStatus",
          locationName: "activityStatus",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "createTime",
        },
        SpotFleetRequestConfig: {
          target: "com.amazonaws.ec2#SpotFleetRequestConfigData",
          locationName: "spotFleetRequestConfig",
        },
        SpotFleetRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotFleetRequestId",
        },
        SpotFleetRequestState: {
          target: "com.amazonaws.ec2#BatchState",
          locationName: "spotFleetRequestState",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ActivityStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpotFleetRequestConfigData": {
      type: "structure",
      members: {
        AllocationStrategy: {
          target: "com.amazonaws.ec2#AllocationStrategy",
          locationName: "allocationStrategy",
        },
        OnDemandAllocationStrategy: {
          target: "com.amazonaws.ec2#OnDemandAllocationStrategy",
          locationName: "onDemandAllocationStrategy",
        },
        SpotMaintenanceStrategies: {
          target: "com.amazonaws.ec2#SpotMaintenanceStrategies",
          locationName: "spotMaintenanceStrategies",
        },
        ClientToken: {
          target: "com.amazonaws.ec2#String",
          locationName: "clientToken",
        },
        ExcessCapacityTerminationPolicy: {
          target: "com.amazonaws.ec2#ExcessCapacityTerminationPolicy",
          locationName: "excessCapacityTerminationPolicy",
        },
        FulfilledCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "fulfilledCapacity",
        },
        OnDemandFulfilledCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "onDemandFulfilledCapacity",
        },
        IamFleetRole: {
          target: "com.amazonaws.ec2#String",
          locationName: "iamFleetRole",
        },
        LaunchSpecifications: {
          target: "com.amazonaws.ec2#LaunchSpecsList",
          locationName: "launchSpecifications",
        },
        LaunchTemplateConfigs: {
          target: "com.amazonaws.ec2#LaunchTemplateConfigList",
          locationName: "launchTemplateConfigs",
        },
        SpotPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotPrice",
        },
        TargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "targetCapacity",
        },
        OnDemandTargetCapacity: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "onDemandTargetCapacity",
        },
        OnDemandMaxTotalPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "onDemandMaxTotalPrice",
        },
        SpotMaxTotalPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotMaxTotalPrice",
        },
        TerminateInstancesWithExpiration: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "terminateInstancesWithExpiration",
        },
        Type: {
          target: "com.amazonaws.ec2#FleetType",
          locationName: "type",
        },
        ValidFrom: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validFrom",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validUntil",
        },
        ReplaceUnhealthyInstances: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "replaceUnhealthyInstances",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#InstanceInterruptionBehavior",
          locationName: "instanceInterruptionBehavior",
        },
        LoadBalancersConfig: {
          target: "com.amazonaws.ec2#LoadBalancersConfig",
          locationName: "loadBalancersConfig",
        },
        InstancePoolsToUseCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instancePoolsToUseCount",
        },
        Context: {
          target: "com.amazonaws.ec2#String",
          locationName: "context",
        },
        TargetCapacityUnitType: {
          target: "com.amazonaws.ec2#TargetCapacityUnitType",
          locationName: "targetCapacityUnitType",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#TagSpecificationList",
          locationName: "TagSpecification",
        },
      },
    },
    "com.amazonaws.ec2#AllocationStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#OnDemandAllocationStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpotMaintenanceStrategies": {
      type: "structure",
      members: {
        CapacityRebalance: {
          target: "com.amazonaws.ec2#SpotCapacityRebalance",
          locationName: "capacityRebalance",
        },
      },
    },
    "com.amazonaws.ec2#SpotCapacityRebalance": {
      type: "structure",
      members: {
        ReplacementStrategy: {
          target: "com.amazonaws.ec2#ReplacementStrategy",
          locationName: "replacementStrategy",
        },
        TerminationDelay: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "terminationDelay",
        },
      },
    },
    "com.amazonaws.ec2#ReplacementStrategy": {
      type: "enum",
    },
    "com.amazonaws.ec2#ExcessCapacityTerminationPolicy": {
      type: "enum",
    },
    "com.amazonaws.ec2#LaunchSpecsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotFleetLaunchSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotFleetLaunchSpecification": {
      type: "structure",
      members: {
        AddressingType: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressingType",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfileSpecification",
          locationName: "iamInstanceProfile",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        KernelId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kernelId",
        },
        KeyName: {
          target: "com.amazonaws.ec2#KeyPairName",
          locationName: "keyName",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#SpotFleetMonitoring",
          locationName: "monitoring",
        },
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceSpecificationList",
          locationName: "networkInterfaceSet",
        },
        Placement: {
          target: "com.amazonaws.ec2#SpotPlacement",
          locationName: "placement",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ramdiskId",
        },
        SpotPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotPrice",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        UserData: {
          target: "com.amazonaws.ec2#SensitiveUserData",
          locationName: "userData",
        },
        WeightedCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "weightedCapacity",
        },
        TagSpecifications: {
          target: "com.amazonaws.ec2#SpotFleetTagSpecificationList",
          locationName: "tagSpecificationSet",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirements",
          locationName: "instanceRequirements",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
      },
    },
    "com.amazonaws.ec2#SpotFleetMonitoring": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
      },
    },
    "com.amazonaws.ec2#InstanceNetworkInterfaceSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceNetworkInterfaceSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceNetworkInterfaceSpecification": {
      type: "structure",
      members: {
        AssociatePublicIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "associatePublicIpAddress",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        DeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "deviceIndex",
        },
        Groups: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringList",
          locationName: "SecurityGroupId",
        },
        Ipv6AddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "ipv6AddressCount",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#InstanceIpv6AddressList",
          locationName: "ipv6AddressesSet",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
          locationName: "networkInterfaceId",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
        PrivateIpAddresses: {
          target: "com.amazonaws.ec2#PrivateIpAddressSpecificationList",
          locationName: "privateIpAddressesSet",
        },
        SecondaryPrivateIpAddressCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "secondaryPrivateIpAddressCount",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        AssociateCarrierIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InterfaceType: {
          target: "com.amazonaws.ec2#String",
        },
        NetworkCardIndex: {
          target: "com.amazonaws.ec2#Integer",
        },
        Ipv4Prefixes: {
          target: "com.amazonaws.ec2#Ipv4PrefixList",
          locationName: "Ipv4Prefix",
        },
        Ipv4PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        Ipv6Prefixes: {
          target: "com.amazonaws.ec2#Ipv6PrefixList",
          locationName: "Ipv6Prefix",
        },
        Ipv6PrefixCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        PrimaryIpv6: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnaSrdSpecification: {
          target: "com.amazonaws.ec2#EnaSrdSpecificationRequest",
        },
        ConnectionTrackingSpecification: {
          target: "com.amazonaws.ec2#ConnectionTrackingSpecificationRequest",
        },
        EnaQueueCount: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#SpotPlacement": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
          locationName: "groupName",
        },
        Tenancy: {
          target: "com.amazonaws.ec2#Tenancy",
          locationName: "tenancy",
        },
      },
    },
    "com.amazonaws.ec2#SpotFleetTagSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotFleetTagSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotFleetTagSpecification": {
      type: "structure",
      members: {
        ResourceType: {
          target: "com.amazonaws.ec2#ResourceType",
          locationName: "resourceType",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tag",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateConfigList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateConfig",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateConfig": {
      type: "structure",
      members: {
        LaunchTemplateSpecification: {
          target: "com.amazonaws.ec2#FleetLaunchTemplateSpecification",
          locationName: "launchTemplateSpecification",
        },
        Overrides: {
          target: "com.amazonaws.ec2#LaunchTemplateOverridesList",
          locationName: "overrides",
        },
      },
    },
    "com.amazonaws.ec2#LaunchTemplateOverridesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LaunchTemplateOverrides",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchTemplateOverrides": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        SpotPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotPrice",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        WeightedCapacity: {
          target: "com.amazonaws.ec2#Double",
          locationName: "weightedCapacity",
        },
        Priority: {
          target: "com.amazonaws.ec2#Double",
          locationName: "priority",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirements",
          locationName: "instanceRequirements",
        },
      },
    },
    "com.amazonaws.ec2#LoadBalancersConfig": {
      type: "structure",
      members: {
        ClassicLoadBalancersConfig: {
          target: "com.amazonaws.ec2#ClassicLoadBalancersConfig",
          locationName: "classicLoadBalancersConfig",
        },
        TargetGroupsConfig: {
          target: "com.amazonaws.ec2#TargetGroupsConfig",
          locationName: "targetGroupsConfig",
        },
      },
    },
    "com.amazonaws.ec2#ClassicLoadBalancersConfig": {
      type: "structure",
      members: {
        ClassicLoadBalancers: {
          target: "com.amazonaws.ec2#ClassicLoadBalancers",
          locationName: "classicLoadBalancers",
        },
      },
    },
    "com.amazonaws.ec2#ClassicLoadBalancers": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClassicLoadBalancer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClassicLoadBalancer": {
      type: "structure",
      members: {
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
      },
    },
    "com.amazonaws.ec2#TargetGroupsConfig": {
      type: "structure",
      members: {
        TargetGroups: {
          target: "com.amazonaws.ec2#TargetGroups",
          locationName: "targetGroups",
        },
      },
    },
    "com.amazonaws.ec2#TargetGroups": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TargetGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TargetGroup": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
          locationName: "arn",
        },
      },
    },
    "com.amazonaws.ec2#SpotInstanceRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotInstanceRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotInstanceRequest": {
      type: "structure",
      members: {
        ActualBlockHourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "actualBlockHourlyPrice",
        },
        AvailabilityZoneGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneGroup",
        },
        BlockDurationMinutes: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "blockDurationMinutes",
        },
        CreateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "createTime",
        },
        Fault: {
          target: "com.amazonaws.ec2#SpotInstanceStateFault",
          locationName: "fault",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
          locationName: "instanceId",
        },
        LaunchGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchGroup",
        },
        LaunchSpecification: {
          target: "com.amazonaws.ec2#LaunchSpecification",
          locationName: "launchSpecification",
        },
        LaunchedAvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "launchedAvailabilityZone",
        },
        ProductDescription: {
          target: "com.amazonaws.ec2#RIProductDescription",
          locationName: "productDescription",
        },
        SpotInstanceRequestId: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotInstanceRequestId",
        },
        SpotPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotPrice",
        },
        State: {
          target: "com.amazonaws.ec2#SpotInstanceState",
          locationName: "state",
        },
        Status: {
          target: "com.amazonaws.ec2#SpotInstanceStatus",
          locationName: "status",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        Type: {
          target: "com.amazonaws.ec2#SpotInstanceType",
          locationName: "type",
        },
        ValidFrom: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validFrom",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "validUntil",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#InstanceInterruptionBehavior",
          locationName: "instanceInterruptionBehavior",
        },
      },
    },
    "com.amazonaws.ec2#LaunchSpecification": {
      type: "structure",
      members: {
        UserData: {
          target: "com.amazonaws.ec2#SensitiveUserData",
          locationName: "userData",
        },
        AddressingType: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressingType",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfileSpecification",
          locationName: "iamInstanceProfile",
        },
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        KernelId: {
          target: "com.amazonaws.ec2#String",
          locationName: "kernelId",
        },
        KeyName: {
          target: "com.amazonaws.ec2#String",
          locationName: "keyName",
        },
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceSpecificationList",
          locationName: "networkInterfaceSet",
        },
        Placement: {
          target: "com.amazonaws.ec2#SpotPlacement",
          locationName: "placement",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ramdiskId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#GroupIdentifierList",
          locationName: "groupSet",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#RunInstancesMonitoringEnabled",
          locationName: "monitoring",
        },
      },
    },
    "com.amazonaws.ec2#RunInstancesMonitoringEnabled": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
      },
    },
    "com.amazonaws.ec2#SpotInstanceState": {
      type: "enum",
    },
    "com.amazonaws.ec2#SpotInstanceStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
        UpdateTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "updateTime",
        },
      },
    },
    "com.amazonaws.ec2#InstanceTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceType",
      },
    },
    "com.amazonaws.ec2#ProductDescriptionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
      },
    },
    "com.amazonaws.ec2#SpotPriceHistoryList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotPrice",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotPrice": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        ProductDescription: {
          target: "com.amazonaws.ec2#RIProductDescription",
          locationName: "productDescription",
        },
        SpotPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "spotPrice",
        },
        Timestamp: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "timestamp",
        },
      },
    },
    "com.amazonaws.ec2#DescribeStaleSecurityGroupsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeStaleSecurityGroupsNextToken": {
      type: "string",
    },
    "com.amazonaws.ec2#StaleSecurityGroupSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#StaleSecurityGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#StaleSecurityGroup": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        StaleIpPermissions: {
          target: "com.amazonaws.ec2#StaleIpPermissionSet",
          locationName: "staleIpPermissions",
        },
        StaleIpPermissionsEgress: {
          target: "com.amazonaws.ec2#StaleIpPermissionSet",
          locationName: "staleIpPermissionsEgress",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#StaleIpPermissionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#StaleIpPermission",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#StaleIpPermission": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipProtocol",
        },
        IpRanges: {
          target: "com.amazonaws.ec2#IpRanges",
          locationName: "ipRanges",
        },
        PrefixListIds: {
          target: "com.amazonaws.ec2#PrefixListIdSet",
          locationName: "prefixListIds",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
        UserIdGroupPairs: {
          target: "com.amazonaws.ec2#UserIdGroupPairSet",
          locationName: "groups",
        },
      },
    },
    "com.amazonaws.ec2#IpRanges": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#UserIdGroupPairSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#UserIdGroupPair",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeStoreImageTasksRequestMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#StoreImageTaskResultSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#StoreImageTaskResult",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#StoreImageTaskResult": {
      type: "structure",
      members: {
        AmiId: {
          target: "com.amazonaws.ec2#String",
          locationName: "amiId",
        },
        TaskStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "taskStartTime",
        },
        Bucket: {
          target: "com.amazonaws.ec2#String",
          locationName: "bucket",
        },
        S3objectKey: {
          target: "com.amazonaws.ec2#String",
          locationName: "s3objectKey",
        },
        ProgressPercentage: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "progressPercentage",
        },
        StoreTaskState: {
          target: "com.amazonaws.ec2#String",
          locationName: "storeTaskState",
        },
        StoreTaskFailureReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "storeTaskFailureReason",
        },
      },
    },
    "com.amazonaws.ec2#SubnetIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "SubnetId",
      },
    },
    "com.amazonaws.ec2#DescribeSubnetsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SubnetList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Subnet",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TagDescriptionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TagDescription",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TagDescription": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "key",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#ResourceType",
          locationName: "resourceType",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRuleIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorFilterRuleIdWithResolver",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirroringMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRuleSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorFilterRule",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorFilterIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorFilterId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorFilterSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorFilter",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorSessionIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorSessionId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorSessionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorSession",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorTargetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorTargetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorTargetSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorTarget",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachment": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        TransitGatewayId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayId",
        },
        TransitGatewayOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayOwnerId",
        },
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentState",
          locationName: "state",
        },
        Association: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentAssociation",
          locationName: "association",
        },
        CreationTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "creationTime",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentAssociation": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayRouteTableId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectPeerIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayConnectPeerId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectPeerList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayConnectPeer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayConnectList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayConnect",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayMulticastDomainId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayMulticastDomain",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayPeeringAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayPeeringAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayPolicyTableId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayPolicyTable",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncement",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteTable",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayVpcAttachmentList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayVpcAttachment",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TrunkInterfaceAssociationIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrunkInterfaceAssociationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeTrunkInterfaceAssociationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#TrunkInterfaceAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrunkInterfaceAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessEndpointsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessEndpoint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessGroupIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessGroupMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VerifiedAccessGroupList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessInstanceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessInstanceLoggingConfigurationsMaxResults":
      {
        type: "integer",
      },
    "com.amazonaws.ec2#VerifiedAccessInstanceLoggingConfigurationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessInstanceLoggingConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceLoggingConfiguration": {
      type: "structure",
      members: {
        VerifiedAccessInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessInstanceId",
        },
        AccessLogs: {
          target: "com.amazonaws.ec2#VerifiedAccessLogs",
          locationName: "accessLogs",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogs": {
      type: "structure",
      members: {
        S3: {
          target: "com.amazonaws.ec2#VerifiedAccessLogS3Destination",
          locationName: "s3",
        },
        CloudWatchLogs: {
          target:
            "com.amazonaws.ec2#VerifiedAccessLogCloudWatchLogsDestination",
          locationName: "cloudWatchLogs",
        },
        KinesisDataFirehose: {
          target:
            "com.amazonaws.ec2#VerifiedAccessLogKinesisDataFirehoseDestination",
          locationName: "kinesisDataFirehose",
        },
        LogVersion: {
          target: "com.amazonaws.ec2#String",
          locationName: "logVersion",
        },
        IncludeTrustContext: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "includeTrustContext",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogS3Destination": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
        DeliveryStatus: {
          target: "com.amazonaws.ec2#VerifiedAccessLogDeliveryStatus",
          locationName: "deliveryStatus",
        },
        BucketName: {
          target: "com.amazonaws.ec2#String",
          locationName: "bucketName",
        },
        Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefix",
        },
        BucketOwner: {
          target: "com.amazonaws.ec2#String",
          locationName: "bucketOwner",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogDeliveryStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#VerifiedAccessLogDeliveryStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogDeliveryStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#VerifiedAccessLogCloudWatchLogsDestination": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
        DeliveryStatus: {
          target: "com.amazonaws.ec2#VerifiedAccessLogDeliveryStatus",
          locationName: "deliveryStatus",
        },
        LogGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "logGroup",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogKinesisDataFirehoseDestination": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "enabled",
        },
        DeliveryStatus: {
          target: "com.amazonaws.ec2#VerifiedAccessLogDeliveryStatus",
          locationName: "deliveryStatus",
        },
        DeliveryStream: {
          target: "com.amazonaws.ec2#String",
          locationName: "deliveryStream",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessInstancesMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessTrustProviderIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessTrustProviderId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeVerifiedAccessTrustProvidersMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VerifiedAccessTrustProviderList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessTrustProvider",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#VolumeStatusList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeStatusItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeStatusItem": {
      type: "structure",
      members: {
        Actions: {
          target: "com.amazonaws.ec2#VolumeStatusActionsList",
          locationName: "actionsSet",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        OutpostArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "outpostArn",
        },
        Events: {
          target: "com.amazonaws.ec2#VolumeStatusEventsList",
          locationName: "eventsSet",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        VolumeStatus: {
          target: "com.amazonaws.ec2#VolumeStatusInfo",
          locationName: "volumeStatus",
        },
        AttachmentStatuses: {
          target: "com.amazonaws.ec2#VolumeStatusAttachmentStatusList",
          locationName: "attachmentStatuses",
        },
        InitializationStatusDetails: {
          target: "com.amazonaws.ec2#InitializationStatusDetails",
          locationName: "initializationStatusDetails",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
      },
    },
    "com.amazonaws.ec2#VolumeStatusActionsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeStatusAction",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeStatusAction": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        EventId: {
          target: "com.amazonaws.ec2#String",
          locationName: "eventId",
        },
        EventType: {
          target: "com.amazonaws.ec2#String",
          locationName: "eventType",
        },
      },
    },
    "com.amazonaws.ec2#VolumeStatusEventsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeStatusEvent",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeStatusEvent": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        EventId: {
          target: "com.amazonaws.ec2#String",
          locationName: "eventId",
        },
        EventType: {
          target: "com.amazonaws.ec2#String",
          locationName: "eventType",
        },
        NotAfter: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "notAfter",
        },
        NotBefore: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "notBefore",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
      },
    },
    "com.amazonaws.ec2#VolumeStatusInfo": {
      type: "structure",
      members: {
        Details: {
          target: "com.amazonaws.ec2#VolumeStatusDetailsList",
          locationName: "details",
        },
        Status: {
          target: "com.amazonaws.ec2#VolumeStatusInfoStatus",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#VolumeStatusDetailsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeStatusDetails",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeStatusDetails": {
      type: "structure",
      members: {
        Name: {
          target: "com.amazonaws.ec2#VolumeStatusName",
          locationName: "name",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#VolumeStatusName": {
      type: "enum",
    },
    "com.amazonaws.ec2#VolumeStatusInfoStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#VolumeStatusAttachmentStatusList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeStatusAttachmentStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeStatusAttachmentStatus": {
      type: "structure",
      members: {
        IoPerformance: {
          target: "com.amazonaws.ec2#String",
          locationName: "ioPerformance",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
      },
    },
    "com.amazonaws.ec2#InitializationStatusDetails": {
      type: "structure",
      members: {
        InitializationType: {
          target: "com.amazonaws.ec2#InitializationType",
          locationName: "initializationType",
        },
        Progress: {
          target: "com.amazonaws.ec2#Long",
          locationName: "progress",
        },
        EstimatedTimeToCompleteInSeconds: {
          target: "com.amazonaws.ec2#Long",
          locationName: "estimatedTimeToCompleteInSeconds",
        },
      },
    },
    "com.amazonaws.ec2#InitializationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#VolumeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Volume",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeModificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VolumeModification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VolumeModification": {
      type: "structure",
      members: {
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
        ModificationState: {
          target: "com.amazonaws.ec2#VolumeModificationState",
          locationName: "modificationState",
        },
        StatusMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "statusMessage",
        },
        TargetSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "targetSize",
        },
        TargetIops: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "targetIops",
        },
        TargetVolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
          locationName: "targetVolumeType",
        },
        TargetThroughput: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "targetThroughput",
        },
        TargetMultiAttachEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "targetMultiAttachEnabled",
        },
        OriginalSize: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "originalSize",
        },
        OriginalIops: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "originalIops",
        },
        OriginalVolumeType: {
          target: "com.amazonaws.ec2#VolumeType",
          locationName: "originalVolumeType",
        },
        OriginalThroughput: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "originalThroughput",
        },
        OriginalMultiAttachEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "originalMultiAttachEnabled",
        },
        Progress: {
          target: "com.amazonaws.ec2#Long",
          locationName: "progress",
        },
        StartTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "startTime",
        },
        EndTime: {
          target: "com.amazonaws.ec2#DateTime",
          locationName: "endTime",
        },
      },
    },
    "com.amazonaws.ec2#VolumeModificationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessExclusionIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeVpcBlockPublicAccessExclusionsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessExclusionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessOptions": {
      type: "structure",
      members: {
        AwsAccountId: {
          target: "com.amazonaws.ec2#String",
          locationName: "awsAccountId",
        },
        AwsRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "awsRegion",
        },
        State: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessState",
          locationName: "state",
        },
        InternetGatewayBlockMode: {
          target: "com.amazonaws.ec2#InternetGatewayBlockMode",
          locationName: "internetGatewayBlockMode",
        },
        Reason: {
          target: "com.amazonaws.ec2#String",
          locationName: "reason",
        },
        LastUpdateTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastUpdateTimestamp",
        },
        ManagedBy: {
          target: "com.amazonaws.ec2#ManagedBy",
          locationName: "managedBy",
        },
        ExclusionsAllowed: {
          target: "com.amazonaws.ec2#VpcBlockPublicAccessExclusionsAllowed",
          locationName: "exclusionsAllowed",
        },
      },
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessState": {
      type: "enum",
    },
    "com.amazonaws.ec2#InternetGatewayBlockMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#ManagedBy": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcBlockPublicAccessExclusionsAllowed": {
      type: "enum",
    },
    "com.amazonaws.ec2#VpcClassicLinkIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcId",
        locationName: "VpcId",
      },
    },
    "com.amazonaws.ec2#VpcClassicLinkList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcClassicLink",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcClassicLink": {
      type: "structure",
      members: {
        ClassicLinkEnabled: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "classicLinkEnabled",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#DescribeVpcClassicLinkDnsSupportNextToken": {
      type: "string",
    },
    "com.amazonaws.ec2#ClassicLinkDnsSupportList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ClassicLinkDnsSupport",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ClassicLinkDnsSupport": {
      type: "structure",
      members: {
        ClassicLinkDnsSupported: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "classicLinkDnsSupported",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
      },
    },
    "com.amazonaws.ec2#MaxResults2": {
      type: "integer",
    },
    "com.amazonaws.ec2#VpcEndpointAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcEndpointAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEndpointAssociation": {
      type: "structure",
      members: {
        Id: {
          target: "com.amazonaws.ec2#String",
          locationName: "id",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#VpcEndpointId",
          locationName: "vpcEndpointId",
        },
        ServiceNetworkArn: {
          target: "com.amazonaws.ec2#ServiceNetworkArn",
          locationName: "serviceNetworkArn",
        },
        ServiceNetworkName: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceNetworkName",
        },
        AssociatedResourceAccessibility: {
          target: "com.amazonaws.ec2#String",
          locationName: "associatedResourceAccessibility",
        },
        FailureReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureReason",
        },
        FailureCode: {
          target: "com.amazonaws.ec2#String",
          locationName: "failureCode",
        },
        DnsEntry: {
          target: "com.amazonaws.ec2#DnsEntry",
          locationName: "dnsEntry",
        },
        PrivateDnsEntry: {
          target: "com.amazonaws.ec2#DnsEntry",
          locationName: "privateDnsEntry",
        },
        AssociatedResourceArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "associatedResourceArn",
        },
        ResourceConfigurationGroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceConfigurationGroupArn",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
      },
    },
    "com.amazonaws.ec2#ConnectionNotificationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ConnectionNotification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEndpointConnectionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcEndpointConnection",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcEndpointConnection": {
      type: "structure",
      members: {
        ServiceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceId",
        },
        VpcEndpointId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcEndpointId",
        },
        VpcEndpointOwner: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcEndpointOwner",
        },
        VpcEndpointState: {
          target: "com.amazonaws.ec2#State",
          locationName: "vpcEndpointState",
        },
        CreationTimestamp: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "creationTimestamp",
        },
        DnsEntries: {
          target: "com.amazonaws.ec2#DnsEntrySet",
          locationName: "dnsEntrySet",
        },
        NetworkLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "networkLoadBalancerArnSet",
        },
        GatewayLoadBalancerArns: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "gatewayLoadBalancerArnSet",
        },
        IpAddressType: {
          target: "com.amazonaws.ec2#IpAddressType",
          locationName: "ipAddressType",
        },
        VpcEndpointConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcEndpointConnectionId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        VpcEndpointRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcEndpointRegion",
        },
      },
    },
    "com.amazonaws.ec2#ServiceConfigurationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ServiceConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AllowedPrincipalSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AllowedPrincipal",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AllowedPrincipal": {
      type: "structure",
      members: {
        PrincipalType: {
          target: "com.amazonaws.ec2#PrincipalType",
          locationName: "principalType",
        },
        Principal: {
          target: "com.amazonaws.ec2#String",
          locationName: "principal",
        },
        ServicePermissionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "servicePermissionId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceId",
        },
      },
    },
    "com.amazonaws.ec2#PrincipalType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ServiceDetailSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ServiceDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ServiceDetail": {
      type: "structure",
      members: {
        ServiceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceName",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceId",
        },
        ServiceType: {
          target: "com.amazonaws.ec2#ServiceTypeDetailSet",
          locationName: "serviceType",
        },
        ServiceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceRegion",
        },
        AvailabilityZones: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "availabilityZoneSet",
        },
        Owner: {
          target: "com.amazonaws.ec2#String",
          locationName: "owner",
        },
        BaseEndpointDnsNames: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "baseEndpointDnsNameSet",
        },
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
        PrivateDnsNames: {
          target: "com.amazonaws.ec2#PrivateDnsDetailsSet",
          locationName: "privateDnsNameSet",
        },
        VpcEndpointPolicySupported: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "vpcEndpointPolicySupported",
        },
        AcceptanceRequired: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "acceptanceRequired",
        },
        ManagesVpcEndpoints: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "managesVpcEndpoints",
        },
        PayerResponsibility: {
          target: "com.amazonaws.ec2#PayerResponsibility",
          locationName: "payerResponsibility",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        PrivateDnsNameVerificationState: {
          target: "com.amazonaws.ec2#DnsNameState",
          locationName: "privateDnsNameVerificationState",
        },
        SupportedIpAddressTypes: {
          target: "com.amazonaws.ec2#SupportedIpAddressTypes",
          locationName: "supportedIpAddressTypeSet",
        },
      },
    },
    "com.amazonaws.ec2#PrivateDnsDetailsSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrivateDnsDetails",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrivateDnsDetails": {
      type: "structure",
      members: {
        PrivateDnsName: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateDnsName",
        },
      },
    },
    "com.amazonaws.ec2#VpcEndpointSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcEndpoint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DescribeVpcPeeringConnectionsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VpcPeeringConnectionIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcPeeringConnectionId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcPeeringConnectionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcPeeringConnection",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpcIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpcId",
        locationName: "VpcId",
      },
    },
    "com.amazonaws.ec2#DescribeVpcsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VpcList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Vpc",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpnConnectionIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnConnectionId",
        locationName: "VpnConnectionId",
      },
    },
    "com.amazonaws.ec2#VpnConnectionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnConnection",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpnGatewayIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnGatewayId",
        locationName: "VpnGatewayId",
      },
    },
    "com.amazonaws.ec2#VpnGatewayList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnGateway",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceAttachmentId": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceIdForResolver": {
      type: "string",
    },
    "com.amazonaws.ec2#VolumeIdWithResolver": {
      type: "string",
    },
    "com.amazonaws.ec2#AllowedImagesSettingsDisabledState": {
      type: "enum",
    },
    "com.amazonaws.ec2#AvailabilityZoneStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "AvailabilityZone",
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreSuccessSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DisableFastSnapshotRestoreSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreSuccessItem": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        State: {
          target: "com.amazonaws.ec2#FastSnapshotRestoreStateCode",
          locationName: "state",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateTransitionReason",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        OwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerAlias",
        },
        EnablingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "enablingTime",
        },
        OptimizingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "optimizingTime",
        },
        EnabledTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "enabledTime",
        },
        DisablingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "disablingTime",
        },
        DisabledTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "disabledTime",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DisableFastSnapshotRestoreErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreErrorItem": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        FastSnapshotRestoreStateErrors: {
          target: "com.amazonaws.ec2#DisableFastSnapshotRestoreStateErrorSet",
          locationName: "fastSnapshotRestoreStateErrorSet",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreStateErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DisableFastSnapshotRestoreStateErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreStateErrorItem": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Error: {
          target: "com.amazonaws.ec2#DisableFastSnapshotRestoreStateError",
          locationName: "error",
        },
      },
    },
    "com.amazonaws.ec2#DisableFastSnapshotRestoreStateError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ImageBlockPublicAccessDisabledState": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerPropagation": {
      type: "structure",
      members: {
        RouteServerId: {
          target: "com.amazonaws.ec2#RouteServerId",
          locationName: "routeServerId",
        },
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
        State: {
          target: "com.amazonaws.ec2#RouteServerPropagationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerPropagationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#SnapshotBlockPublicAccessState": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayPropagation": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentId",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayRouteTableId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayPropagationState",
          locationName: "state",
        },
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
          locationName: "transitGatewayRouteTableAnnouncementId",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPropagationState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ElasticIpAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#InstanceEventWindowDisassociationRequest": {
      type: "structure",
      members: {
        InstanceIds: {
          target: "com.amazonaws.ec2#InstanceIdList",
          locationName: "InstanceId",
        },
        InstanceTags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "InstanceTag",
        },
        DedicatedHostIds: {
          target: "com.amazonaws.ec2#DedicatedHostIdList",
          locationName: "DedicatedHostId",
        },
      },
    },
    "com.amazonaws.ec2#EipAssociationIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticIpAssociationId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DrainSeconds": {
      type: "integer",
    },
    "com.amazonaws.ec2#RouteTableAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#DisassociateSecurityGroupVpcSecurityGroupId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpcCidrAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#AllowedImagesSettingsEnabledState": {
      type: "enum",
    },
    "com.amazonaws.ec2#FastLaunchSnapshotConfigurationRequest": {
      type: "structure",
      members: {
        TargetResourceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
      },
    },
    "com.amazonaws.ec2#FastLaunchLaunchTemplateSpecificationRequest": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#String",
        },
        Version: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreSuccessSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#EnableFastSnapshotRestoreSuccessItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreSuccessItem": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        State: {
          target: "com.amazonaws.ec2#FastSnapshotRestoreStateCode",
          locationName: "state",
        },
        StateTransitionReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "stateTransitionReason",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        OwnerAlias: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerAlias",
        },
        EnablingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "enablingTime",
        },
        OptimizingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "optimizingTime",
        },
        EnabledTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "enabledTime",
        },
        DisablingTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "disablingTime",
        },
        DisabledTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "disabledTime",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#EnableFastSnapshotRestoreErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreErrorItem": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        FastSnapshotRestoreStateErrors: {
          target: "com.amazonaws.ec2#EnableFastSnapshotRestoreStateErrorSet",
          locationName: "fastSnapshotRestoreStateErrorSet",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreStateErrorSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#EnableFastSnapshotRestoreStateErrorItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreStateErrorItem": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZone",
        },
        Error: {
          target: "com.amazonaws.ec2#EnableFastSnapshotRestoreStateError",
          locationName: "error",
        },
      },
    },
    "com.amazonaws.ec2#EnableFastSnapshotRestoreStateError": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#String",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ImageBlockPublicAccessEnabledState": {
      type: "enum",
    },
    "com.amazonaws.ec2#ClientCertificateRevocationListStatus": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#ClientCertificateRevocationListStatusCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#ClientCertificateRevocationListStatusCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#ExportTaskS3LocationRequest": {
      type: "structure",
      members: {
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        S3Prefix: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#DeviceTrustProviderTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DeviceTrustProviderType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceUserTrustProviderClientConfiguration":
      {
        type: "structure",
        members: {
          Type: {
            target: "com.amazonaws.ec2#UserTrustProviderType",
            locationName: "type",
          },
          Scopes: {
            target: "com.amazonaws.ec2#String",
            locationName: "scopes",
          },
          Issuer: {
            target: "com.amazonaws.ec2#String",
            locationName: "issuer",
          },
          AuthorizationEndpoint: {
            target: "com.amazonaws.ec2#String",
            locationName: "authorizationEndpoint",
          },
          PublicSigningKeyEndpoint: {
            target: "com.amazonaws.ec2#String",
            locationName: "publicSigningKeyEndpoint",
          },
          TokenEndpoint: {
            target: "com.amazonaws.ec2#String",
            locationName: "tokenEndpoint",
          },
          UserInfoEndpoint: {
            target: "com.amazonaws.ec2#String",
            locationName: "userInfoEndpoint",
          },
          ClientId: {
            target: "com.amazonaws.ec2#String",
            locationName: "clientId",
          },
          ClientSecret: {
            target: "com.amazonaws.ec2#ClientSecretType",
            locationName: "clientSecret",
          },
          PkceEnabled: {
            target: "com.amazonaws.ec2#Boolean",
            locationName: "pkceEnabled",
          },
        },
      },
    "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfigurationList": {
      type: "list",
      member: {
        target:
          "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfiguration": {
      type: "structure",
      members: {
        Config: {
          target: "com.amazonaws.ec2#String",
          locationName: "config",
        },
        Routes: {
          target:
            "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfigurationRouteList",
          locationName: "routeSet",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfigurationRouteList":
      {
        type: "list",
        member: {
          target:
            "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfigurationRoute",
          locationName: "item",
        },
      },
    "com.amazonaws.ec2#VerifiedAccessInstanceOpenVpnClientConfigurationRoute": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
      },
    },
    "com.amazonaws.ec2#ActiveVpnTunnelStatus": {
      type: "structure",
      members: {
        Phase1EncryptionAlgorithm: {
          target: "com.amazonaws.ec2#String",
          locationName: "phase1EncryptionAlgorithm",
        },
        Phase2EncryptionAlgorithm: {
          target: "com.amazonaws.ec2#String",
          locationName: "phase2EncryptionAlgorithm",
        },
        Phase1IntegrityAlgorithm: {
          target: "com.amazonaws.ec2#String",
          locationName: "phase1IntegrityAlgorithm",
        },
        Phase2IntegrityAlgorithm: {
          target: "com.amazonaws.ec2#String",
          locationName: "phase2IntegrityAlgorithm",
        },
        Phase1DHGroup: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "phase1DHGroup",
        },
        Phase2DHGroup: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "phase2DHGroup",
        },
        IkeVersion: {
          target: "com.amazonaws.ec2#String",
          locationName: "ikeVersion",
        },
        ProvisioningStatus: {
          target: "com.amazonaws.ec2#VpnTunnelProvisioningStatus",
          locationName: "provisioningStatus",
        },
        ProvisioningStatusReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "provisioningStatusReason",
        },
      },
    },
    "com.amazonaws.ec2#VpnTunnelProvisioningStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#ImageCriterionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageCriterion",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageCriterion": {
      type: "structure",
      members: {
        ImageProviders: {
          target: "com.amazonaws.ec2#ImageProviderList",
          locationName: "imageProviderSet",
        },
      },
    },
    "com.amazonaws.ec2#ImageProviderList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageProvider",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageProvider": {
      type: "string",
    },
    "com.amazonaws.ec2#AssociatedRolesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AssociatedRole",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AssociatedRole": {
      type: "structure",
      members: {
        AssociatedRoleArn: {
          target: "com.amazonaws.ec2#ResourceArn",
          locationName: "associatedRoleArn",
        },
        CertificateS3BucketName: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateS3BucketName",
        },
        CertificateS3ObjectKey: {
          target: "com.amazonaws.ec2#String",
          locationName: "certificateS3ObjectKey",
        },
        EncryptionKmsKeyId: {
          target: "com.amazonaws.ec2#String",
          locationName: "encryptionKmsKeyId",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6CidrAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Ipv6CidrAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Ipv6CidrAssociation": {
      type: "structure",
      members: {
        Ipv6Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipv6Cidr",
        },
        AssociatedResource: {
          target: "com.amazonaws.ec2#String",
          locationName: "associatedResource",
        },
      },
    },
    "com.amazonaws.ec2#DataQueries": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DataQuery",
      },
    },
    "com.amazonaws.ec2#DataQuery": {
      type: "structure",
      members: {
        Id: {
          target: "com.amazonaws.ec2#String",
        },
        Source: {
          target: "com.amazonaws.ec2#String",
        },
        Destination: {
          target: "com.amazonaws.ec2#String",
        },
        Metric: {
          target: "com.amazonaws.ec2#MetricType",
        },
        Statistic: {
          target: "com.amazonaws.ec2#StatisticType",
        },
        Period: {
          target: "com.amazonaws.ec2#PeriodType",
        },
      },
    },
    "com.amazonaws.ec2#DataResponses": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DataResponse",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#DataResponse": {
      type: "structure",
      members: {
        Id: {
          target: "com.amazonaws.ec2#String",
          locationName: "id",
        },
        Source: {
          target: "com.amazonaws.ec2#String",
          locationName: "source",
        },
        Destination: {
          target: "com.amazonaws.ec2#String",
          locationName: "destination",
        },
        Metric: {
          target: "com.amazonaws.ec2#MetricType",
          locationName: "metric",
        },
        Statistic: {
          target: "com.amazonaws.ec2#StatisticType",
          locationName: "statistic",
        },
        Period: {
          target: "com.amazonaws.ec2#PeriodType",
          locationName: "period",
        },
        MetricPoints: {
          target: "com.amazonaws.ec2#MetricPoints",
          locationName: "metricPointSet",
        },
      },
    },
    "com.amazonaws.ec2#MetricPoints": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#MetricPoint",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MetricPoint": {
      type: "structure",
      members: {
        StartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "startDate",
        },
        EndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "endDate",
        },
        Value: {
          target: "com.amazonaws.ec2#Float",
          locationName: "value",
        },
        Status: {
          target: "com.amazonaws.ec2#String",
          locationName: "status",
        },
      },
    },
    "com.amazonaws.ec2#GetCapacityReservationUsageRequestMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#InstanceUsageSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceUsage",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceUsage": {
      type: "structure",
      members: {
        AccountId: {
          target: "com.amazonaws.ec2#String",
          locationName: "accountId",
        },
        UsedInstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "usedInstanceCount",
        },
      },
    },
    "com.amazonaws.ec2#CoipAddressUsageSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CoipAddressUsage",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CoipAddressUsage": {
      type: "structure",
      members: {
        AllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "allocationId",
        },
        AwsAccountId: {
          target: "com.amazonaws.ec2#String",
          locationName: "awsAccountId",
        },
        AwsService: {
          target: "com.amazonaws.ec2#String",
          locationName: "awsService",
        },
        CoIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "coIp",
        },
      },
    },
    "com.amazonaws.ec2#AttributeSummaryList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AttributeSummary",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AttributeSummary": {
      type: "structure",
      members: {
        AttributeName: {
          target: "com.amazonaws.ec2#String",
          locationName: "attributeName",
        },
        MostFrequentValue: {
          target: "com.amazonaws.ec2#String",
          locationName: "mostFrequentValue",
        },
        NumberOfMatchedAccounts: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "numberOfMatchedAccounts",
        },
        NumberOfUnmatchedAccounts: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "numberOfUnmatchedAccounts",
        },
        RegionalSummaries: {
          target: "com.amazonaws.ec2#RegionalSummaryList",
          locationName: "regionalSummarySet",
        },
      },
    },
    "com.amazonaws.ec2#RegionalSummaryList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RegionalSummary",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RegionalSummary": {
      type: "structure",
      members: {
        RegionName: {
          target: "com.amazonaws.ec2#String",
          locationName: "regionName",
        },
        NumberOfMatchedAccounts: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "numberOfMatchedAccounts",
        },
        NumberOfUnmatchedAccounts: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "numberOfUnmatchedAccounts",
        },
      },
    },
    "com.amazonaws.ec2#UnlimitedSupportedInstanceFamily": {
      type: "enum",
    },
    "com.amazonaws.ec2#InstanceFamilyCreditSpecification": {
      type: "structure",
      members: {
        InstanceFamily: {
          target: "com.amazonaws.ec2#UnlimitedSupportedInstanceFamily",
          locationName: "instanceFamily",
        },
        CpuCredits: {
          target: "com.amazonaws.ec2#String",
          locationName: "cpuCredits",
        },
      },
    },
    "com.amazonaws.ec2#IntegrateServices": {
      type: "structure",
      members: {
        AthenaIntegrations: {
          target: "com.amazonaws.ec2#AthenaIntegrationsSet",
          locationName: "AthenaIntegration",
        },
      },
    },
    "com.amazonaws.ec2#AthenaIntegrationsSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AthenaIntegration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AthenaIntegration": {
      type: "structure",
      members: {
        IntegrationResultS3DestinationArn: {
          target: "com.amazonaws.ec2#String",
        },
        PartitionLoadFrequency: {
          target: "com.amazonaws.ec2#PartitionLoadFrequency",
        },
        PartitionStartDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
        PartitionEndDate: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
        },
      },
    },
    "com.amazonaws.ec2#PartitionLoadFrequency": {
      type: "enum",
    },
    "com.amazonaws.ec2#GetGroupsForCapacityReservationRequestMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#CapacityReservationGroupSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#CapacityReservationGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#CapacityReservationGroup": {
      type: "structure",
      members: {
        GroupArn: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupArn",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
      },
    },
    "com.amazonaws.ec2#RequestHostIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DedicatedHostId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PurchaseSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#Purchase",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#Purchase": {
      type: "structure",
      members: {
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
        Duration: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "duration",
        },
        HostIdSet: {
          target: "com.amazonaws.ec2#ResponseHostIdSet",
          locationName: "hostIdSet",
        },
        HostReservationId: {
          target: "com.amazonaws.ec2#HostReservationId",
          locationName: "hostReservationId",
        },
        HourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "hourlyPrice",
        },
        InstanceFamily: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceFamily",
        },
        PaymentOption: {
          target: "com.amazonaws.ec2#PaymentOption",
          locationName: "paymentOption",
        },
        UpfrontPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "upfrontPrice",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMetadataDefaultsResponse": {
      type: "structure",
      members: {
        HttpTokens: {
          target: "com.amazonaws.ec2#HttpTokensState",
          locationName: "httpTokens",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#BoxedInteger",
          locationName: "httpPutResponseHopLimit",
        },
        HttpEndpoint: {
          target: "com.amazonaws.ec2#InstanceMetadataEndpointState",
          locationName: "httpEndpoint",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#InstanceMetadataTagsState",
          locationName: "instanceMetadataTags",
        },
        ManagedBy: {
          target: "com.amazonaws.ec2#ManagedBy",
          locationName: "managedBy",
        },
        ManagedExceptionMessage: {
          target: "com.amazonaws.ec2#String",
          locationName: "managedExceptionMessage",
        },
      },
    },
    "com.amazonaws.ec2#EkPubKeyType": {
      type: "enum",
    },
    "com.amazonaws.ec2#EkPubKeyFormat": {
      type: "enum",
    },
    "com.amazonaws.ec2#EkPubKeyValue": {
      type: "string",
    },
    "com.amazonaws.ec2#ArchitectureTypeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ArchitectureType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VirtualizationTypeSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VirtualizationType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceTypeInfoFromInstanceRequirementsSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceTypeInfoFromInstanceRequirements",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceTypeInfoFromInstanceRequirements": {
      type: "structure",
      members: {
        InstanceType: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceType",
        },
      },
    },
    "com.amazonaws.ec2#IpamAddressHistoryMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#IpamAddressHistoryRecordSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamAddressHistoryRecord",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamAddressHistoryRecord": {
      type: "structure",
      members: {
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceRegion",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamAddressHistoryResourceType",
          locationName: "resourceType",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceCidr",
        },
        ResourceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceName",
        },
        ResourceComplianceStatus: {
          target: "com.amazonaws.ec2#IpamComplianceStatus",
          locationName: "resourceComplianceStatus",
        },
        ResourceOverlapStatus: {
          target: "com.amazonaws.ec2#IpamOverlapStatus",
          locationName: "resourceOverlapStatus",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        SampledStartTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "sampledStartTime",
        },
        SampledEndTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "sampledEndTime",
        },
      },
    },
    "com.amazonaws.ec2#IpamAddressHistoryResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamComplianceStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamOverlapStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamDiscoveredAccountSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamDiscoveredAccount",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamDiscoveredAccount": {
      type: "structure",
      members: {
        AccountId: {
          target: "com.amazonaws.ec2#String",
          locationName: "accountId",
        },
        DiscoveryRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "discoveryRegion",
        },
        FailureReason: {
          target: "com.amazonaws.ec2#IpamDiscoveryFailureReason",
          locationName: "failureReason",
        },
        LastAttemptedDiscoveryTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastAttemptedDiscoveryTime",
        },
        LastSuccessfulDiscoveryTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastSuccessfulDiscoveryTime",
        },
        OrganizationalUnitId: {
          target: "com.amazonaws.ec2#String",
          locationName: "organizationalUnitId",
        },
      },
    },
    "com.amazonaws.ec2#IpamDiscoveryFailureReason": {
      type: "structure",
      members: {
        Code: {
          target: "com.amazonaws.ec2#IpamDiscoveryFailureCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#IpamDiscoveryFailureCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamDiscoveredPublicAddressSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamDiscoveredPublicAddress",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamDiscoveredPublicAddress": {
      type: "structure",
      members: {
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
          locationName: "ipamResourceDiscoveryId",
        },
        AddressRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressRegion",
        },
        Address: {
          target: "com.amazonaws.ec2#String",
          locationName: "address",
        },
        AddressOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressOwnerId",
        },
        AddressAllocationId: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressAllocationId",
        },
        AssociationStatus: {
          target: "com.amazonaws.ec2#IpamPublicAddressAssociationStatus",
          locationName: "associationStatus",
        },
        AddressType: {
          target: "com.amazonaws.ec2#IpamPublicAddressType",
          locationName: "addressType",
        },
        Service: {
          target: "com.amazonaws.ec2#IpamPublicAddressAwsService",
          locationName: "service",
        },
        ServiceResource: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceResource",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        PublicIpv4PoolId: {
          target: "com.amazonaws.ec2#String",
          locationName: "publicIpv4PoolId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        NetworkInterfaceDescription: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceDescription",
        },
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Tags: {
          target: "com.amazonaws.ec2#IpamPublicAddressTags",
          locationName: "tags",
        },
        NetworkBorderGroup: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkBorderGroup",
        },
        SecurityGroups: {
          target: "com.amazonaws.ec2#IpamPublicAddressSecurityGroupList",
          locationName: "securityGroupSet",
        },
        SampleTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "sampleTime",
        },
      },
    },
    "com.amazonaws.ec2#IpamPublicAddressAssociationStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPublicAddressType": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPublicAddressAwsService": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamPublicAddressTags": {
      type: "structure",
      members: {
        EipTags: {
          target: "com.amazonaws.ec2#IpamPublicAddressTagList",
          locationName: "eipTagSet",
        },
      },
    },
    "com.amazonaws.ec2#IpamPublicAddressTagList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamPublicAddressTag",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPublicAddressTag": {
      type: "structure",
      members: {
        Key: {
          target: "com.amazonaws.ec2#String",
          locationName: "key",
        },
        Value: {
          target: "com.amazonaws.ec2#String",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#IpamPublicAddressSecurityGroupList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamPublicAddressSecurityGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPublicAddressSecurityGroup": {
      type: "structure",
      members: {
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
      },
    },
    "com.amazonaws.ec2#IpamDiscoveredResourceCidrSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamDiscoveredResourceCidr",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamDiscoveredResourceCidr": {
      type: "structure",
      members: {
        IpamResourceDiscoveryId: {
          target: "com.amazonaws.ec2#IpamResourceDiscoveryId",
          locationName: "ipamResourceDiscoveryId",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceRegion",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        ResourceCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceCidr",
        },
        IpSource: {
          target: "com.amazonaws.ec2#IpamResourceCidrIpSource",
          locationName: "ipSource",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamResourceType",
          locationName: "resourceType",
        },
        ResourceTags: {
          target: "com.amazonaws.ec2#IpamResourceTagList",
          locationName: "resourceTagSet",
        },
        IpUsage: {
          target: "com.amazonaws.ec2#BoxedDouble",
          locationName: "ipUsage",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        NetworkInterfaceAttachmentStatus: {
          target: "com.amazonaws.ec2#IpamNetworkInterfaceAttachmentStatus",
          locationName: "networkInterfaceAttachmentStatus",
        },
        SampleTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "sampleTime",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
      },
    },
    "com.amazonaws.ec2#IpamResourceCidrIpSource": {
      type: "enum",
    },
    "com.amazonaws.ec2#IpamResourceType": {
      type: "enum",
    },
    "com.amazonaws.ec2#BoxedDouble": {
      type: "double",
    },
    "com.amazonaws.ec2#IpamNetworkInterfaceAttachmentStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#GetIpamPoolAllocationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#IpamPoolAllocationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamPoolAllocation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamPoolCidrSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamPoolCidr",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamResourceCidrSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#IpamResourceCidr",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#IpamResourceCidr": {
      type: "structure",
      members: {
        IpamId: {
          target: "com.amazonaws.ec2#IpamId",
          locationName: "ipamId",
        },
        IpamScopeId: {
          target: "com.amazonaws.ec2#IpamScopeId",
          locationName: "ipamScopeId",
        },
        IpamPoolId: {
          target: "com.amazonaws.ec2#IpamPoolId",
          locationName: "ipamPoolId",
        },
        ResourceRegion: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceRegion",
        },
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceName",
        },
        ResourceCidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceCidr",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#IpamResourceType",
          locationName: "resourceType",
        },
        ResourceTags: {
          target: "com.amazonaws.ec2#IpamResourceTagList",
          locationName: "resourceTagSet",
        },
        IpUsage: {
          target: "com.amazonaws.ec2#BoxedDouble",
          locationName: "ipUsage",
        },
        ComplianceStatus: {
          target: "com.amazonaws.ec2#IpamComplianceStatus",
          locationName: "complianceStatus",
        },
        ManagementState: {
          target: "com.amazonaws.ec2#IpamManagementState",
          locationName: "managementState",
        },
        OverlapStatus: {
          target: "com.amazonaws.ec2#IpamOverlapStatus",
          locationName: "overlapStatus",
        },
        VpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpcId",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
      },
    },
    "com.amazonaws.ec2#IpamManagementState": {
      type: "enum",
    },
    "com.amazonaws.ec2#GetManagedPrefixListAssociationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#PrefixListAssociationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrefixListAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListAssociation": {
      type: "structure",
      members: {
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceOwner: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwner",
        },
      },
    },
    "com.amazonaws.ec2#PrefixListEntrySet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PrefixListEntry",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#PrefixListEntry": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidr",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
      },
    },
    "com.amazonaws.ec2#GetNetworkInsightsAccessScopeAnalysisFindingsMaxResults":
      {
        type: "integer",
      },
    "com.amazonaws.ec2#AccessScopeAnalysisFindingList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AccessScopeAnalysisFinding",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AccessScopeAnalysisFinding": {
      type: "structure",
      members: {
        NetworkInsightsAccessScopeAnalysisId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeAnalysisId",
          locationName: "networkInsightsAccessScopeAnalysisId",
        },
        NetworkInsightsAccessScopeId: {
          target: "com.amazonaws.ec2#NetworkInsightsAccessScopeId",
          locationName: "networkInsightsAccessScopeId",
        },
        FindingId: {
          target: "com.amazonaws.ec2#String",
          locationName: "findingId",
        },
        FindingComponents: {
          target: "com.amazonaws.ec2#PathComponentList",
          locationName: "findingComponentSet",
        },
      },
    },
    "com.amazonaws.ec2#PasswordData": {
      type: "string",
    },
    "com.amazonaws.ec2#ReservationValue": {
      type: "structure",
      members: {
        HourlyPrice: {
          target: "com.amazonaws.ec2#String",
          locationName: "hourlyPrice",
        },
        RemainingTotalValue: {
          target: "com.amazonaws.ec2#String",
          locationName: "remainingTotalValue",
        },
        RemainingUpfrontValue: {
          target: "com.amazonaws.ec2#String",
          locationName: "remainingUpfrontValue",
        },
      },
    },
    "com.amazonaws.ec2#ReservedInstanceReservationValueSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstanceReservationValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReservedInstanceReservationValue": {
      type: "structure",
      members: {
        ReservationValue: {
          target: "com.amazonaws.ec2#ReservationValue",
          locationName: "reservationValue",
        },
        ReservedInstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "reservedInstanceId",
        },
      },
    },
    "com.amazonaws.ec2#TargetReservationValueSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TargetReservationValue",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TargetReservationValue": {
      type: "structure",
      members: {
        ReservationValue: {
          target: "com.amazonaws.ec2#ReservationValue",
          locationName: "reservationValue",
        },
        TargetConfiguration: {
          target: "com.amazonaws.ec2#TargetConfiguration",
          locationName: "targetConfiguration",
        },
      },
    },
    "com.amazonaws.ec2#TargetConfiguration": {
      type: "structure",
      members: {
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "instanceCount",
        },
        OfferingId: {
          target: "com.amazonaws.ec2#String",
          locationName: "offeringId",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerAssociationsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteServerPropagationsList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerPropagation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteServerRouteList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerRoute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteServerRoute": {
      type: "structure",
      members: {
        RouteServerEndpointId: {
          target: "com.amazonaws.ec2#RouteServerEndpointId",
          locationName: "routeServerEndpointId",
        },
        RouteServerPeerId: {
          target: "com.amazonaws.ec2#RouteServerPeerId",
          locationName: "routeServerPeerId",
        },
        RouteInstallationDetails: {
          target: "com.amazonaws.ec2#RouteServerRouteInstallationDetails",
          locationName: "routeInstallationDetailSet",
        },
        RouteStatus: {
          target: "com.amazonaws.ec2#RouteServerRouteStatus",
          locationName: "routeStatus",
        },
        Prefix: {
          target: "com.amazonaws.ec2#String",
          locationName: "prefix",
        },
        AsPaths: {
          target: "com.amazonaws.ec2#AsPath",
          locationName: "asPathSet",
        },
        Med: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "med",
        },
        NextHopIp: {
          target: "com.amazonaws.ec2#String",
          locationName: "nextHopIp",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerRouteInstallationDetails": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RouteServerRouteInstallationDetail",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RouteServerRouteInstallationDetail": {
      type: "structure",
      members: {
        RouteTableId: {
          target: "com.amazonaws.ec2#RouteTableId",
          locationName: "routeTableId",
        },
        RouteInstallationStatus: {
          target: "com.amazonaws.ec2#RouteServerRouteInstallationStatus",
          locationName: "routeInstallationStatus",
        },
        RouteInstallationStatusReason: {
          target: "com.amazonaws.ec2#String",
          locationName: "routeInstallationStatusReason",
        },
      },
    },
    "com.amazonaws.ec2#RouteServerRouteInstallationStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#RouteServerRouteStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#AsPath": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#GetSecurityGroupsForVpcRequestMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SecurityGroupForVpcList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupForVpc",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupForVpc": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        GroupName: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupName",
        },
        OwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "ownerId",
        },
        GroupId: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupId",
        },
        Tags: {
          target: "com.amazonaws.ec2#TagList",
          locationName: "tagSet",
        },
        PrimaryVpcId: {
          target: "com.amazonaws.ec2#String",
          locationName: "primaryVpcId",
        },
      },
    },
    "com.amazonaws.ec2#InstanceTypes": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
      },
    },
    "com.amazonaws.ec2#SpotPlacementScoresTargetCapacity": {
      type: "integer",
    },
    "com.amazonaws.ec2#RegionNames": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
      },
    },
    "com.amazonaws.ec2#InstanceRequirementsWithMetadataRequest": {
      type: "structure",
      members: {
        ArchitectureTypes: {
          target: "com.amazonaws.ec2#ArchitectureTypeSet",
          locationName: "ArchitectureType",
        },
        VirtualizationTypes: {
          target: "com.amazonaws.ec2#VirtualizationTypeSet",
          locationName: "VirtualizationType",
        },
        InstanceRequirements: {
          target: "com.amazonaws.ec2#InstanceRequirementsRequest",
        },
      },
    },
    "com.amazonaws.ec2#SpotPlacementScoresMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SpotPlacementScores": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SpotPlacementScore",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SpotPlacementScore": {
      type: "structure",
      members: {
        Region: {
          target: "com.amazonaws.ec2#String",
          locationName: "region",
        },
        AvailabilityZoneId: {
          target: "com.amazonaws.ec2#String",
          locationName: "availabilityZoneId",
        },
        Score: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "score",
        },
      },
    },
    "com.amazonaws.ec2#GetSubnetCidrReservationsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SubnetCidrReservationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetCidrReservation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentPropagationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayAttachmentPropagation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayAttachmentPropagation": {
      type: "structure",
      members: {
        TransitGatewayRouteTableId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayRouteTableId",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayPropagationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastDomainAssociation": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        Subnet: {
          target: "com.amazonaws.ec2#SubnetAssociation",
          locationName: "subnet",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayPolicyTableAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableEntryList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayPolicyTableEntry",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyTableEntry": {
      type: "structure",
      members: {
        PolicyRuleNumber: {
          target: "com.amazonaws.ec2#String",
          locationName: "policyRuleNumber",
        },
        PolicyRule: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyRule",
          locationName: "policyRule",
        },
        TargetRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
          locationName: "targetRouteTableId",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyRule": {
      type: "structure",
      members: {
        SourceCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourceCidrBlock",
        },
        SourcePortRange: {
          target: "com.amazonaws.ec2#String",
          locationName: "sourcePortRange",
        },
        DestinationCidrBlock: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationCidrBlock",
        },
        DestinationPortRange: {
          target: "com.amazonaws.ec2#String",
          locationName: "destinationPortRange",
        },
        Protocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "protocol",
        },
        MetaData: {
          target: "com.amazonaws.ec2#TransitGatewayPolicyRuleMetaData",
          locationName: "metaData",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPolicyRuleMetaData": {
      type: "structure",
      members: {
        MetaDataKey: {
          target: "com.amazonaws.ec2#String",
          locationName: "metaDataKey",
        },
        MetaDataValue: {
          target: "com.amazonaws.ec2#String",
          locationName: "metaDataValue",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayPrefixListReferenceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayPrefixListReference",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAssociationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteTableAssociation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTableAssociation": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayAssociationState",
          locationName: "state",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTablePropagationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRouteTablePropagation",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayRouteTablePropagation": {
      type: "structure",
      members: {
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        State: {
          target: "com.amazonaws.ec2#TransitGatewayPropagationState",
          locationName: "state",
        },
        TransitGatewayRouteTableAnnouncementId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableAnnouncementId",
          locationName: "transitGatewayRouteTableAnnouncementId",
        },
      },
    },
    "com.amazonaws.ec2#GetVerifiedAccessEndpointTargetsMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointTargetList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VerifiedAccessEndpointTarget",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VerifiedAccessEndpointTarget": {
      type: "structure",
      members: {
        VerifiedAccessEndpointId: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointId",
          locationName: "verifiedAccessEndpointId",
        },
        VerifiedAccessEndpointTargetIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessEndpointTargetIpAddress",
        },
        VerifiedAccessEndpointTargetDns: {
          target: "com.amazonaws.ec2#String",
          locationName: "verifiedAccessEndpointTargetDns",
        },
      },
    },
    "com.amazonaws.ec2#VpnConnectionDeviceTypeId": {
      type: "string",
    },
    "com.amazonaws.ec2#VpnConnectionDeviceSampleConfiguration": {
      type: "string",
    },
    "com.amazonaws.ec2#GVCDMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#VpnConnectionDeviceTypeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#VpnConnectionDeviceType",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#VpnConnectionDeviceType": {
      type: "structure",
      members: {
        VpnConnectionDeviceTypeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "vpnConnectionDeviceTypeId",
        },
        Vendor: {
          target: "com.amazonaws.ec2#String",
          locationName: "vendor",
        },
        Platform: {
          target: "com.amazonaws.ec2#String",
          locationName: "platform",
        },
        Software: {
          target: "com.amazonaws.ec2#String",
          locationName: "software",
        },
      },
    },
    "com.amazonaws.ec2#MaintenanceDetails": {
      type: "structure",
      members: {
        PendingMaintenance: {
          target: "com.amazonaws.ec2#String",
          locationName: "pendingMaintenance",
        },
        MaintenanceAutoAppliedAfter: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "maintenanceAutoAppliedAfter",
        },
        LastMaintenanceApplied: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "lastMaintenanceApplied",
        },
      },
    },
    "com.amazonaws.ec2#ClientData": {
      type: "structure",
      members: {
        Comment: {
          target: "com.amazonaws.ec2#String",
        },
        UploadEnd: {
          target: "com.amazonaws.ec2#DateTime",
        },
        UploadSize: {
          target: "com.amazonaws.ec2#Double",
        },
        UploadStart: {
          target: "com.amazonaws.ec2#DateTime",
        },
      },
    },
    "com.amazonaws.ec2#ImageDiskContainerList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageDiskContainer",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageDiskContainer": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DeviceName: {
          target: "com.amazonaws.ec2#String",
        },
        Format: {
          target: "com.amazonaws.ec2#String",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        Url: {
          target: "com.amazonaws.ec2#SensitiveUrl",
        },
        UserBucket: {
          target: "com.amazonaws.ec2#UserBucket",
        },
      },
    },
    "com.amazonaws.ec2#UserBucket": {
      type: "structure",
      members: {
        S3Bucket: {
          target: "com.amazonaws.ec2#String",
        },
        S3Key: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ImportImageLicenseSpecificationListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImportImageLicenseConfigurationRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImportImageLicenseConfigurationRequest": {
      type: "structure",
      members: {
        LicenseConfigurationArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ImportInstanceLaunchSpecification": {
      type: "structure",
      members: {
        Architecture: {
          target: "com.amazonaws.ec2#ArchitectureValues",
          locationName: "architecture",
        },
        GroupNames: {
          target: "com.amazonaws.ec2#SecurityGroupStringList",
          locationName: "GroupName",
        },
        GroupIds: {
          target: "com.amazonaws.ec2#SecurityGroupIdStringList",
          locationName: "GroupId",
        },
        AdditionalInfo: {
          target: "com.amazonaws.ec2#String",
          locationName: "additionalInfo",
        },
        UserData: {
          target: "com.amazonaws.ec2#UserData",
          locationName: "userData",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        Placement: {
          target: "com.amazonaws.ec2#Placement",
          locationName: "placement",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "monitoring",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        InstanceInitiatedShutdownBehavior: {
          target: "com.amazonaws.ec2#ShutdownBehavior",
          locationName: "instanceInitiatedShutdownBehavior",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "privateIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#UserData": {
      type: "structure",
      members: {
        Data: {
          target: "com.amazonaws.ec2#String",
          locationName: "data",
        },
      },
    },
    "com.amazonaws.ec2#DiskImageList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#DiskImage",
      },
    },
    "com.amazonaws.ec2#DiskImage": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Image: {
          target: "com.amazonaws.ec2#DiskImageDetail",
        },
        Volume: {
          target: "com.amazonaws.ec2#VolumeDetail",
        },
      },
    },
    "com.amazonaws.ec2#DiskImageDetail": {
      type: "structure",
      members: {
        Format: {
          target: "com.amazonaws.ec2#DiskImageFormat",
          locationName: "format",
        },
        Bytes: {
          target: "com.amazonaws.ec2#Long",
          locationName: "bytes",
        },
        ImportManifestUrl: {
          target: "com.amazonaws.ec2#ImportManifestUrl",
          locationName: "importManifestUrl",
        },
      },
    },
    "com.amazonaws.ec2#VolumeDetail": {
      type: "structure",
      members: {
        Size: {
          target: "com.amazonaws.ec2#Long",
          locationName: "size",
        },
      },
    },
    "com.amazonaws.ec2#SnapshotDiskContainer": {
      type: "structure",
      members: {
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        Format: {
          target: "com.amazonaws.ec2#String",
        },
        Url: {
          target: "com.amazonaws.ec2#SensitiveUrl",
        },
        UserBucket: {
          target: "com.amazonaws.ec2#UserBucket",
        },
      },
    },
    "com.amazonaws.ec2#ListImagesInRecycleBinMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#ImageRecycleBinInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageRecycleBinInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageRecycleBinInfo": {
      type: "structure",
      members: {
        ImageId: {
          target: "com.amazonaws.ec2#String",
          locationName: "imageId",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
          locationName: "name",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        RecycleBinEnterTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "recycleBinEnterTime",
        },
        RecycleBinExitTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "recycleBinExitTime",
        },
      },
    },
    "com.amazonaws.ec2#ListSnapshotsInRecycleBinMaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#SnapshotRecycleBinInfoList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SnapshotRecycleBinInfo",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SnapshotRecycleBinInfo": {
      type: "structure",
      members: {
        SnapshotId: {
          target: "com.amazonaws.ec2#String",
          locationName: "snapshotId",
        },
        RecycleBinEnterTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "recycleBinEnterTime",
        },
        RecycleBinExitTime: {
          target: "com.amazonaws.ec2#MillisecondDateTime",
          locationName: "recycleBinExitTime",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
        VolumeId: {
          target: "com.amazonaws.ec2#String",
          locationName: "volumeId",
        },
      },
    },
    "com.amazonaws.ec2#LockMode": {
      type: "enum",
    },
    "com.amazonaws.ec2#CoolOffPeriodRequestHours": {
      type: "integer",
    },
    "com.amazonaws.ec2#RetentionPeriodRequestDays": {
      type: "integer",
    },
    "com.amazonaws.ec2#ModifyAvailabilityZoneOptInStatus": {
      type: "enum",
    },
    "com.amazonaws.ec2#DnsServersOptionsModifyStructure": {
      type: "structure",
      members: {
        CustomDnsServers: {
          target: "com.amazonaws.ec2#ValueStringList",
        },
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#OperationType": {
      type: "enum",
    },
    "com.amazonaws.ec2#UserIdStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "UserId",
      },
    },
    "com.amazonaws.ec2#UserGroupStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "UserGroup",
      },
    },
    "com.amazonaws.ec2#ProductCodeStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "ProductCode",
      },
    },
    "com.amazonaws.ec2#LoadPermissionModifications": {
      type: "structure",
      members: {
        Add: {
          target: "com.amazonaws.ec2#LoadPermissionListRequest",
        },
        Remove: {
          target: "com.amazonaws.ec2#LoadPermissionListRequest",
        },
      },
    },
    "com.amazonaws.ec2#LoadPermissionListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LoadPermissionRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LoadPermissionRequest": {
      type: "structure",
      members: {
        Group: {
          target: "com.amazonaws.ec2#PermissionGroup",
        },
        UserId: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#UnsuccessfulItemList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#UnsuccessfulItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LaunchPermissionModifications": {
      type: "structure",
      members: {
        Add: {
          target: "com.amazonaws.ec2#LaunchPermissionList",
        },
        Remove: {
          target: "com.amazonaws.ec2#LaunchPermissionList",
        },
      },
    },
    "com.amazonaws.ec2#OrganizationArnStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "OrganizationArn",
      },
    },
    "com.amazonaws.ec2#OrganizationalUnitArnStringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "OrganizationalUnitArn",
      },
    },
    "com.amazonaws.ec2#InstanceBlockDeviceMappingSpecificationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceBlockDeviceMappingSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceBlockDeviceMappingSpecification": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
          locationName: "deviceName",
        },
        Ebs: {
          target: "com.amazonaws.ec2#EbsInstanceBlockDeviceSpecification",
          locationName: "ebs",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
          locationName: "virtualName",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
          locationName: "noDevice",
        },
      },
    },
    "com.amazonaws.ec2#EbsInstanceBlockDeviceSpecification": {
      type: "structure",
      members: {
        VolumeId: {
          target: "com.amazonaws.ec2#VolumeId",
          locationName: "volumeId",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
      },
    },
    "com.amazonaws.ec2#BlobAttributeValue": {
      type: "structure",
      members: {
        Value: {
          target: "com.amazonaws.ec2#Blob",
          locationName: "value",
        },
      },
    },
    "com.amazonaws.ec2#CapacityReservationSpecification": {
      type: "structure",
      members: {
        CapacityReservationPreference: {
          target: "com.amazonaws.ec2#CapacityReservationPreference",
        },
        CapacityReservationTarget: {
          target: "com.amazonaws.ec2#CapacityReservationTarget",
        },
      },
    },
    "com.amazonaws.ec2#InstanceCreditSpecificationListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceCreditSpecificationRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceCreditSpecificationRequest": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#InstanceId",
        },
        CpuCredits: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#SuccessfulInstanceCreditSpecificationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SuccessfulInstanceCreditSpecificationItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SuccessfulInstanceCreditSpecificationItem": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
      },
    },
    "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationItem",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationItem": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Error: {
          target:
            "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationItemError",
          locationName: "error",
        },
      },
    },
    "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationItemError": {
      type: "structure",
      members: {
        Code: {
          target:
            "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationErrorCode",
          locationName: "code",
        },
        Message: {
          target: "com.amazonaws.ec2#String",
          locationName: "message",
        },
      },
    },
    "com.amazonaws.ec2#UnsuccessfulInstanceCreditSpecificationErrorCode": {
      type: "enum",
    },
    "com.amazonaws.ec2#MetadataDefaultHttpTokensState": {
      type: "enum",
    },
    "com.amazonaws.ec2#DefaultInstanceMetadataEndpointState": {
      type: "enum",
    },
    "com.amazonaws.ec2#DefaultInstanceMetadataTagsState": {
      type: "enum",
    },
    "com.amazonaws.ec2#HostTenancy": {
      type: "enum",
    },
    "com.amazonaws.ec2#Affinity": {
      type: "enum",
    },
    "com.amazonaws.ec2#RemoveIpamOperatingRegionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RemoveIpamOperatingRegion",
      },
    },
    "com.amazonaws.ec2#RemoveIpamOperatingRegion": {
      type: "structure",
      members: {
        RegionName: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#AddIpamOrganizationalUnitExclusionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AddIpamOrganizationalUnitExclusion",
      },
    },
    "com.amazonaws.ec2#AddIpamOrganizationalUnitExclusion": {
      type: "structure",
      members: {
        OrganizationsEntityPath: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#RemoveIpamOrganizationalUnitExclusionSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RemoveIpamOrganizationalUnitExclusion",
      },
    },
    "com.amazonaws.ec2#RemoveIpamOrganizationalUnitExclusion": {
      type: "structure",
      members: {
        OrganizationsEntityPath: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#RemovePrefixListEntries": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RemovePrefixListEntry",
      },
    },
    "com.amazonaws.ec2#RemovePrefixListEntry": {
      type: "structure",
      members: {
        Cidr: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#SubnetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "AssociatedSubnetId",
      },
    },
    "com.amazonaws.ec2#NetworkInterfaceAttachmentChanges": {
      type: "structure",
      members: {
        DefaultEnaQueueCount: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnaQueueCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        AttachmentId: {
          target: "com.amazonaws.ec2#NetworkInterfaceAttachmentId",
          locationName: "attachmentId",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "deleteOnTermination",
        },
      },
    },
    "com.amazonaws.ec2#PublicIpDnsOption": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservedInstancesConfigurationList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReservedInstancesConfiguration",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleUpdateList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupRuleUpdate",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleUpdate": {
      type: "structure",
      members: {
        SecurityGroupRuleId: {
          target: "com.amazonaws.ec2#SecurityGroupRuleId",
        },
        SecurityGroupRule: {
          target: "com.amazonaws.ec2#SecurityGroupRuleRequest",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleRequest": {
      type: "structure",
      members: {
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
        },
        CidrIpv4: {
          target: "com.amazonaws.ec2#String",
        },
        CidrIpv6: {
          target: "com.amazonaws.ec2#String",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
        },
        ReferencedGroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#CreateVolumePermissionModifications": {
      type: "structure",
      members: {
        Add: {
          target: "com.amazonaws.ec2#CreateVolumePermissionList",
        },
        Remove: {
          target: "com.amazonaws.ec2#CreateVolumePermissionList",
        },
      },
    },
    "com.amazonaws.ec2#TargetStorageTier": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRuleFieldList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorFilterRuleField",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorFilterRuleField": {
      type: "enum",
    },
    "com.amazonaws.ec2#TrafficMirrorSessionFieldList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TrafficMirrorSessionField",
      },
    },
    "com.amazonaws.ec2#TrafficMirrorSessionField": {
      type: "enum",
    },
    "com.amazonaws.ec2#ModifyTransitGatewayOptions": {
      type: "structure",
      members: {
        AddTransitGatewayCidrBlocks: {
          target: "com.amazonaws.ec2#TransitGatewayCidrBlockStringList",
        },
        RemoveTransitGatewayCidrBlocks: {
          target: "com.amazonaws.ec2#TransitGatewayCidrBlockStringList",
        },
        VpnEcmpSupport: {
          target: "com.amazonaws.ec2#VpnEcmpSupportValue",
        },
        DnsSupport: {
          target: "com.amazonaws.ec2#DnsSupportValue",
        },
        SecurityGroupReferencingSupport: {
          target: "com.amazonaws.ec2#SecurityGroupReferencingSupportValue",
        },
        AutoAcceptSharedAttachments: {
          target: "com.amazonaws.ec2#AutoAcceptSharedAttachmentsValue",
        },
        DefaultRouteTableAssociation: {
          target: "com.amazonaws.ec2#DefaultRouteTableAssociationValue",
        },
        AssociationDefaultRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        DefaultRouteTablePropagation: {
          target: "com.amazonaws.ec2#DefaultRouteTablePropagationValue",
        },
        PropagationDefaultRouteTableId: {
          target: "com.amazonaws.ec2#TransitGatewayRouteTableId",
        },
        AmazonSideAsn: {
          target: "com.amazonaws.ec2#Long",
        },
      },
    },
    "com.amazonaws.ec2#ModifyTransitGatewayVpcAttachmentRequestOptions": {
      type: "structure",
      members: {
        DnsSupport: {
          target: "com.amazonaws.ec2#DnsSupportValue",
        },
        SecurityGroupReferencingSupport: {
          target: "com.amazonaws.ec2#SecurityGroupReferencingSupportValue",
        },
        Ipv6Support: {
          target: "com.amazonaws.ec2#Ipv6SupportValue",
        },
        ApplianceModeSupport: {
          target: "com.amazonaws.ec2#ApplianceModeSupportValue",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointLoadBalancerOptions": {
      type: "structure",
      members: {
        SubnetIds: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointSubnetIdList",
          locationName: "SubnetId",
        },
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPortRangeList",
          locationName: "PortRange",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointSubnetIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SubnetId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPortRangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPortRange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPortRange": {
      type: "structure",
      members: {
        FromPort: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        ToPort: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointEniOptions": {
      type: "structure",
      members: {
        Protocol: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointProtocol",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        PortRanges: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPortRangeList",
          locationName: "PortRange",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointRdsOptions": {
      type: "structure",
      members: {
        SubnetIds: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointSubnetIdList",
          locationName: "SubnetId",
        },
        Port: {
          target: "com.amazonaws.ec2#VerifiedAccessEndpointPortNumber",
        },
        RdsEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessEndpointCidrOptions": {
      type: "structure",
      members: {
        PortRanges: {
          target: "com.amazonaws.ec2#ModifyVerifiedAccessEndpointPortRangeList",
          locationName: "PortRange",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogOptions": {
      type: "structure",
      members: {
        S3: {
          target: "com.amazonaws.ec2#VerifiedAccessLogS3DestinationOptions",
        },
        CloudWatchLogs: {
          target:
            "com.amazonaws.ec2#VerifiedAccessLogCloudWatchLogsDestinationOptions",
        },
        KinesisDataFirehose: {
          target:
            "com.amazonaws.ec2#VerifiedAccessLogKinesisDataFirehoseDestinationOptions",
        },
        LogVersion: {
          target: "com.amazonaws.ec2#String",
        },
        IncludeTrustContext: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogS3DestinationOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        BucketName: {
          target: "com.amazonaws.ec2#String",
        },
        Prefix: {
          target: "com.amazonaws.ec2#String",
        },
        BucketOwner: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogCloudWatchLogsDestinationOptions": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
        LogGroup: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#VerifiedAccessLogKinesisDataFirehoseDestinationOptions":
      {
        type: "structure",
        members: {
          Enabled: {
            target: "com.amazonaws.ec2#Boolean",
          },
          DeliveryStream: {
            target: "com.amazonaws.ec2#String",
          },
        },
      },
    "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderOidcOptions": {
      type: "structure",
      members: {
        Issuer: {
          target: "com.amazonaws.ec2#String",
        },
        AuthorizationEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        TokenEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        UserInfoEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        ClientId: {
          target: "com.amazonaws.ec2#String",
        },
        ClientSecret: {
          target: "com.amazonaws.ec2#ClientSecretType",
        },
        Scope: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessTrustProviderDeviceOptions": {
      type: "structure",
      members: {
        PublicSigningKeyUrl: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ModifyVerifiedAccessNativeApplicationOidcOptions": {
      type: "structure",
      members: {
        PublicSigningKeyEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        Issuer: {
          target: "com.amazonaws.ec2#String",
        },
        AuthorizationEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        TokenEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        UserInfoEndpoint: {
          target: "com.amazonaws.ec2#String",
        },
        ClientId: {
          target: "com.amazonaws.ec2#String",
        },
        ClientSecret: {
          target: "com.amazonaws.ec2#ClientSecretType",
        },
        Scope: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#AddedPrincipalSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#AddedPrincipal",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#AddedPrincipal": {
      type: "structure",
      members: {
        PrincipalType: {
          target: "com.amazonaws.ec2#PrincipalType",
          locationName: "principalType",
        },
        Principal: {
          target: "com.amazonaws.ec2#String",
          locationName: "principal",
        },
        ServicePermissionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "servicePermissionId",
        },
        ServiceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "serviceId",
        },
      },
    },
    "com.amazonaws.ec2#PeeringConnectionOptionsRequest": {
      type: "structure",
      members: {
        AllowDnsResolutionFromRemoteVpc: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AllowEgressFromLocalClassicLinkToRemoteVpc: {
          target: "com.amazonaws.ec2#Boolean",
        },
        AllowEgressFromLocalVpcToRemoteClassicLink: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#PeeringConnectionOptions": {
      type: "structure",
      members: {
        AllowDnsResolutionFromRemoteVpc: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowDnsResolutionFromRemoteVpc",
        },
        AllowEgressFromLocalClassicLinkToRemoteVpc: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowEgressFromLocalClassicLinkToRemoteVpc",
        },
        AllowEgressFromLocalVpcToRemoteClassicLink: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "allowEgressFromLocalVpcToRemoteClassicLink",
        },
      },
    },
    "com.amazonaws.ec2#VpcTenancy": {
      type: "enum",
    },
    "com.amazonaws.ec2#ModifyVpnTunnelOptionsSpecification": {
      type: "structure",
      members: {
        TunnelInsideCidr: {
          target: "com.amazonaws.ec2#String",
        },
        TunnelInsideIpv6Cidr: {
          target: "com.amazonaws.ec2#String",
        },
        PreSharedKey: {
          target: "com.amazonaws.ec2#preSharedKey",
        },
        Phase1LifetimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        Phase2LifetimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        RekeyMarginTimeSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        RekeyFuzzPercentage: {
          target: "com.amazonaws.ec2#Integer",
        },
        ReplayWindowSize: {
          target: "com.amazonaws.ec2#Integer",
        },
        DPDTimeoutSeconds: {
          target: "com.amazonaws.ec2#Integer",
        },
        DPDTimeoutAction: {
          target: "com.amazonaws.ec2#String",
        },
        Phase1EncryptionAlgorithms: {
          target: "com.amazonaws.ec2#Phase1EncryptionAlgorithmsRequestList",
          locationName: "Phase1EncryptionAlgorithm",
        },
        Phase2EncryptionAlgorithms: {
          target: "com.amazonaws.ec2#Phase2EncryptionAlgorithmsRequestList",
          locationName: "Phase2EncryptionAlgorithm",
        },
        Phase1IntegrityAlgorithms: {
          target: "com.amazonaws.ec2#Phase1IntegrityAlgorithmsRequestList",
          locationName: "Phase1IntegrityAlgorithm",
        },
        Phase2IntegrityAlgorithms: {
          target: "com.amazonaws.ec2#Phase2IntegrityAlgorithmsRequestList",
          locationName: "Phase2IntegrityAlgorithm",
        },
        Phase1DHGroupNumbers: {
          target: "com.amazonaws.ec2#Phase1DHGroupNumbersRequestList",
          locationName: "Phase1DHGroupNumber",
        },
        Phase2DHGroupNumbers: {
          target: "com.amazonaws.ec2#Phase2DHGroupNumbersRequestList",
          locationName: "Phase2DHGroupNumber",
        },
        IKEVersions: {
          target: "com.amazonaws.ec2#IKEVersionsRequestList",
          locationName: "IKEVersion",
        },
        StartupAction: {
          target: "com.amazonaws.ec2#String",
        },
        LogOptions: {
          target: "com.amazonaws.ec2#VpnTunnelLogOptionsSpecification",
        },
        EnableTunnelLifecycleControl: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMonitoringList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceMonitoring",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceMonitoring": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#Monitoring",
          locationName: "monitoring",
        },
      },
    },
    "com.amazonaws.ec2#Status": {
      type: "enum",
    },
    "com.amazonaws.ec2#CidrAuthorizationContext": {
      type: "structure",
      members: {
        Message: {
          target: "com.amazonaws.ec2#String",
        },
        Signature: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#AsnAuthorizationContext": {
      type: "structure",
      members: {
        Message: {
          target: "com.amazonaws.ec2#String",
        },
        Signature: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#IpamCidrAuthorizationContext": {
      type: "structure",
      members: {
        Message: {
          target: "com.amazonaws.ec2#String",
        },
        Signature: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#VerificationMethod": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReservedInstanceLimitPrice": {
      type: "structure",
      members: {
        Amount: {
          target: "com.amazonaws.ec2#Double",
          locationName: "amount",
        },
        CurrencyCode: {
          target: "com.amazonaws.ec2#CurrencyCodeValues",
          locationName: "currencyCode",
        },
      },
    },
    "com.amazonaws.ec2#PurchaseRequestSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#PurchaseRequest",
        locationName: "PurchaseRequest",
      },
    },
    "com.amazonaws.ec2#PurchaseRequest": {
      type: "structure",
      members: {
        InstanceCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        PurchaseToken: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#PurchasedScheduledInstanceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstance",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#BillingProductList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#StringType": {
      type: "string",
    },
    "com.amazonaws.ec2#RegisterInstanceTagAttributeRequest": {
      type: "structure",
      members: {
        IncludeAllTagsOfInstance: {
          target: "com.amazonaws.ec2#Boolean",
        },
        InstanceTagKeys: {
          target: "com.amazonaws.ec2#InstanceTagKeySet",
          locationName: "InstanceTagKey",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastRegisteredGroupMembers": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainId",
        },
        RegisteredNetworkInterfaceIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "registeredNetworkInterfaceIds",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastRegisteredGroupSources": {
      type: "structure",
      members: {
        TransitGatewayMulticastDomainId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayMulticastDomainId",
        },
        RegisteredNetworkInterfaceIds: {
          target: "com.amazonaws.ec2#ValueStringList",
          locationName: "registeredNetworkInterfaceIds",
        },
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupIpAddress",
        },
      },
    },
    "com.amazonaws.ec2#ImageCriterionRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageCriterionRequest",
        locationName: "ImageCriterion",
      },
    },
    "com.amazonaws.ec2#ImageCriterionRequest": {
      type: "structure",
      members: {
        ImageProviders: {
          target: "com.amazonaws.ec2#ImageProviderRequestList",
          locationName: "ImageProvider",
        },
      },
    },
    "com.amazonaws.ec2#ImageProviderRequestList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ImageProviderRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ImageProviderRequest": {
      type: "string",
    },
    "com.amazonaws.ec2#NetworkAclAssociationId": {
      type: "string",
    },
    "com.amazonaws.ec2#ReportStatusType": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReasonCodesList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ReportInstanceReasonCodes",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ReportInstanceReasonCodes": {
      type: "enum",
    },
    "com.amazonaws.ec2#ReportInstanceStatusRequestDescription": {
      type: "string",
    },
    "com.amazonaws.ec2#RequestSpotLaunchSpecification": {
      type: "structure",
      members: {
        SecurityGroupIds: {
          target:
            "com.amazonaws.ec2#RequestSpotLaunchSpecificationSecurityGroupIdList",
          locationName: "SecurityGroupId",
        },
        SecurityGroups: {
          target:
            "com.amazonaws.ec2#RequestSpotLaunchSpecificationSecurityGroupList",
          locationName: "SecurityGroup",
        },
        AddressingType: {
          target: "com.amazonaws.ec2#String",
          locationName: "addressingType",
        },
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#BlockDeviceMappingList",
          locationName: "blockDeviceMapping",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "ebsOptimized",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#IamInstanceProfileSpecification",
          locationName: "iamInstanceProfile",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
          locationName: "imageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#InstanceType",
          locationName: "instanceType",
        },
        KernelId: {
          target: "com.amazonaws.ec2#KernelId",
          locationName: "kernelId",
        },
        KeyName: {
          target: "com.amazonaws.ec2#KeyPairNameWithResolver",
          locationName: "keyName",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#RunInstancesMonitoringEnabled",
          locationName: "monitoring",
        },
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#InstanceNetworkInterfaceSpecificationList",
          locationName: "NetworkInterface",
        },
        Placement: {
          target: "com.amazonaws.ec2#SpotPlacement",
          locationName: "placement",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#RamdiskId",
          locationName: "ramdiskId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
          locationName: "subnetId",
        },
        UserData: {
          target: "com.amazonaws.ec2#SensitiveUserData",
          locationName: "userData",
        },
      },
    },
    "com.amazonaws.ec2#RequestSpotLaunchSpecificationSecurityGroupIdList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RequestSpotLaunchSpecificationSecurityGroupList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#String",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ResetFpgaImageAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#ResetImageAttributeName": {
      type: "enum",
    },
    "com.amazonaws.ec2#RestoreSnapshotTierRequestTemporaryRestoreDays": {
      type: "integer",
    },
    "com.amazonaws.ec2#RevokedSecurityGroupRuleList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#RevokedSecurityGroupRule",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#RevokedSecurityGroupRule": {
      type: "structure",
      members: {
        SecurityGroupRuleId: {
          target: "com.amazonaws.ec2#SecurityGroupRuleId",
          locationName: "securityGroupRuleId",
        },
        GroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "groupId",
        },
        IsEgress: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "isEgress",
        },
        IpProtocol: {
          target: "com.amazonaws.ec2#String",
          locationName: "ipProtocol",
        },
        FromPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "fromPort",
        },
        ToPort: {
          target: "com.amazonaws.ec2#Integer",
          locationName: "toPort",
        },
        CidrIpv4: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIpv4",
        },
        CidrIpv6: {
          target: "com.amazonaws.ec2#String",
          locationName: "cidrIpv6",
        },
        PrefixListId: {
          target: "com.amazonaws.ec2#PrefixListResourceId",
          locationName: "prefixListId",
        },
        ReferencedGroupId: {
          target: "com.amazonaws.ec2#SecurityGroupId",
          locationName: "referencedGroupId",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
          locationName: "description",
        },
      },
    },
    "com.amazonaws.ec2#RunInstancesUserData": {
      type: "string",
    },
    "com.amazonaws.ec2#ElasticGpuSpecifications": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticGpuSpecification",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticInferenceAccelerators": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ElasticInferenceAccelerator",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#ElasticInferenceAccelerator": {
      type: "structure",
      members: {
        Type: {
          target: "com.amazonaws.ec2#String",
        },
        Count: {
          target: "com.amazonaws.ec2#ElasticInferenceAcceleratorCount",
        },
      },
    },
    "com.amazonaws.ec2#ElasticInferenceAcceleratorCount": {
      type: "integer",
    },
    "com.amazonaws.ec2#LaunchTemplateSpecification": {
      type: "structure",
      members: {
        LaunchTemplateId: {
          target: "com.amazonaws.ec2#LaunchTemplateId",
        },
        LaunchTemplateName: {
          target: "com.amazonaws.ec2#String",
        },
        Version: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMarketOptionsRequest": {
      type: "structure",
      members: {
        MarketType: {
          target: "com.amazonaws.ec2#MarketType",
        },
        SpotOptions: {
          target: "com.amazonaws.ec2#SpotMarketOptions",
        },
      },
    },
    "com.amazonaws.ec2#SpotMarketOptions": {
      type: "structure",
      members: {
        MaxPrice: {
          target: "com.amazonaws.ec2#String",
        },
        SpotInstanceType: {
          target: "com.amazonaws.ec2#SpotInstanceType",
        },
        BlockDurationMinutes: {
          target: "com.amazonaws.ec2#Integer",
        },
        ValidUntil: {
          target: "com.amazonaws.ec2#DateTime",
        },
        InstanceInterruptionBehavior: {
          target: "com.amazonaws.ec2#InstanceInterruptionBehavior",
        },
      },
    },
    "com.amazonaws.ec2#CpuOptionsRequest": {
      type: "structure",
      members: {
        CoreCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        ThreadsPerCore: {
          target: "com.amazonaws.ec2#Integer",
        },
        AmdSevSnp: {
          target: "com.amazonaws.ec2#AmdSevSnpSpecification",
        },
      },
    },
    "com.amazonaws.ec2#HibernationOptionsRequest": {
      type: "structure",
      members: {
        Configured: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#LicenseSpecificationListRequest": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LicenseConfigurationRequest",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#LicenseConfigurationRequest": {
      type: "structure",
      members: {
        LicenseConfigurationArn: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMetadataOptionsRequest": {
      type: "structure",
      members: {
        HttpTokens: {
          target: "com.amazonaws.ec2#HttpTokensState",
        },
        HttpPutResponseHopLimit: {
          target: "com.amazonaws.ec2#Integer",
        },
        HttpEndpoint: {
          target: "com.amazonaws.ec2#InstanceMetadataEndpointState",
        },
        HttpProtocolIpv6: {
          target: "com.amazonaws.ec2#InstanceMetadataProtocolState",
        },
        InstanceMetadataTags: {
          target: "com.amazonaws.ec2#InstanceMetadataTagsState",
        },
      },
    },
    "com.amazonaws.ec2#EnclaveOptionsRequest": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#PrivateDnsNameOptionsRequest": {
      type: "structure",
      members: {
        HostnameType: {
          target: "com.amazonaws.ec2#HostnameType",
        },
        EnableResourceNameDnsARecord: {
          target: "com.amazonaws.ec2#Boolean",
        },
        EnableResourceNameDnsAAAARecord: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#InstanceMaintenanceOptionsRequest": {
      type: "structure",
      members: {
        AutoRecovery: {
          target: "com.amazonaws.ec2#InstanceAutoRecoveryState",
        },
      },
    },
    "com.amazonaws.ec2#InstanceNetworkPerformanceOptionsRequest": {
      type: "structure",
      members: {
        BandwidthWeighting: {
          target: "com.amazonaws.ec2#InstanceBandwidthWeighting",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesLaunchSpecification": {
      type: "structure",
      members: {
        BlockDeviceMappings: {
          target: "com.amazonaws.ec2#ScheduledInstancesBlockDeviceMappingSet",
          locationName: "BlockDeviceMapping",
        },
        EbsOptimized: {
          target: "com.amazonaws.ec2#Boolean",
        },
        IamInstanceProfile: {
          target: "com.amazonaws.ec2#ScheduledInstancesIamInstanceProfile",
        },
        ImageId: {
          target: "com.amazonaws.ec2#ImageId",
        },
        InstanceType: {
          target: "com.amazonaws.ec2#String",
        },
        KernelId: {
          target: "com.amazonaws.ec2#KernelId",
        },
        KeyName: {
          target: "com.amazonaws.ec2#KeyPairName",
        },
        Monitoring: {
          target: "com.amazonaws.ec2#ScheduledInstancesMonitoring",
        },
        NetworkInterfaces: {
          target: "com.amazonaws.ec2#ScheduledInstancesNetworkInterfaceSet",
          locationName: "NetworkInterface",
        },
        Placement: {
          target: "com.amazonaws.ec2#ScheduledInstancesPlacement",
        },
        RamdiskId: {
          target: "com.amazonaws.ec2#RamdiskId",
        },
        SecurityGroupIds: {
          target: "com.amazonaws.ec2#ScheduledInstancesSecurityGroupIdSet",
          locationName: "SecurityGroupId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
        UserData: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesBlockDeviceMappingSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstancesBlockDeviceMapping",
        locationName: "BlockDeviceMapping",
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesBlockDeviceMapping": {
      type: "structure",
      members: {
        DeviceName: {
          target: "com.amazonaws.ec2#String",
        },
        Ebs: {
          target: "com.amazonaws.ec2#ScheduledInstancesEbs",
        },
        NoDevice: {
          target: "com.amazonaws.ec2#String",
        },
        VirtualName: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesEbs": {
      type: "structure",
      members: {
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Encrypted: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Iops: {
          target: "com.amazonaws.ec2#Integer",
        },
        SnapshotId: {
          target: "com.amazonaws.ec2#SnapshotId",
        },
        VolumeSize: {
          target: "com.amazonaws.ec2#Integer",
        },
        VolumeType: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesIamInstanceProfile": {
      type: "structure",
      members: {
        Arn: {
          target: "com.amazonaws.ec2#String",
        },
        Name: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesMonitoring": {
      type: "structure",
      members: {
        Enabled: {
          target: "com.amazonaws.ec2#Boolean",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesNetworkInterfaceSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstancesNetworkInterface",
        locationName: "NetworkInterface",
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesNetworkInterface": {
      type: "structure",
      members: {
        AssociatePublicIpAddress: {
          target: "com.amazonaws.ec2#Boolean",
        },
        DeleteOnTermination: {
          target: "com.amazonaws.ec2#Boolean",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
        DeviceIndex: {
          target: "com.amazonaws.ec2#Integer",
        },
        Groups: {
          target: "com.amazonaws.ec2#ScheduledInstancesSecurityGroupIdSet",
          locationName: "Group",
        },
        Ipv6AddressCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        Ipv6Addresses: {
          target: "com.amazonaws.ec2#ScheduledInstancesIpv6AddressList",
          locationName: "Ipv6Address",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#NetworkInterfaceId",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
        PrivateIpAddressConfigs: {
          target: "com.amazonaws.ec2#PrivateIpAddressConfigSet",
          locationName: "PrivateIpAddressConfig",
        },
        SecondaryPrivateIpAddressCount: {
          target: "com.amazonaws.ec2#Integer",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#SubnetId",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesSecurityGroupIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupId",
        locationName: "SecurityGroupId",
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesIpv6AddressList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstancesIpv6Address",
        locationName: "Ipv6Address",
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesIpv6Address": {
      type: "structure",
      members: {
        Ipv6Address: {
          target: "com.amazonaws.ec2#Ipv6Address",
        },
      },
    },
    "com.amazonaws.ec2#Ipv6Address": {
      type: "string",
    },
    "com.amazonaws.ec2#PrivateIpAddressConfigSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#ScheduledInstancesPrivateIpAddressConfig",
        locationName: "PrivateIpAddressConfigSet",
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesPrivateIpAddressConfig": {
      type: "structure",
      members: {
        Primary: {
          target: "com.amazonaws.ec2#Boolean",
        },
        PrivateIpAddress: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
    "com.amazonaws.ec2#ScheduledInstancesPlacement": {
      type: "structure",
      members: {
        AvailabilityZone: {
          target: "com.amazonaws.ec2#String",
        },
        GroupName: {
          target: "com.amazonaws.ec2#PlacementGroupName",
        },
      },
    },
    "com.amazonaws.ec2#InstanceIdSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceId",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#MaxResults": {
      type: "integer",
    },
    "com.amazonaws.ec2#LocalGatewayRouteList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#LocalGatewayRoute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastGroupList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayMulticastGroup",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TransitGatewayMulticastGroup": {
      type: "structure",
      members: {
        GroupIpAddress: {
          target: "com.amazonaws.ec2#String",
          locationName: "groupIpAddress",
        },
        TransitGatewayAttachmentId: {
          target: "com.amazonaws.ec2#String",
          locationName: "transitGatewayAttachmentId",
        },
        SubnetId: {
          target: "com.amazonaws.ec2#String",
          locationName: "subnetId",
        },
        ResourceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceId",
        },
        ResourceType: {
          target: "com.amazonaws.ec2#TransitGatewayAttachmentResourceType",
          locationName: "resourceType",
        },
        ResourceOwnerId: {
          target: "com.amazonaws.ec2#String",
          locationName: "resourceOwnerId",
        },
        NetworkInterfaceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "networkInterfaceId",
        },
        GroupMember: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "groupMember",
        },
        GroupSource: {
          target: "com.amazonaws.ec2#Boolean",
          locationName: "groupSource",
        },
        MemberType: {
          target: "com.amazonaws.ec2#MembershipType",
          locationName: "memberType",
        },
        SourceType: {
          target: "com.amazonaws.ec2#MembershipType",
          locationName: "sourceType",
        },
      },
    },
    "com.amazonaws.ec2#MembershipType": {
      type: "enum",
    },
    "com.amazonaws.ec2#TransitGatewayRouteList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TransitGatewayRoute",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceStateChangeList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#InstanceStateChange",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#InstanceStateChange": {
      type: "structure",
      members: {
        InstanceId: {
          target: "com.amazonaws.ec2#String",
          locationName: "instanceId",
        },
        CurrentState: {
          target: "com.amazonaws.ec2#InstanceState",
          locationName: "currentState",
        },
        PreviousState: {
          target: "com.amazonaws.ec2#InstanceState",
          locationName: "previousState",
        },
      },
    },
    "com.amazonaws.ec2#TerminateConnectionStatusSet": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#TerminateConnectionStatus",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#TerminateConnectionStatus": {
      type: "structure",
      members: {
        ConnectionId: {
          target: "com.amazonaws.ec2#String",
          locationName: "connectionId",
        },
        PreviousStatus: {
          target: "com.amazonaws.ec2#ClientVpnConnectionStatus",
          locationName: "previousStatus",
        },
        CurrentStatus: {
          target: "com.amazonaws.ec2#ClientVpnConnectionStatus",
          locationName: "currentStatus",
        },
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleDescriptionList": {
      type: "list",
      member: {
        target: "com.amazonaws.ec2#SecurityGroupRuleDescription",
        locationName: "item",
      },
    },
    "com.amazonaws.ec2#SecurityGroupRuleDescription": {
      type: "structure",
      members: {
        SecurityGroupRuleId: {
          target: "com.amazonaws.ec2#String",
        },
        Description: {
          target: "com.amazonaws.ec2#String",
        },
      },
    },
  },
} as const;

// Convenience lookup functions
export function getOperation(name: string): OperationMeta | undefined {
  return ec2ModelMeta.operations[name];
}

export function getShape(id: string): ShapeMeta | undefined {
  return ec2ModelMeta.shapes[id];
}

// Reverse lookup for response wrapper to operation
const wrapperToOperation = new Map<string, string>();
for (const [name, op] of Object.entries(ec2ModelMeta.operations)) {
  if (op.responseWrapper) {
    wrapperToOperation.set(op.responseWrapper, name);
  }
}

export function getOperationByWrapper(
  wrapper: string,
): OperationMeta | undefined {
  const opName = wrapperToOperation.get(wrapper);
  return opName ? ec2ModelMeta.operations[opName] : undefined;
}
